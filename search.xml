<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【JavaWeb】JavaWeb从入门到实战</title>
      <link href="/2022/03/25/javaWeb1_2/"/>
      <url>/2022/03/25/javaWeb1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaWeb入门到实战视频：<a href="https://www.bilibili.com/video/BV12J411M7Sj?p=3">【狂神说Java】JavaWeb入门到实战_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Tomcat详解"><a href="#Tomcat详解" class="headerlink" title="Tomcat详解"></a>Tomcat详解</h3><h3 id="Http详解"><a href="#Http详解" class="headerlink" title="Http详解"></a>Http详解</h3>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaWeb】JavaWeb从入门到实战</title>
      <link href="/2022/03/24/javaWeb1_1/"/>
      <url>/2022/03/24/javaWeb1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaWeb入门到实战视频：<a href="https://www.bilibili.com/video/BV12J411M7Sj?p=1">【狂神说Java】JavaWeb入门到实战_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Web的基本概念"><a href="#Web的基本概念" class="headerlink" title="Web的基本概念"></a>Web的基本概念</h3><p><strong>基本概念</strong></p><p>web开发：</p><ul><li>web 网页 <a href="http://www.jokerdig.com/">www.jokerdig.com</a></li><li>静态web<ul><li>html，css…</li><li>静态网页是相对于 动态网页 而言，是指没有 后台数据库 、不含程序和不可交互的网页。</li></ul></li><li>动态web<ul><li>“WEB的页面展示效果因时因人而变”，而且动态WEB具有交互性，WEB的页面的内容可以动态更新。</li><li>技术栈：Servlet/JSP，ASP，PHP…</li></ul></li></ul><p>在Java中，动态web资源开发的技术统称为JavaWeb。</p><p><strong>Web应用程序</strong></p><p>web应用程序：可以提供浏览器访问的程序；</p><ul><li><p>页面资源</p></li><li><p>URL</p></li><li><p>Tomcat服务器</p></li></ul><p>web程序编写好，需要搭建到服务器上，可以使外界访问；</p><p><strong>静态Web</strong></p><ul><li><code>*.htm,*.html</code>都是网页后缀，存放到服务器后我们可以直接进行读取；</li><li>静态Web的缺点：<ul><li>Web页面无法动态更新，所有用户看到都是同一个页面<ul><li>轮播图，点击特效等实现伪动态</li><li>JavaScript</li><li>VBScript</li></ul></li><li>无法和数据库交互，数据无法持久化</li></ul></li></ul><p><strong>动态Web</strong></p><p>页面会动态展示：Web页面展示的效果因人而异</p><p>缺点：</p><ul><li>加入服务器动态web资源出现错误，我们需要重新编写我们的后台程序；(维护)</li></ul><p>优点：</p><ul><li>Web页面无法动态更新，用户可以看到不同的页面</li><li>可以和数据库交互(可以数据持久化：注册，用户信息等…)</li></ul><h3 id="Web服务器讲解"><a href="#Web服务器讲解" class="headerlink" title="Web服务器讲解"></a>Web服务器讲解</h3><p><strong>技术讲解</strong></p><p>ASP</p><ul><li>微软：国内最早流行ASP</li><li>在Html中嵌入了VB的脚本，ASP+COM</li><li>在ASP开发中，基本是一个页面都有大量的业务代码，页面混乱</li><li>维护成本高</li><li>C#，IIS</li></ul><p>PHP</p><ul><li>PHP开发速度快，功能强大，可跨平台，代码简单(WordPress)</li><li>无法承载大访问量的情况(局限性)</li></ul><p>JSP/Servlet</p><blockquote><p>B/S：浏览器和服务器</p><p>C/S：客户端和服务器</p></blockquote><ul><li>sun公司主推B/S架构</li><li>基于Java语言(絮叨开源组件也都是Java写的)</li><li>可以承载三高问题带来影响</li><li>语法像ASP</li></ul><p><strong>Web服务器</strong></p><p>服务器是一种被动操作，用来处理用户的一些请求和给用户响应信息；</p><p>IIS</p><ul><li>微软的服务器，ASP..Windows中自带</li></ul><p>Tomcat</p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203241341982.png" alt="image-20220324134136883"></p><ul><li>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。</li><li>Tomcat最新版本为10.0.14</li><li>工作3-5年后，可以尝试手写Tomcat服务器，了解其底层代码和事项原理</li></ul><blockquote><p><a href="https://tomcat.apache.org/whichversion.html">Apache Tomcat® - 下载版本选择</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(15)</title>
      <link href="/2022/03/23/mysql2_6/"/>
      <url>/2022/03/23/mysql2_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=43">【狂神说Java】MySQL最新教程通俗易懂<em>哔哩哔哩</em>bilibili</a></p><p>MySQL笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzoub.com/iQLL101wpq4j">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1bbu_w6T7v9VL_37VP3pRoA">下载地址</a> 提取码：agtc</p></blockquote><h3 id="使用IDEA连接数据库"><a href="#使用IDEA连接数据库" class="headerlink" title="使用IDEA连接数据库"></a>使用IDEA连接数据库</h3><p><strong>连接步骤</strong></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203231201719.png" alt="image-20220323120141603"></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203231211146.png" alt="image-20220323121117073"></p><p><strong>修改数据库内容后一定要提交</strong></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203231217491.png" alt="image-20220323121755271"></p><p><strong>编写SQL语句</strong></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203231219177.png" alt="image-20220323121911947"></p><h3 id="JDBC操作事务"><a href="#JDBC操作事务" class="headerlink" title="JDBC操作事务"></a>JDBC操作事务</h3><blockquote><p>要么都成功，要么都失败</p></blockquote><p><strong>ACID原则</strong></p><p>原子性：要么都完成，要么都不完成</p><p>一致性：总数不变</p><p>隔离性：多个进程互不干扰</p><p>持久性：一旦提交不可逆</p><p><strong>隔离性的问题</strong></p><p>脏读：一个事务读取了另一个没有提交的事务</p><p>不可重复读：在同一个事务内，重复读取表中的数据，表的数据发生改变</p><p>虚读：在一个事务内，读取到了别人插入的数据，导致前后读出结果不一致</p><p><strong>例子：</strong></p><p>创建account表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建客户表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> account(</span><br><span class="line">    `id` <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">40</span>),</span><br><span class="line">    `money` <span class="type">float</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(`name`,`money`) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;A&#x27;</span>,<span class="number">1000</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">1000</span>),(<span class="string">&#x27;C&#x27;</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p><strong>模拟事务进行转账</strong></p><ol><li>开启事务<code>conn.setAutoCommit(false)</code></li><li>一组业务执行完毕，提交事务</li><li>可在catch语句中显示定义的回滚语句</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/23 - 12:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransaction1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">// 关闭数据库自动提交,自动开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            <span class="comment">// 模拟A为B转账100</span></span><br><span class="line">            String sql1 = <span class="string">&quot;update account set money=money-100 where name=&#x27;A&#x27;&quot;</span>;</span><br><span class="line">            ps=conn.prepareStatement(sql1);</span><br><span class="line">            ps.executeUpdate();</span><br><span class="line">            String sql2 = <span class="string">&quot;update account set money=money+100 where name=&#x27;B&#x27;&quot;</span>;</span><br><span class="line">            ps=conn.prepareStatement(sql2);</span><br><span class="line">            ps.executeUpdate();</span><br><span class="line">            <span class="comment">// 业务完毕 提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">            System.out.println(<span class="string">&quot;提交成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            <span class="comment">// 提交失败 就回滚数据</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils.release(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DBCP-C3P0连接池"><a href="#DBCP-C3P0连接池" class="headerlink" title="DBCP-C3P0连接池"></a>DBCP-C3P0连接池</h3><blockquote><p>数据库连接–执行完毕–释放</p><p>连接-&gt;释放 十分浪费资源</p></blockquote><p><strong>池化技术：准备一些预先的资源，过来就连接准备好的；</strong></p><blockquote><p>– 开启–业务员：等待–服务–关闭–</p></blockquote><p>常用连接数若为10个</p><p>最小连接数：10个</p><p>最大连接数：15(业务最高承载上限)</p><p>等待超时：100ms</p><p>编写连接池：实现一个接口 DataSource</p><blockquote><p>开源数据源实现</p></blockquote><p>DBCP</p><p>C3P0</p><p>Druid：阿里巴巴</p><p>使用这些数据库连接池之后，在项目开法中就不需要编写连接数据库的代码。</p><blockquote><p>DBCP</p></blockquote><p>需要用到的jar包</p><p>commons-dbcp-版本号.jar</p><p>commons-pool-版本号.jar</p><p>commons-logging-版本号.jar</p><p><strong>例子</strong></p><p><code>dbcp.properties</code>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">50</span></span><br><span class="line"></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">10000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">connectionProperties</span>=<span class="string">useUnicode=true;characterEncoding=UTF8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">defaultAutoCommit</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p><code>JDBCUtils_DBCP</code>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/23 - 13:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils_DBCP</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BasicDataSource dataS = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = JDBCUtils_DBCP.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcp.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(in);</span><br><span class="line">            <span class="comment">// 创建数据源 工厂模式</span></span><br><span class="line">            dataS = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> dataS.getConnection(); <span class="comment">// 从数据源获取连接</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils_DBCP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/23 - 13:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDBCP</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils_DBCP.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;select * from users where id = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;id：&quot;</span>+rs.getInt(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; name：&quot;</span>+rs.getString(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; password：&quot;</span>+rs.getString(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils_DBCP.release(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>C3P0</p></blockquote><p>需要用到的jar包</p><p>c3p0-版本号.jar</p><p>mchange-commons-java-版本号.jar</p><p><strong>例子</strong></p><p><code>c3p0-config.xml</code>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;MySQL&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0默认配置，下面还可以配置多个数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/jdbcstudy?useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化时获取连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池中保留的最大连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>50<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 最大空闲时间，多少秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>JDBCUtils_C3P0</code>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils_C3P0</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataS = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 配置文件写法</span></span><br><span class="line">            dataS=<span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;MySQL&quot;</span>);</span><br><span class="line">            <span class="comment">// 代码也可一直接配置</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> dataS.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils_C3P0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/23 - 13:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestC3P0</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils_C3P0.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;select * from users where id = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;id：&quot;</span>+rs.getInt(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; name：&quot;</span>+rs.getString(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; password：&quot;</span>+rs.getString(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils_C3P0.release(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结论</p></blockquote><p>无论使用什么数据源，本质还是一样的，<code>DataSource</code>接口不会变；</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java常用类</title>
      <link href="/2022/03/22/javaSE1_9/"/>
      <url>/2022/03/22/javaSE1_9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Java常用类</p><ul><li>字符串相关：String、 StringBuffer、 StringBuilder</li><li>包装类：Integer等</li><li>日期相关： Date、 Calendar、 SimpleDateFormat</li><li>其他：Math、Random、Runtime、System</li></ul></blockquote><h3 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h3><p>创建方式1：赋值常量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;hello word&quot;</span>;</span><br></pre></td></tr></table></figure><p>使用双引号括起来的内容叫字符串常量值，字符串常量值分配在方法区的常量池中。<br>常量池的好处：</p><ol><li>节约内存，反复使用，不需要重新分配</li><li>性能高，直接调用，省去创建对象的时间</li></ol><p>通过字节数组创建字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String(<span class="keyword">byte</span>[] bytes,String charset)</span><br><span class="line">bytes 字节数组</span><br><span class="line">charset 字符编码，一般使用UTF-<span class="number">8</span>通过字符数组创建字符串</span><br></pre></td></tr></table></figure><p>通过字符数组创建字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String(<span class="keyword">char</span>[] chars)</span><br><span class="line"><span class="keyword">char</span>[] chars = &#123;‘z’,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;g&#x27;</span>&#125;;</span><br><span class="line">String name = <span class="keyword">new</span> String(chars); </span><br></pre></td></tr></table></figure><p><strong>String常用方法</strong></p><p>获得字符串长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>获得子字符串出现的位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String s)</span></span>;</span><br></pre></td></tr></table></figure><p>在字符串中查找子字符串第一次出现的位置，没找到返回-1；</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String s,<span class="keyword">int</span> start)</span></span>; </span><br></pre></td></tr></table></figure><p>指定了开始查找的位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(String s)</span></span>;</span><br></pre></td></tr></table></figure><p>截取字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>;</span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start)</span></span>;</span><br></pre></td></tr></table></figure><p>替换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">replace</span><span class="params">(String oldStr,String newStr)</span></span>;</span><br></pre></td></tr></table></figure><p>比较字符串内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是否完全相同</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(String s)</span></span>;</span><br><span class="line"><span class="comment">// 忽略大小写进行比较</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">equalsIgnoreCase</span><span class="params">(String s)</span></span>;  </span><br><span class="line"><span class="comment">// 判断字符串是否以某字符串开头</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String s)</span></span>;</span><br><span class="line"><span class="comment">// 判断字符串是否以某字符串结尾</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">endsWith</span><span class="params">(String s)</span></span>;</span><br><span class="line"><span class="comment">// 比较大小，返回正数（大于）、负数（小于）、0（相等）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(String s)</span></span>;</span><br></pre></td></tr></table></figure><p>大小写转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">toUpperCase</span><span class="params">()</span></span>; <span class="comment">// 大写</span></span><br><span class="line"><span class="function">String <span class="title">toLowerCase</span><span class="params">()</span></span>; <span class="comment">// 小写</span></span><br></pre></td></tr></table></figure><p>去左右空格</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">trim</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>拆分字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意：某些特殊符号分割符需要进行转义，如：\\+</span></span><br><span class="line">String[] split(String separator);</span><br></pre></td></tr></table></figure><h3 id="StringBuilder类"><a href="#StringBuilder类" class="headerlink" title="StringBuilder类"></a>StringBuilder类</h3><p>如果字符串变量需要频繁修改，就会创建大量字符串对象，大量消耗内存空间。<br>为了解决这个问题，可以使用StringBuilder。</p><p>String和StringBuilder的区别：</p><ul><li>String的字符串是不可修改，如果修改会创建新字符串，浪费内存。</li><li>StringBuilder的字符串是可以修改的，不会创建新字符串。</li></ul><p>创建方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建空值的对象</span></span><br><span class="line">StringBuilder strb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">// 创建有默认值的对象</span></span><br><span class="line">StringBuilder strb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;默认值&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>StringBuilder常用方法</strong><br>转换为String</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">toString</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>追加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">StringBuilder <span class="title">append</span><span class="params">(String str)</span></span>;</span><br></pre></td></tr></table></figure><p>替换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">StringBuilder <span class="title">replace</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end,String newS)</span></span>;</span><br></pre></td></tr></table></figure><p>插入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">StringBuilder <span class="title">insert</span><span class="params">(<span class="keyword">int</span> offset,String s)</span></span>;</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">StringBuilder <span class="title">delete</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>;</span><br></pre></td></tr></table></figure><p>反转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">StringBuilder <span class="title">reverse</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p><strong>StringBuffer类</strong><br>StringBuffer的特点和StringBuilder相似，都是在自身的数组上进行的修改，常用方法也一样。<br>不同点：</p><ul><li>StringBuffer的方法是线程安全的，StringBuilder是非线程安全</li><li>StringBuilder的执行效率高于StringBuffer</li></ul><h3 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h3><table><thead><tr><th align="center">基本类型</th><th align="center">包装类</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">Integer</td></tr><tr><td align="center">byte</td><td align="center">Byte</td></tr><tr><td align="center">short</td><td align="center">Short</td></tr><tr><td align="center">long</td><td align="center">Long</td></tr><tr><td align="center">float</td><td align="center">Float</td></tr><tr><td align="center">double</td><td align="center">Double</td></tr><tr><td align="center">char</td><td align="center">Character</td></tr><tr><td align="center">boolean</td><td align="center">Boolean</td></tr></tbody></table><p>创建方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer num1 = <span class="number">1000</span>;</span><br><span class="line">Integer num2 = <span class="keyword">new</span> Integer(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h3 id="Date类"><a href="#Date类" class="headerlink" title="Date类"></a>Date类</h3><p>处理日期时间<br>创建方法1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获得当前的时间</span></span><br><span class="line">Date date = <span class="keyword">new</span> Date(); </span><br></pre></td></tr></table></figure><p>创建方法2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定时间的1900-1-1到现在的毫秒数</span></span><br><span class="line">Date date = <span class="keyword">new</span> Date(<span class="keyword">long</span>); </span><br></pre></td></tr></table></figure><p>常用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getYear</span><span class="params">()</span></span>;<span class="comment">// 获得年</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMonth</span><span class="params">()</span></span>;<span class="comment">// 获得月</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getDate</span><span class="params">()</span></span>;<span class="comment">// 获得天</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHours</span><span class="params">()</span></span>;<span class="comment">// 获得小时</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMinutes</span><span class="params">()</span></span>;<span class="comment">// 获得分钟</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSeconds</span><span class="params">()</span></span>;<span class="comment">// 获得分钟</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setYear</span><span class="params">(<span class="keyword">int</span> year)</span></span>; <span class="comment">// 设置年</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Calendar-类"><a href="#Calendar-类" class="headerlink" title="Calendar 类"></a>Calendar 类</h3><p>日历类可以获得和修改日期的某个部分<br>创建Calendar对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Calendar calendar = Calendar.getInstance();</span><br></pre></td></tr></table></figure><p>常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">get(日期类型)   <span class="comment">// 获得日期的某个部分</span></span><br><span class="line">Calendar.YEAR</span><br><span class="line">Calendar.MONTH  <span class="comment">// 月份从0开始</span></span><br><span class="line">....</span><br><span class="line">set(日期类型，数值）<span class="comment">// 设置日期的某个部分</span></span><br><span class="line">add(日期类型，数值）<span class="comment">// 实现日期某个部分的追溯</span></span><br></pre></td></tr></table></figure><h3 id="SimpleDateFormat类"><a href="#SimpleDateFormat类" class="headerlink" title="SimpleDateFormat类"></a>SimpleDateFormat类</h3><p>对日期进行格式化<br>创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;日期格式字符串&quot;</span>);</span><br><span class="line">日期格式字符串，如：<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span></span><br><span class="line">yyyy代表<span class="number">4</span>位的年份</span><br><span class="line">MM代表<span class="number">2</span>位的月份</span><br><span class="line">dd代表<span class="number">2</span>位的日期</span><br><span class="line">hh/HH<span class="number">12</span>小时制/<span class="number">24</span>小时制</span><br><span class="line">mm代表分钟</span><br><span class="line">ss代表秒钟</span><br><span class="line">a代表AM/PM</span><br><span class="line">将日期进行格式化</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">format</span><span class="params">(Date对象)</span></span>;</span><br></pre></td></tr></table></figure><p>将字符串转换为日期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Date <span class="title">parse</span><span class="params">(String对象)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h3><p>数学运算</p><table><thead><tr><th align="center">作用</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">求绝对值</td><td align="center">Math.abs(-10) –&gt; 10</td></tr><tr><td align="center">四舍五入取整</td><td align="center">Math.round(2.6) –&gt; 3</td></tr><tr><td align="center">求两个数最大值</td><td align="center">Math.max(2,10) –&gt; 10</td></tr><tr><td align="center">求两个数最小值</td><td align="center">Math.min(2,10) –&gt; 2</td></tr><tr><td align="center">随机数</td><td align="center">Math.random() –&gt; 0 ~ 1之间任意小数</td></tr><tr><td align="center">求平方根</td><td align="center">Math.sqrt(16) – &gt; 4</td></tr><tr><td align="center">求幂</td><td align="center">Math.pow(2,3) – &gt; 8</td></tr></tbody></table><h3 id="Random类"><a href="#Random类" class="headerlink" title="Random类"></a>Random类</h3><p><strong>获得随机数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Random random = <span class="keyword">new</span> Random();</span><br><span class="line">random.nextInt(<span class="number">100</span>); <span class="comment">//0 ~ 100间随机整数</span></span><br></pre></td></tr></table></figure><p><strong>Runtime类</strong><br>系统运行时，获得和系统有关的信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime rt = Runtime.getRuntime();</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">作用</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">freeMemory()</td><td align="center">获得系统空闲内存数</td></tr><tr><td align="center">totalMemory()</td><td align="center">获得总内存数</td></tr><tr><td align="center">availableProcessors()</td><td align="center">获得处理器个数</td></tr><tr><td align="center">gc()</td><td align="center">调用垃圾收集器</td></tr><tr><td align="center">exec(String cmd)</td><td align="center">调用系统程序</td></tr><tr><td align="center">exit(int status)</td><td align="center">退出系统</td></tr></tbody></table><p>PS：GC(Garbege Collector)垃圾收集器，JVM会单独开一线程，定时扫描内存中没有使用的对象。<br>GC的启动没有特定的时间，如果想唤醒GC，可以调用gc方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="keyword">new</span> String(<span class="string">&quot;xxxx&quot;</span>); <span class="comment">//新的String对象</span></span><br><span class="line">s = <span class="keyword">null</span>; <span class="comment">//没有引用指向的String对象会被回收</span></span><br></pre></td></tr></table></figure><h3 id="System类"><a href="#System类" class="headerlink" title="System类"></a>System类</h3><table><thead><tr><th align="center">作用</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">currentTimeMillis()</td><td align="center">获得当前系统时间的毫秒数</td></tr><tr><td align="center">gc()</td><td align="center">调用垃圾收集器</td></tr><tr><td align="center">exit(int status)</td><td align="center">退出系统</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】JavaI/O流</title>
      <link href="/2022/03/22/javaSE2_1/"/>
      <url>/2022/03/22/javaSE2_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Java.io 包几乎包含了所有操作输入、输出需要的类。所有这些流类代表了输入源和输出目标。</p><p>Java.io 包中的流支持很多种格式，比如：基本类型、对象、本地化字符集等等。</p><p>一个流可以理解为一个数据的序列。输入流表示从一个源读取数据，输出流表示向一个目标写数据。</p></blockquote><h3 id="从控制台输入和读取"><a href="#从控制台输入和读取" class="headerlink" title="从控制台输入和读取"></a>从控制台输入和读取</h3><p><strong>控制台输入</strong></p><p>Java 的控制台输入由 System.in 完成。</p><p>为了获得一个绑定到控制台的字符流，你可以把 System.in 包装在一个 BufferedReader 对象中来创建一个字符流。</p><p>下面是创建 BufferedReader 的基本语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span>                       InputStreamReader(System.in));</span><br></pre></td></tr></table></figure><p>BufferedReader 对象创建后，我们便可以使用 read() 方法从控制台读取一个字符，或者用 readLine() 方法读取一个字符串。</p><p><strong>控制台输入多个字符</strong></p><p>BufferedReader 对象读取一个字符要使用 read() 方法，它的语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">( )</span> <span class="keyword">throws</span> IOException</span></span><br></pre></td></tr></table></figure><p>每次调用 read() 方法，它从输入流读取一个字符并把该字符作为整数值返回。 当流结束的时候返回 -1。该方法抛出 IOException。</p><p>下面的程序示范了用 read() 方法从控制台不断读取字符直到用户输入<strong>J</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用 BufferedReader 在控制台读取字符</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BRRead</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> sa;</span><br><span class="line">        <span class="comment">// 使用 System.in 创建 BufferedReader</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        System.out.println(<span class="string">&quot;输入字符, 按下 &#x27;J&#x27; 键退出。&quot;</span>);</span><br><span class="line">        <span class="comment">// 读取字符</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            sa = (<span class="keyword">char</span>) br.read();</span><br><span class="line">            System.out.println(sa);</span><br><span class="line">        &#125; <span class="keyword">while</span> (sa != <span class="string">&#x27;j&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>控制台读取字符串</strong></p><p>从标准输入读取一个字符串需要使用 BufferedReader 的 readLine() 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">readLine</span><span class="params">( )</span> <span class="keyword">throws</span> IOException</span></span><br></pre></td></tr></table></figure><p>下面的程序读取和显示字符行直到你输入了单词”end”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用 BufferedReader 在控制台读取字符</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BRReadLines</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 使用 System.in 创建 BufferedReader</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        String str;</span><br><span class="line">        System.out.println(<span class="string">&quot;Enter lines of text.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Enter &#x27;end&#x27; to quit.&quot;</span>);</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            str = br.readLine();</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125; <span class="keyword">while</span> (!str.equals(<span class="string">&quot;end&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="FileInputStream-FileOutStream"><a href="#FileInputStream-FileOutStream" class="headerlink" title="FileInputStream/FileOutStream"></a>FileInputStream/FileOutStream</h3><p><strong>FileInputStream</strong></p><p>该流用于从文件读取数据，它的对象可以用关键字 new 来创建。</p><p>可以使用字符串类型的文件名来创建一个输入流对象来读取文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream file = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:/java/helloword&quot;</span>);</span><br></pre></td></tr></table></figure><p>也可以使用一个文件对象来创建一个输入流对象来读取文件。我们首先得使用 File() 方法来创建一个文件对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;D:/java/helloword&quot;</span>); InputStream in = <span class="keyword">new</span> FileInputStream(file);</span><br></pre></td></tr></table></figure><p>创建了InputStream对象，就可以使用下面的方法来读取流或者进行其他的流操作。</p><table><thead><tr><th align="center">序号</th><th align="center">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><strong>public void close() throws IOException{}</strong> 关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。</td></tr><tr><td align="center">2</td><td align="center"><strong>protected void finalize()throws IOException {}</strong> 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。</td></tr><tr><td align="center">3</td><td align="center"><strong>public void write(int w)throws IOException{}</strong> 这个方法把指定的字节写到输出流中。</td></tr><tr><td align="center">4</td><td align="center"><strong>public void write(byte[] w)</strong> 把指定数组中w.length长度的字节写到OutputStream中。</td></tr></tbody></table><p><strong>FileOutputStream</strong></p><p>该类用来创建一个文件并向文件中写数据。</p><p>如果该流在打开文件进行输出前，目标文件不存在，那么该流会创建该文件。</p><p>有以下两种方法来创建</p><p>使用字符串类型的文件名来创建一个输出流对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OutputStream file = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:/java/helloword&quot;</span>)</span><br></pre></td></tr></table></figure><p>也可以使用一个文件对象来创建一个输出流来写文件。</p><p>我们首先得使用File()方法来创建一个文件对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;D:/java/helloword&quot;</span>); OutputStream fOut = <span class="keyword">new</span> FileOutputStream(file);</span><br></pre></td></tr></table></figure><p>创建OutputStream 对象完成后，就可以使用下面的方法来写入流或者进行其他的流操作。</p><table><thead><tr><th align="center">序号</th><th align="center">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><strong>public void close() throws IOException{}</strong> 关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。</td></tr><tr><td align="center">2</td><td align="center"><strong>protected void finalize()throws IOException {}</strong> 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。</td></tr><tr><td align="center">3</td><td align="center"><strong>public void write(int w)throws IOException{}</strong> 这个方法把指定的字节写到输出流中。</td></tr><tr><td align="center">4</td><td align="center"><strong>public void write(byte[] w)</strong> 把指定数组中w.length长度的字节写到OutputStream中。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java集合</title>
      <link href="/2022/03/22/javaSE2_2/"/>
      <url>/2022/03/22/javaSE2_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文参考：<a href="https://www.cnblogs.com/CoLo/p/15029845.html">JavaSE-集合 - Zh1z3ven - 博客园 (cnblogs.com)</a></p><p>集合类提供一种存储空间可变的存储模型，存储数据的容量可以随时发生改变，比如<code>ArrayList</code>。</p><p>集合按照存储的结构可以分为两类，分别是单列集合<code>java.util.Collection</code>和双列集合<code>java.util.Map</code>，这里就先来讲讲<code>collection</code>集合。</p></blockquote><h3 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span>     <span class="comment">// 把给定的对象添加到当前集合中 。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span>         <span class="comment">// 清空集合中所有的元素。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(E e)</span>  <span class="comment">// 把给定的对象在当前集合中删除。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span><span class="comment">// 判断当前集合中是否包含给定的对象。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span>    <span class="comment">// 判断当前集合是否为空。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span>           <span class="comment">// 返回集合中元素的个数。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object[] <span class="title">toArray</span><span class="params">()</span>   <span class="comment">// 把集合中的元素，存储到数组中。</span></span></span><br></pre></td></tr></table></figure><h3 id="Iterator迭代器"><a href="#Iterator迭代器" class="headerlink" title="Iterator迭代器"></a>Iterator迭代器</h3><p>java给我们提供了<code>Iterator</code>接口，也就是迭代器，该接口也是集合的一种。也是集合专用的一种遍历方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; it = col.iterator();</span><br></pre></td></tr></table></figure><p>集合的<code>iterator()</code>方法返回该集合元素的一个迭代器对象，之后就可以通过此对象的<code>hashNext()</code>和<code>next()</code>遍历这个集合。</p><p><code>next()</code>:返回迭代的下一个元素。</p><p><code>hasNext()</code>:如果仍有元素可以迭代，则返回 true，否则返回false。</p><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p><code>List</code>接口是<code>Collection</code>的子接口，<br><code>List</code>接口里面允许出现重复元素得，在程序中可以通过索引来访问。<br><code>List</code>接口存储的数据是有序的。</p><p><code>List</code>的特有方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">int</span> index, Element) <span class="comment">// 在指定位置插入指定的元素</span></span><br><span class="line">remove(<span class="keyword">int</span> index)       <span class="comment">// 删除指定位置处的元素，返回被删除的元素</span></span><br><span class="line">set(<span class="keyword">int</span> index, Element) <span class="comment">// 修改指定位置处的元素，返回被修改的元素</span></span><br><span class="line">get(<span class="keyword">int</span> index)          <span class="comment">// 返回指定位置处的元素</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">      list.add(<span class="string">&quot;JavaSE&quot;</span>);</span><br><span class="line">      list.add(<span class="string">&quot;JS&quot;</span>);</span><br><span class="line">      list.add(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line"></span><br><span class="line">      System.out.println(list);</span><br><span class="line"></span><br><span class="line">      list.add(<span class="number">1</span>,<span class="string">&quot;java&quot;</span>);</span><br><span class="line">      System.out.println(list);</span><br><span class="line"></span><br><span class="line">      list.remove(<span class="number">1</span>);</span><br><span class="line">      System.out.println(list);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h3><p>LinkedList集合特有方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span>在该列表开头插入指定的元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span>将指定元素追加到此列表末尾</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">getFirst</span><span class="params">()</span>返回此列表第一个元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">getLast</span><span class="params">()</span>返回次列表末尾元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span> 删除并返回此列表第一个元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span> 删除并返回此列表最后一个元素</span></span><br></pre></td></tr></table></figure><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p>set接口也是继承了Collection接口，也是单列集合。<br>set接口中元素无序，并且都会以某种规则保证存入的元素不出现重复。</p><h4 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h4><p>无序，不保证元素的迭代顺序</p><p>不包含重复元素的集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HashSet&lt;String&gt; hashSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br></pre></td></tr></table></figure><h3 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h3><p>上面提到HashSet是无序的，如果想要有序，就需要用到LinkedHashSet</p><h3 id="Collections类"><a href="#Collections类" class="headerlink" title="Collections类"></a>Collections类</h3><p>conections是集合的工具类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 往集合中添加一些元素</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(Collection&lt;T&gt; c, T... elements)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 打乱集合顺序</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(List&lt;?&gt; list)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 将集合中元素按照默认规则排序</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title">sort</span><span class="params">(List&lt;T&gt; list)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 将集合中元素按照指定规则排序。</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title">sort</span><span class="params">(List&lt;T&gt; list,Comparator&lt;? <span class="keyword">super</span> T&gt; )</span></span></span><br></pre></td></tr></table></figure><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p>在<code>Collection</code>中，元素都是单个存在的。<br>而map中的集合，元素是成对存在的（类似于python中的字典）</p><p>每个元素都由键和值组成，通过键可以找到对应的值。</p><p><strong>Map接口中的方法</strong></p><p>Map接口中的集合都有两个泛型变量,在使用时，要为两个泛型变量赋予数据类型。</p><p>两个泛型变量的数据类型可以相同，也可以不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把指定的键与指定的值添加到Map集合中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 把指定的键 所对应的键值对元素 在Map集合中删除，返回被删除元素的值</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">remove</span><span class="params">(Object key)</span></span></span><br><span class="line"><span class="function"><span class="comment">//  根据指定的键，在Map集合中获取对应的值</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 获取Map集合中所有的键，存储到Set集合中</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;K&gt; <span class="title">keySet</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">// 获取到Map集合中所有的键值对对象的集合(Set集合)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;Map.Entry&lt;K,V&gt;&gt; <span class="title">entrySet</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><p><strong>HashMap循环遍历value</strong></p><p>map里面提供了一个获取所以键值的方法keyset。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMapKeySetDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Integer, String&gt; integerStringHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        integerStringHashMap.put(<span class="number">1</span>,<span class="string">&quot;xiao&quot;</span>);</span><br><span class="line">        integerStringHashMap.put(<span class="number">2</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        integerStringHashMap.put(<span class="number">3</span>,<span class="string">&quot;gou&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Integer&gt; integers = integerStringHashMap.keySet();</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> key : integers</span><br><span class="line">             ) &#123;</span><br><span class="line">            String value = integerStringHashMap.get(key);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>HashMap循环遍历Key,Value</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;Map.Entry&lt;String, String&gt;&gt; entries = map.entrySet();</span><br></pre></td></tr></table></figure><p>Entry将键值对的对应关系封装成了对象。即键值对对象，这样我们在遍历Map集合时，就可以从每一个键值对（Entry）对象中获取对应的键与对应的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> K <span class="title">getKey</span><span class="params">()</span>   <span class="comment">// 获取Entry对象中的键</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">getValue</span><span class="params">()</span> <span class="comment">// 获取Entry对象中的值</span></span></span><br></pre></td></tr></table></figure><p>HashMap遍历举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMapEntrySetDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Integer, String&gt; integerStringHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        integerStringHashMap.put(<span class="number">1</span>,<span class="string">&quot;joker&quot;</span>);</span><br><span class="line">        integerStringHashMap.put(<span class="number">2</span>,<span class="string">&quot;jokerdig&quot;</span>);</span><br><span class="line">        integerStringHashMap.put(<span class="number">3</span>,<span class="string">&quot;jokerdig.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Map.Entry&lt;Integer, String&gt;&gt; entries = integerStringHashMap.entrySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, String&gt; entry : entries) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> key = entry.getKey();</span><br><span class="line">            String value = entry.getValue();</span><br><span class="line">            System.out.println(<span class="string">&quot;Key:&quot;</span> + key + <span class="string">&quot; &quot;</span> + <span class="string">&quot;Value:&quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Hashmap的存放是无序的，如果需要有序存储数据的话，就需要用到LinkedHashMap。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(14)</title>
      <link href="/2022/03/22/mysql2_5/"/>
      <url>/2022/03/22/mysql2_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=40">【狂神说Java】MySQL最新教程通俗易懂<em>哔哩哔哩</em>bilibili</a></p></blockquote><h3 id="Statement对象详解"><a href="#Statement对象详解" class="headerlink" title="Statement对象详解"></a>Statement对象详解</h3><p>JDBC中的Statement对象用于向数据库发送SQL语句，想完成对数据库的增删改查，只需要通过这个对象向数据库发送增删改查语句即可。</p><blockquote><p>CRUD操作 </p></blockquote><p><strong>create</strong></p><p>使用executeUpdate（String sql）方法完成数据添加操作，示例操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;insert into user(...) values(....)&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>read</strong></p><p>使用executeQuery(String sql)方法完成数据库查询操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = <span class="string">&quot; select * from user where id = 1 &quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = st.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"><span class="comment">//根据获取列表的数据类型，分别调用rs的相应方法映射到Java对象中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>update</strong></p><p>使用executeUpdate(String sql)方法完成数据修改操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;update user set name = &#x27;&#x27; where name = &#x27;&#x27; &quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>delete</strong></p><p>使用executeUpdate(String sql)方法完成数据删除操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;delete from user where id = 2&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>代码实例</p></blockquote><ol><li><p>提取工具类</p><blockquote><p>db.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># db.properties</span></span><br><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><blockquote><p>JDBCUtils.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = JDBCUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(in);</span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            <span class="comment">// 加载一次驱动</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  DriverManager.getConnection(url,username,password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>增删改方法<code>executeUpdate</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInsert</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;insert into users(`id`,`name`,`password`,email,birthday) &quot;</span> +</span><br><span class="line">                    <span class="string">&quot;values(4,&#x27;夏明&#x27;,&#x27;123456&#x27;,&#x27;xm@qq.com&#x27;,&#x27;1999-01-22&#x27;)&quot;</span>;</span><br><span class="line">            <span class="keyword">int</span> back = st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span>(back==<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;添加失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询方法<code>executeQuery</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQuery</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">            rs = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;id：&quot;</span>+rs.getInt(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; name：&quot;</span>+rs.getString(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; password：&quot;</span>+rs.getString(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="SQL注入问题"><a href="#SQL注入问题" class="headerlink" title="SQL注入问题"></a>SQL注入问题</h3><p>SQL存在漏洞，会被攻击导致数据泄露；</p><blockquote><p>恶意拼接查询</p></blockquote><p>SQL 语句可以查询、插入、更新和删除数据，且使用分号来分隔不同的命令。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> $user_id</span><br></pre></td></tr></table></figure><p>其中，user_id 是传入的参数，如果传入的参数值为“1234; DELETE FROM users”，那么最终的查询语句会变为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="number">1234</span>; <span class="keyword">DELETE</span> <span class="keyword">FROM</span> users</span><br></pre></td></tr></table></figure><p>如果以上语句执行，则会删除 users 表中的所有数据。</p><blockquote><p>利用注释执行非法命令</p></blockquote><p>SQL 语句中可以插入注释。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;num&#x27;</span> <span class="keyword">FROM</span> game_score <span class="keyword">WHERE</span> game_id<span class="operator">=</span><span class="number">24411</span> <span class="keyword">AND</span> version<span class="operator">=</span>$version</span><br></pre></td></tr></table></figure><p>如果 version 包含了恶意的字符串<code>&#39;-1&#39; OR 3 AND SLEEP(500)--</code>，那么最终查询语句会变为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;num&#x27;</span> <span class="keyword">FROM</span> game_score <span class="keyword">WHERE</span> game_id<span class="operator">=</span><span class="number">24411</span> <span class="keyword">AND</span> version<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">OR</span> <span class="number">3</span> <span class="keyword">AND</span> SLEEP(<span class="number">500</span>)<span class="comment">--</span></span><br></pre></td></tr></table></figure><p>以上恶意查询只是想耗尽系统资源，SLEEP(500) 将导致 SQL 语句一直运行。若在其中添加了修改、删除数据的恶意指令，那么将会造成更大的破坏。</p><blockquote><p>传入非法参数</p></blockquote><p>SQL 语句中传入的字符串参数是用单引号引起来的，如果字符串本身包含单引号而没有被处理，那么可能会篡改原本 SQL 语句的作用。 例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_name <span class="keyword">WHERE</span> user_name <span class="operator">=</span> $user_name</span><br></pre></td></tr></table></figure><p>如果 user_name 传入参数值为 G’zhang，那么最终的查询语句会变为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_name <span class="keyword">WHERE</span> user_name <span class="operator">=</span><span class="string">&#x27;G&#x27;</span>zhang<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>一般情况下，以上语句会执行出错，这样的语句风险比较小。虽然没有语法错误，但可能会恶意产生 SQL 语句，并且以一种你不期望的方式运行。</p><blockquote><p>添加额外条件</p></blockquote><p>在 SQL 语句中添加一些额外条件，以此来改变执行行为。条件一般为真值表达式。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users <span class="keyword">SET</span> userpass<span class="operator">=</span><span class="string">&#x27;$userpass&#x27;</span> <span class="keyword">WHERE</span> user_id<span class="operator">=</span>$user_id;</span><br></pre></td></tr></table></figure><p>如果 user_id 被传入恶意的字符串“1234 OR TRUE”，那么最终的 SQL 语句会变为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users <span class="keyword">SET</span> userpass<span class="operator">=</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">WHERE</span> user_id<span class="operator">=</span><span class="number">1234</span> <span class="keyword">OR</span> <span class="literal">TRUE</span>;</span><br></pre></td></tr></table></figure><p>这将更改所有用户的密码。</p><blockquote><p>如何避免SQL注入</p><p>使用PreparedStatement对象</p></blockquote><h3 id="PreparedStatement对象"><a href="#PreparedStatement对象" class="headerlink" title="PreparedStatement对象"></a>PreparedStatement对象</h3><p>PreparedStatement对象防止SQL注入，执行效率更好。</p><p><strong>增删改</strong></p><p>这里只写添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInsert</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">// 用占位符 ? 进行占位，之后在赋值 防止sql注入</span></span><br><span class="line">            String sql = <span class="string">&quot;insert into users(`id`,`name`,`password`,email,birthday) values(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql); <span class="comment">// 预编译sql，先写SQL 不执行</span></span><br><span class="line">            <span class="comment">// 手动给参数赋值</span></span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">            ps.setString(<span class="number">2</span>,<span class="string">&quot;小白&quot;</span>);</span><br><span class="line">            ps.setString(<span class="number">3</span>,<span class="string">&quot;123123&quot;</span>);</span><br><span class="line">            ps.setString(<span class="number">4</span>,<span class="string">&quot;xb@qq.com&quot;</span>);</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                注意点:</span></span><br><span class="line"><span class="comment">                sql.Date    SQL   java.sql.Date();</span></span><br><span class="line"><span class="comment">                util.Date  Java   new Date().getTime(); 获得时间戳</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            ps.setDate(<span class="number">5</span>,<span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line">            <span class="comment">// 执行</span></span><br><span class="line">            <span class="keyword">int</span> back = ps.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span>(back==<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;添加失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils.release(conn,ps,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 13:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQuery</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;select * from users where id = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;id：&quot;</span>+rs.getInt(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; name：&quot;</span>+rs.getString(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; password：&quot;</span>+rs.getString(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JDBCUtils.release(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>防止SQL注入</strong></p><blockquote><p>PreparedStatement 防止SQL注入的本质，把传递进来的参数当作字符；如果SQL语句中存在<code>&#39;</code>，会被直接转义，从而防止SQL注入。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(13)</title>
      <link href="/2022/03/21/mysql2_4/"/>
      <url>/2022/03/21/mysql2_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=37">【狂神说Java】MySQL最新教程通俗易懂<em>哔哩哔哩</em>bilibili</a></p></blockquote><h3 id="数据库驱动和JDBC"><a href="#数据库驱动和JDBC" class="headerlink" title="数据库驱动和JDBC"></a>数据库驱动和JDBC</h3><p><strong>数据库驱动</strong></p><p>驱动：声卡、显卡、数据库。</p><p>数据库驱动来连接数据库和应用程序。</p><p><strong>JDBC</strong></p><p>JDBC 指 Java 数据库连接，是一种标准Java应用编程接口（ Java API），用来连接 Java 编程语言和广泛的数据库。</p><blockquote><p>java.sql</p><p>javax.sql</p><p>mysql.connector.java8.0.22.jar</p></blockquote><h3 id="第一个JDBC程序"><a href="#第一个JDBC程序" class="headerlink" title="第一个JDBC程序"></a>第一个JDBC程序</h3><p><strong>测试JDBC的表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试jdbc数据库</span></span><br><span class="line"><span class="keyword">create</span> database jdbcStudy <span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line">use jdbcStudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users(</span><br><span class="line">`id` <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">40</span>),</span><br><span class="line">`password` <span class="type">varchar</span>(<span class="number">40</span>),</span><br><span class="line">email <span class="type">varchar</span>(<span class="number">60</span>),</span><br><span class="line">birthday <span class="type">date</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(`id`,`name`,`password`,email,birthday)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;zs@qq.com&#x27;</span>,<span class="string">&#x27;1999-01-12&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;ls@qq.com&#x27;</span>,<span class="string">&#x27;1999-01-12&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;ww@qq.com&#x27;</span>,<span class="string">&#x27;1999-01-12&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>使用IDEA创建JDBC测试项目</strong></p><ol><li><p>创建一个普通的Java项目</p></li><li><p>导入需要的jar包</p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203211108745.png" alt="image-20220321110824650"></p></li><li><p>JDBC代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/3/21 - 11:09</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcFirstDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户信息和url</span></span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useSSL=false&amp;serverTimezone=UTC&quot;</span>;</span><br><span class="line">        String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="comment">// 连接成功，数据库对象</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">// 执行SQL的对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//执行SQL对象 去执行SQL 查看返回结果</span></span><br><span class="line">        String sql = <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id：&quot;</span>+resultSet.getObject(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; name：&quot;</span>+resultSet.getObject(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; password：&quot;</span>+resultSet.getObject(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 释放连接</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><strong>步骤总结：</strong></p><ol><li>加载驱动</li><li>连接数据库DriverManager</li><li>获得执行sql的对象 Statement</li><li>获得返回的结果集</li><li>释放连接</li></ol><h3 id="JDBC中对象解释"><a href="#JDBC中对象解释" class="headerlink" title="JDBC中对象解释"></a>JDBC中对象解释</h3><p><strong>DriverManage</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载驱动 推荐使用第二种反射方法</span></span><br><span class="line"><span class="comment">// DriverManager.registerDriver(new com.mysql.jdbc.Driver());</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"><span class="comment">// connection 代表数据库</span></span><br><span class="line"><span class="comment">// 设置数据库自动提交</span></span><br><span class="line"><span class="comment">// 事务提交</span></span><br><span class="line"><span class="comment">// 事务回滚</span></span><br><span class="line">connection.setAutoCommit();</span><br><span class="line">connection.commit();</span><br><span class="line">connection.rollback();</span><br></pre></td></tr></table></figure><p><strong>URL</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useSSL=false&amp;serverTimezone=UTC&quot;</span>;</span><br><span class="line"><span class="comment">// mysql端口号  3306</span></span><br><span class="line"><span class="comment">// jdbc:mysql://localhost:3306/数据库?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="comment">// oracle  1521</span></span><br><span class="line"><span class="comment">// jdbc:oracle:thin:@localhost:8521</span></span><br></pre></td></tr></table></figure><p><strong>Statement</strong></p><p>执行SQL的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行SQL的对象</span></span><br><span class="line">Statement statement = connection.createStatement();</span><br><span class="line"><span class="comment">//执行SQL对象 去执行SQL 查看返回结果</span></span><br><span class="line">String sql = <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"><span class="comment">// statement</span></span><br><span class="line">statement.executeQuery();<span class="comment">// 执行sql查询并返回结果姐ResultSet</span></span><br><span class="line">statement.execute();<span class="comment">// 执行sql</span></span><br><span class="line">statement.executeUpdate(); <span class="comment">// 更新 插入 删除..</span></span><br></pre></td></tr></table></figure><p><strong>ResultSet</strong></p><p>查询的结果集，封装了所有查询对象；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line">resultSet.getObject();</span><br><span class="line">resultSet.getString();</span><br><span class="line">resultSet.getInt();</span><br><span class="line">resultSet.getFloat();</span><br><span class="line">resultSet.getDate();</span><br><span class="line"><span class="comment">// .....</span></span><br></pre></td></tr></table></figure><p><strong>遍历指针</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resultSet.beforeFirst();<span class="comment">// 移动到最前面</span></span><br><span class="line">resultSet.afterLast();<span class="comment">// 移动到最后面</span></span><br><span class="line">resultSet.next();<span class="comment">// 移动到下一个</span></span><br><span class="line">resultSet.previous();<span class="comment">// 移动到前一行</span></span><br><span class="line">resultSet.aboulute(row);<span class="comment">// 移动到指定行</span></span><br></pre></td></tr></table></figure><p><strong>释放资源</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 释放资源</span></span><br><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(12)</title>
      <link href="/2022/03/19/mysql2_3/"/>
      <url>/2022/03/19/mysql2_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=34">【狂神说Java】MySQL最新教程通俗易懂<em>哔哩哔哩</em>bilibili</a></p></blockquote><h3 id="MySQL备份"><a href="#MySQL备份" class="headerlink" title="MySQL备份"></a>MySQL备份</h3><p>为什么要备份：</p><ul><li>保证重要的数据不丢失</li><li>数据转移A—&gt;B</li></ul><p>MySQL数据库备份的方式</p><ul><li><p>直接拷贝物理文件</p></li><li><p>在可视化工具中手动导出</p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203191101400.png" alt="image-20220319110101301"></p></li><li><p>使用命令行备份mysqldump</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqldump -h 主机 -u 用户名 -p 密码 数据库名 (表名1,表名2,...) &gt; 导出路径和文件名称</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 <span class="built_in">test</span> student &gt;D:/student.sql</span><br></pre></td></tr></table></figure></li></ul><h3 id="如何设计一个项目的数据库"><a href="#如何设计一个项目的数据库" class="headerlink" title="如何设计一个项目的数据库"></a>如何设计一个项目的数据库</h3><p>当数据库比较复杂，需要设计数据库</p><p><strong>糟糕的数据库设计：</strong></p><ul><li>数据沉余，浪费空间</li><li>数据库插入和删除麻烦，异常(屏蔽使用物理外键)</li><li>程序的性能差</li></ul><p><strong>良好的数据库设计：</strong></p><ul><li>结绳内存空间</li><li>保证数据库的完整性</li><li>方便我们开发系统</li></ul><p><strong>软件开发中，关于数据库的设计</strong></p><ul><li>分析需求：分析业务和需要处理的数据库的需求</li><li>概要设计：设计关系图E-R图</li></ul><p><strong>设计数据库的步骤：(个人博客)</strong></p><ul><li>设计信息，需求分析<ul><li>用户表(用户登录注销，用户的个人信息，写博客，创建分类)</li><li>分类表(文章分类，谁创建的)</li><li>文章表(文章的信息)</li><li>评论表(文章的评论)</li><li>友链表(友链信息)</li><li>自定义表(系统信息，某个关键的字，或者一些主字段等)</li><li>说说表(发表心情)</li></ul></li><li>标识实体(把需求落地到每个字段)</li><li>标识实体之间的关系<ul><li>写博客：user-&gt;blog</li><li>创建分类user-&gt;category</li><li>关注user-&gt;user</li><li>友链 links</li><li>评论 user-user-&gt;comment</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">MySQL Backup</span></span><br><span class="line"><span class="comment">Database: test</span></span><br><span class="line"><span class="comment">Backup Time: 2022-03-19 11:54:17</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 博客对应表</span></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`blog`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`category`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`comment`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`links`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`<span class="keyword">user</span>`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test`.`user_follow`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `blog` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;文章id&#x27;</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;文章标题&#x27;</span>,</span><br><span class="line">  `author_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;作者id&#x27;</span>,</span><br><span class="line">  `category_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类id&#x27;</span>,</span><br><span class="line">  `content` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;文章内容&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `love` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;点赞&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `category` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类id&#x27;</span>,</span><br><span class="line">  `category_name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类名称&#x27;</span>,</span><br><span class="line">  `create_user_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建分类的用户id&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `comment` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;评论id&#x27;</span>,</span><br><span class="line">  `blog_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;博客id&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `content` <span class="type">varchar</span>(<span class="number">2000</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;评论内容&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `user_id_parent` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;回复人的id&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `links` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;友链id&#x27;</span>,</span><br><span class="line">  `links` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;网站名称&#x27;</span>,</span><br><span class="line">  `href` <span class="type">varchar</span>(<span class="number">2000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;网站链接&#x27;</span>,</span><br><span class="line">  `sort` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;排序&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `sign` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;签名&#x27;</span>,</span><br><span class="line">  `open_id` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;微信id&#x27;</span>,</span><br><span class="line">  `avatar` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;头像地址&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `user_follow` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;关注表id&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;被关注的id&#x27;</span>,</span><br><span class="line">  `follow_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;关注人的id&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`blog` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`blog`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`category` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`category`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`comment` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`comment`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`links` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`links`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`<span class="keyword">user</span>` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`<span class="keyword">user</span>`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">LOCK TABLES `test`.`user_follow` WRITE;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`.`user_follow`;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><h3 id="数据库三大范式"><a href="#数据库三大范式" class="headerlink" title="数据库三大范式"></a>数据库三大范式</h3><p><strong>为什么需要数据规范化？</strong></p><ul><li>信息重复</li><li>更新异常</li><li>插入异常<ul><li>信息插入失败等</li></ul></li><li>删除异常<ul><li>有效信息丢失等</li></ul></li></ul><p><strong>数据库三大范式</strong></p><p>第一范式(1NF)</p><ul><li>要求数据库表的每一列都是不可分割的原子数据项；</li></ul><p>第二范式(2NF)</p><ul><li><p>前提：满足第一范式；</p></li><li><p>确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关；</p></li></ul><p>第三范式(3NF)</p><ul><li><p>前提：满足第二范式；</p></li><li><p>确保数据表中的每一列数据都和主键直接相关，而不能间接相关；</p></li></ul><p><strong>规范性和性能的问题</strong></p><ul><li>考虑商业化的需求和目标(成本：用户体验)数据库的性能更加重要；</li><li>在规范性能问题的时候，需要适当考虑规范性；</li><li>故意给某些表增加一些冗余的字段(多表变为单表)；</li><li>故意增加一些计算列(大数据量降低为小数据量的查询：索引)；</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(11)</title>
      <link href="/2022/03/18/mysql2_2/"/>
      <url>/2022/03/18/mysql2_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=31">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="SQL编程创建100万条数据测试索引"><a href="#SQL编程创建100万条数据测试索引" class="headerlink" title="SQL编程创建100万条数据测试索引"></a>SQL编程创建100万条数据测试索引</h3><p>索引在处理大量数据的时候，对查询速度有很大提升；</p><p><strong>测试</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试索引</span></span><br><span class="line"><span class="comment">-- 创建用户测试表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `app_user`(</span><br><span class="line">`id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> comment <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">`phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> comment <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">`gender` tinyint(<span class="number">4</span>) <span class="keyword">default</span> <span class="string">&#x27;0&#x27;</span> comment <span class="string">&#x27;性别(0男 1女)&#x27;</span>,</span><br><span class="line">`password`<span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`age` tinyint(<span class="number">4</span>) <span class="keyword">default</span> <span class="string">&#x27;0&#x27;</span> comment <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`create_time` datetime <span class="keyword">default</span> <span class="built_in">current_timestamp</span>,</span><br><span class="line">`update_time` <span class="type">timestamp</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="built_in">current_timestamp</span> <span class="keyword">on</span> update <span class="built_in">current_timestamp</span>,</span><br><span class="line"> <span class="keyword">primary</span> key (`id`)</span><br><span class="line">) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;app用户表&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入100w条数据</span></span><br><span class="line">delimiter $$ <span class="comment">-- 函数标志</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> mock_data()</span><br><span class="line"><span class="comment">-- mysql 8.0 需要加deterministic </span></span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span> <span class="keyword">deterministic</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> num <span class="type">int</span> <span class="keyword">default</span> <span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">while i<span class="operator">&lt;</span>num do</span><br><span class="line"><span class="comment">-- 插入语句</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)<span class="keyword">values</span>(concat(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;jokerdaxiong@qq.com&#x27;</span>,concat(<span class="string">&#x27;18&#x27;</span>,<span class="built_in">floor</span>(rand()<span class="operator">*</span>(<span class="number">999999999</span><span class="number">-100000000</span>)<span class="operator">+</span><span class="number">100000000</span>)),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>),uuid(),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line"><span class="keyword">set</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> while;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line"><span class="comment">-- mysql 8.0 end 后也要加$$ </span></span><br><span class="line"><span class="keyword">end</span> $$;</span><br><span class="line"><span class="comment">-- 执行函数</span></span><br><span class="line"><span class="keyword">select</span> mock_data();</span><br><span class="line"><span class="comment">-- 查询结果</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试索引</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user; <span class="comment">-- 查询时间: 2.181s</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; <span class="comment">--  查询时间: 0.994s</span></span><br><span class="line"><span class="comment">-- 分析查询</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; <span class="comment">-- rows:992494</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建索引</span></span><br><span class="line"><span class="comment">-- create index 索引名 on 表(字段)</span></span><br><span class="line"><span class="comment">-- 耗时：时间: 5.565s</span></span><br><span class="line"><span class="keyword">create</span> index id_app_user_name <span class="keyword">on</span> app_user(`name`);</span><br><span class="line"><span class="comment">-- 在执行这条查询语句 耗时：时间: 0.001s 速度提升很大</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; </span><br><span class="line"><span class="comment">-- 分析查询</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> app_user <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; <span class="comment">-- rows:1</span></span><br></pre></td></tr></table></figure><h3 id="索引原则"><a href="#索引原则" class="headerlink" title="索引原则"></a>索引原则</h3><ul><li>索引不是越多越好</li><li>不要对经常变动的数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般加在常用来查询的字段上</li></ul><blockquote><p>拓展：去了解索引的数据结构</p></blockquote><h3 id="数据库用户管理"><a href="#数据库用户管理" class="headerlink" title="数据库用户管理"></a>数据库用户管理</h3><p><strong>可视化管理</strong></p><p><img src="https://s2.loli.net/2022/03/18/iIfCMZhpcq1KwJB.png" alt="image-20220318113430073"></p><p><img src="https://s2.loli.net/2022/03/18/JraZPymxsAWlfuB.png" alt="image-20220318113556605"></p><p><img src="https://s2.loli.net/2022/03/18/fbSEGHckKLstJ2Y.png" alt="image-20220318113722478"></p><p><strong>SQL命令操作</strong></p><p>用户表：mysql.user</p><p>本质：对这张表进行增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="comment">-- create user 用户名 identified by &#x27;密码&#x27;;</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> joker identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment">-- 修改当前用户密码</span></span><br><span class="line">flush privileges; <span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;<span class="comment">-- 修改密码为123456</span></span><br><span class="line"><span class="comment">-- 修改指定用户密码 </span></span><br><span class="line">flush privileges;<span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">user</span> <span class="string">&#x27;joker&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;12321&#x27;</span>;</span><br><span class="line"><span class="comment">-- 重命名 rename user 原名称 to 新名称;</span></span><br><span class="line">rename <span class="keyword">user</span> joker <span class="keyword">to</span> joker1;</span><br><span class="line"><span class="comment">-- 授予所有权限 grant all privileges on *.* to 要授权的用户; </span></span><br><span class="line"><span class="comment">-- 但是不能给其他用户授权</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> joker1;</span><br><span class="line"><span class="comment">-- 查看用户权限</span></span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> joker1;</span><br><span class="line"><span class="comment">-- 查询root权限</span></span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> root<span class="variable">@localhost</span>;</span><br><span class="line"><span class="comment">-- 撤销权限 revoke all privileges on *.* from 要撤销的用户</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">from</span> joker1;</span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> joker1;</span><br><span class="line"><span class="comment">-- 查询用户表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(10)</title>
      <link href="/2022/03/17/mysql2_1/"/>
      <url>/2022/03/17/mysql2_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=28">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="事务ACID原则、脏读、不可重复读、幻读"><a href="#事务ACID原则、脏读、不可重复读、幻读" class="headerlink" title="事务ACID原则、脏读、不可重复读、幻读"></a>事务ACID原则、脏读、不可重复读、幻读</h3><p><strong>事务</strong></p><p>要么都成功，要么都失败；</p><ol><li>SQL执行 A给B转账    A1000  –&gt; 200 B 200 </li><li>SQL执行 B收到A的钱 A800    –&gt; B 400</li></ol><p>将一组SQL放在一个批次中去执行</p><p><strong>ACID原则</strong></p><p>原子性（atomicity，或称不可分割性）</p><ul><li>一个事务要么全部提交成功，要么全部失败回滚，不能只执行其中的一部分操作。</li></ul><p>一致性（consistency）</p><ul><li>事务的执行不能破坏数据库数据的完整性和一致性，一个事务在执行之前和执行之后，数据库都必须处于一致性状态。(最终完整性)</li></ul><p>隔离性（isolation，又称独立性）</p><ul><li>事务的隔离性是指在并发环境中，并发的事务时相互隔离的，一个事务的执行不能被其他事务干扰。</li></ul><p>持久性（durability）</p><ul><li>一旦事务<strong>提交</strong>，那么它对数据库中的对应数据的状态的变更就会永久保存到数据库中；即使数据库崩溃和宕机，当数据库重启后，一定能将数据库恢复到事务成功结束的状态。</li></ul><p><strong>事务的隔离级别</strong></p><p>脏读</p><ul><li>指一个事务读取了另外一个事务未提交的数据。</li></ul><p>不可重复读</p><ul><li>在一个事务内读取表中某一行数据，多次读取结果不同(这个不一定是错误)。</li></ul><p>幻读</p><ul><li>指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。</li></ul><h3 id="测试事务实现转账"><a href="#测试事务实现转账" class="headerlink" title="测试事务实现转账"></a>测试事务实现转账</h3><p><strong>执行事务步骤</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 事务</span></span><br><span class="line"><span class="comment">-- mysql是默认开启事务自动提交的</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>; <span class="comment">-- 关闭事务自动提交</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 开启事务自动提交(默认)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 手动处理事务</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>; <span class="comment">-- 关闭自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"><span class="keyword">start</span> transaction; <span class="comment">-- 标记一个事务的开始 此后的sql都在同一个事务内</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> xx ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交 持久化</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚 回到执行前</span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务结束</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 开启事务自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">savepoint</span> 保存点名; <span class="comment">-- 设置一个事务的保存点</span></span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> <span class="keyword">savepoint</span> 保存点名; <span class="comment">-- 回滚到保存点</span></span><br><span class="line"><span class="keyword">release</span> <span class="keyword">savepoint</span> 保存点名; <span class="comment">-- 撤销保存点</span></span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 事务转账案例</span></span><br><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database shop <span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci</span><br><span class="line"><span class="comment">-- 使用数据库</span></span><br><span class="line">use shop</span><br><span class="line"><span class="comment">-- 创建账户表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `account`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">`money` <span class="type">decimal</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> key (`id`)</span><br><span class="line">)engine innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(`name`,`money`) <span class="keyword">values</span>(<span class="string">&#x27;A&#x27;</span>,<span class="number">2000.00</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">10000.00</span>);</span><br><span class="line"><span class="comment">-- 转账事务</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>; <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="keyword">start</span> transaction; <span class="comment">-- 开启一个事务</span></span><br><span class="line">update account <span class="keyword">set</span> money<span class="operator">=</span>money<span class="number">-600</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>; <span class="comment">-- A减500</span></span><br><span class="line">update account <span class="keyword">set</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">600</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>; <span class="comment">-- B加500</span></span><br><span class="line"><span class="keyword">commit</span>; <span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">rollback</span>; <span class="comment">-- 回滚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 恢复默认值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account;</span><br></pre></td></tr></table></figure><h3 id="索引介绍及索引的分类"><a href="#索引介绍及索引的分类" class="headerlink" title="索引介绍及索引的分类"></a>索引介绍及索引的分类</h3><p><strong>索引</strong></p><blockquote><p> 索引(index)是帮助MySQL高效获取数据的数据结构。</p><p>本质：索引是数据结构</p></blockquote><p><strong>索引的分类</strong></p><ul><li>主键索引(Primary key)<ul><li>唯一的标识，不可重复，只能有一个列作为主键。</li></ul></li><li>唯一索引(Unique key)<ul><li>避免重复的列出现，唯一索引可以重复，多个列都可以标识为唯一索引。</li></ul></li><li>常规索引(key/index)<ul><li>默认的，index/key关键字来设置。</li></ul></li><li>全文索引(FullText)<ul><li>在特定的数据库引擎下才有，MyISAM。</li><li>快速定位数据。</li></ul></li></ul><p><strong>例子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引的使用</span></span><br><span class="line"><span class="comment">-- 在创建表的时候给字段增加索引</span></span><br><span class="line"><span class="comment">-- 创佳你完毕后，增加索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示所有的索引信息</span></span><br><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加一个索引  索引名(列名)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student` <span class="keyword">add</span> fulltext index `studentName`(`name`);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- explain 分析sql执行的状况</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student`;<span class="comment">-- 非全文索引</span></span><br><span class="line"></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student` <span class="keyword">where</span> <span class="keyword">match</span>(`name`) against(<span class="string">&#x27;张&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(9)</title>
      <link href="/2022/03/16/mysql1_9/"/>
      <url>/2022/03/16/mysql1_9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=25">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="聚合函数及分组过滤"><a href="#聚合函数及分组过滤" class="headerlink" title="聚合函数及分组过滤"></a>聚合函数及分组过滤</h3><p><strong>聚合函数</strong></p><table><thead><tr><th align="center">函数名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">count()</td><td align="center">计数</td></tr><tr><td align="center">sum()</td><td align="center">求和</td></tr><tr><td align="center">avg()</td><td align="center">平均值</td></tr><tr><td align="center">max()</td><td align="center">最大值</td></tr><tr><td align="center">min()</td><td align="center">最小值</td></tr><tr><td align="center">…</td><td align="center">…</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 聚合函数</span></span><br><span class="line"><span class="comment">-- count() 统计表中的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(`name`) <span class="keyword">from</span> student; <span class="comment">-- count(指定列) 会忽略null值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student; <span class="comment">-- count(*)  不会忽略null值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> student; <span class="comment">-- count(1)  会忽略null值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- sum() 总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(`id`) <span class="keyword">as</span> ID总和 <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- avg() 平均值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(`id`) <span class="keyword">as</span> ID平均值 <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- max() 最大值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(`id`) <span class="keyword">as</span> ID最大值 <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- min() 最小值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(`id`) <span class="keyword">as</span> ID最小值 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><p><strong>分组过滤</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一般查询不同学生的ID平均值，最高值，最低值</span></span><br><span class="line"><span class="comment">-- 需要根据名字不同进行分组</span></span><br><span class="line"><span class="keyword">select</span> `name` <span class="keyword">as</span> 姓名,<span class="built_in">avg</span>(`id`) <span class="keyword">as</span> 平均值,<span class="built_in">max</span>(`id`) <span class="keyword">as</span> 最高值,<span class="built_in">min</span>(`id`) <span class="keyword">as</span> 最低值,gradename <span class="keyword">as</span> 年级</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">inner</span> <span class="keyword">join</span> grade g</span><br><span class="line"><span class="keyword">on</span> s.gradeid<span class="operator">=</span>g.gradeid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.`name`; <span class="comment">-- 分组</span></span><br></pre></td></tr></table></figure><h3 id="拓展数据库级别的MD5加密"><a href="#拓展数据库级别的MD5加密" class="headerlink" title="拓展数据库级别的MD5加密"></a>拓展数据库级别的MD5加密</h3><p>什么是MD5</p><p>主要增强算法复杂度和不可逆性</p><blockquote><p>MD5破解网站的原理，背后有一个字典，进行比对；稍微复杂且在他字典中没有的字符就无法达到所谓破解；</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MD5加密</span></span><br><span class="line"><span class="comment">--创建一个测试表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `testmd5`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"><span class="comment">-- 插入值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> testmd5 <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;abc123&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;abc321&#x27;</span>);</span><br><span class="line"><span class="comment">-- md5加密 指定行</span></span><br><span class="line">update testmd5 <span class="keyword">set</span> pwd<span class="operator">=</span>md5(pwd) <span class="keyword">where</span> `id`<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- md5加密所有</span></span><br><span class="line">update testmd5 <span class="keyword">set</span> pwd<span class="operator">=</span>md5(pwd);</span><br><span class="line"><span class="comment">-- 插入值的时候加密</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> testmd5 <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,md5(<span class="string">&#x27;123123&#x27;</span>));</span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> testmd5;</span><br><span class="line"><span class="comment">-- 通过名称和密码查询指定的值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> testmd5 <span class="keyword">where</span> `name`<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span> <span class="keyword">and</span> `pwd`<span class="operator">=</span>md5(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="Select小结"><a href="#Select小结" class="headerlink" title="Select小结"></a>Select小结</h3><p>SELECT 的语法格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>&#123;<span class="operator">*</span> <span class="operator">|</span> <span class="operator">&lt;</span>字段列名<span class="operator">&gt;</span>&#125;[<span class="keyword">FROM</span> <span class="operator">&lt;</span>表 <span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>表 <span class="number">2</span><span class="operator">&gt;</span>…[<span class="keyword">WHERE</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span>[<span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span><span class="keyword">group</span> <span class="keyword">by</span> definition<span class="operator">&gt;</span>[<span class="keyword">HAVING</span> <span class="operator">&lt;</span>expression<span class="operator">&gt;</span> [&#123;<span class="operator">&lt;</span>operator<span class="operator">&gt;</span> <span class="operator">&lt;</span>expression<span class="operator">&gt;</span>&#125;…]][<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span><span class="keyword">order</span> <span class="keyword">by</span> definition<span class="operator">&gt;</span>][LIMIT[<span class="operator">&lt;</span><span class="keyword">offset</span><span class="operator">&gt;</span>,] <span class="operator">&lt;</span><span class="type">row</span> count<span class="operator">&gt;</span>]]</span><br></pre></td></tr></table></figure><p><strong>小结</strong></p><ul><li>select 去重 (表和字段可取别名)</li><li>join 要链接的表 on 等值判断</li><li>where(具体的值，子查询语句)</li><li>group by 分组</li><li>having 过滤分组后的信息，条件和where一样，位置不同</li><li>order by 排序 (升序asc/降序desc)</li><li>limit startindex pageSize…</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(8)</title>
      <link href="/2022/03/15/mysql1_8/"/>
      <url>/2022/03/15/mysql1_8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=22">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="分页和排序"><a href="#分页和排序" class="headerlink" title="分页和排序"></a>分页和排序</h3><p><strong>排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 排序 order by</span></span><br><span class="line"><span class="comment">-- 排序：升序 asc  降序 desc</span></span><br><span class="line"><span class="comment">-- 根据学生id进行排序</span></span><br><span class="line"><span class="comment">-- 降序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> `id` <span class="keyword">desc</span></span><br><span class="line"><span class="comment">-- 升序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> `id` <span class="keyword">asc</span></span><br></pre></td></tr></table></figure><p><strong>分页</strong></p><blockquote><p>当前页  n<br>页面大小 pageSize<br>起始页  (n-1)*pageSize<br>总页数  数据总数/页面大小</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分页 limit</span></span><br><span class="line"><span class="comment">-- 缓解数据库压力 给用户好的体验  (瀑布流)</span></span><br><span class="line"><span class="comment">-- 每页显示5条数据</span></span><br><span class="line"><span class="comment">-- limit 0,5  1-5</span></span><br><span class="line"><span class="comment">-- limit 1,5  2-6</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student limit <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"><span class="comment">-- 第一页 limit 0,5</span></span><br><span class="line"><span class="comment">-- 第二页 limit 5,5</span></span><br><span class="line"><span class="comment">-- 第三页 limit 10,5</span></span><br><span class="line"><span class="comment">-- 第n页  limit (n-1)*pageSize,pageSize</span></span><br><span class="line"><span class="comment">-- 当前页  n</span></span><br><span class="line"><span class="comment">-- 页面大小 pageSize</span></span><br><span class="line"><span class="comment">-- 起始页  (n-1)*pageSize</span></span><br><span class="line"><span class="comment">-- 总页数  数据总数/页面大小</span></span><br></pre></td></tr></table></figure><h3 id="子查询和嵌套查询"><a href="#子查询和嵌套查询" class="headerlink" title="子查询和嵌套查询"></a>子查询和嵌套查询</h3><p><strong>子查询</strong></p><p>本质：在where语句中嵌套一个查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 子查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- gradename为大一的所有id</span></span><br><span class="line"><span class="keyword">select</span> `gradeid` <span class="keyword">from</span> `grade` <span class="keyword">where</span> gradename<span class="operator">=</span> <span class="string">&#x27;大一&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询所有大一学生的信息 并且 gradename为大一的所有id</span></span><br><span class="line"><span class="keyword">select</span> `id`,`name`,`sex`,`address`,`gradename` <span class="keyword">from</span> `student`st, `grade` g <span class="keyword">where</span> g.gradeid<span class="operator">=</span>(<span class="keyword">select</span> `gradeid` <span class="keyword">from</span> `grade` <span class="keyword">where</span> gradename<span class="operator">=</span> <span class="string">&#x27;大一&#x27;</span>)<span class="operator">=</span>st.gradeid;</span><br></pre></td></tr></table></figure><h3 id="MySQL常用函数"><a href="#MySQL常用函数" class="headerlink" title="MySQL常用函数"></a>MySQL常用函数</h3><p><a href="https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html">MySQL 8.0  内置函数和运算符参考</a></p><p><a href="https://www.runoob.com/mysql/mysql-functions.html">MySQL 函数 | 菜鸟教程 (runoob.com)</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- MySQL常用函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">-8</span>); <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">Ceiling</span>(<span class="number">9.3</span>); <span class="comment">-- 向上取整数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">9.4</span>);  <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">select</span> rand(); <span class="comment">-- 返回一个0-1的随机数</span></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">11</span>); <span class="comment">-- 判断一个数的正负</span></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">char_length</span>(<span class="string">&#x27;代码小白哦&#x27;</span>); <span class="comment">-- 字符串长度</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;写&#x27;</span>,<span class="string">&#x27;代码&#x27;</span>,<span class="string">&#x27;是热爱&#x27;</span>); <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">insert</span>(<span class="string">&#x27;写代码是热爱&#x27;</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="string">&#x27;超级热爱&#x27;</span>); <span class="comment">-- 插入数值 替换数值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;JOKERDIG&#x27;</span>); <span class="comment">-- 转换为小写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;jokerdig&#x27;</span>); <span class="comment">-- 转换为大写</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;jokerdig&#x27;</span>,<span class="string">&#x27;k&#x27;</span>); <span class="comment">-- 字符串第一次出现的索引</span></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;baidu.com&#x27;</span>,<span class="string">&#x27;baidu&#x27;</span>,<span class="string">&#x27;jokerdig&#x27;</span>); <span class="comment">-- 替换字符串</span></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;写代码是热爱&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>); <span class="comment">-- 返回指定字符串</span></span><br><span class="line"><span class="keyword">select</span> reverse(<span class="string">&#x27;反转字符串&#x27;</span>); <span class="comment">-- 反转字符串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓张的同学</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 替换姓氏为刘</span></span><br><span class="line"><span class="keyword">select</span> replace(`name`,<span class="string">&#x27;张&#x27;</span>,<span class="string">&#x27;刘&#x27;</span>) <span class="keyword">from</span> student <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间日期函数 重要</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_date</span>(); <span class="comment">-- 获取当前日期 select curdate();</span></span><br><span class="line"><span class="keyword">select</span> now(); <span class="comment">-- 获取当前时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">localtime</span>(); <span class="comment">-- 获取本地时间</span></span><br><span class="line"><span class="keyword">select</span> sysdate(); <span class="comment">-- 获取系统时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">Year</span>(NOW()); <span class="comment">-- 年year 月 month 日 day 时 hour 分 minute 秒 second</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 系统</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">system_user</span>(); <span class="comment">-- 系统用户</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br><span class="line"><span class="keyword">select</span> version(); <span class="comment">-- 版本</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(7)</title>
      <link href="/2022/03/14/mysql1_7/"/>
      <url>/2022/03/14/mysql1_7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=19">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="模糊查询操作符详解"><a href="#模糊查询操作符详解" class="headerlink" title="模糊查询操作符详解"></a>模糊查询操作符详解</h3><table><thead><tr><th align="center">运算符</th><th align="center">语法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">is null</td><td align="center">a is null</td><td align="center">如果操作符为null，结果为真</td></tr><tr><td align="center">is not null</td><td align="center">a is not null</td><td align="center">如果操作符不为null，结果为真</td></tr><tr><td align="center">between</td><td align="center">a between b and c</td><td align="center">若a和b和c之间，则结果为真</td></tr><tr><td align="center">like</td><td align="center">a like b</td><td align="center">SQL匹配，如果a匹配b，结果为真</td></tr><tr><td align="center">in</td><td align="center">a in (a1,a2,a3)</td><td align="center">假设a在a1或a2其中的某一个值中，结果为真</td></tr></tbody></table><p><strong>举例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 模糊查询 like 结合%(代表0到任意字符)</span></span><br><span class="line"><span class="comment">-- 查询姓张的人</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询姓张且两个名字的人</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;张_&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询中间是肥的名字</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%肥%&#x27;</span>;</span><br><span class="line"><span class="comment">-- in关键字</span></span><br><span class="line"><span class="comment">-- 查询 1，2，3号学员</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> `id` <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">-- 查询在咸阳的学生</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> `address` <span class="keyword">in</span> (<span class="string">&#x27;陕西咸阳&#x27;</span>);</span><br><span class="line"><span class="comment">-- null not null 查询邮箱为空的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> email<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> email <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">-- 查询生日不为空的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> birthday <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h3 id="连表查询JoinON详解"><a href="#连表查询JoinON详解" class="headerlink" title="连表查询JoinON详解"></a>连表查询JoinON详解</h3><p>Join图例</p><p><img src="https://s2.loli.net/2022/03/14/NJGZrSloz2D4YPu.png" alt="join"></p><p><strong>例子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 连接查询</span></span><br><span class="line"><span class="comment">-- 查询学生信息(包括年级显示)</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">1. 找到需要查询的字段，去掉重复和无关的字段</span></span><br><span class="line"><span class="comment">2. 通过外键连接两张表进行查询</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 内连接 inner join...where</span></span><br><span class="line"><span class="keyword">select</span> `id` <span class="keyword">as</span> <span class="string">&#x27;编号&#x27;</span>,`name` <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>,`sex` <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span>,`birthday` <span class="keyword">as</span> <span class="string">&#x27;生日&#x27;</span>,`address` <span class="keyword">as</span> <span class="string">&#x27;地址&#x27;</span>,`email` <span class="keyword">as</span> <span class="string">&#x27;邮箱&#x27;</span>,`gradename` <span class="keyword">as</span> <span class="string">&#x27;年级&#x27;</span> <span class="keyword">from</span> student st <span class="keyword">inner</span> <span class="keyword">join</span> grade gr <span class="keyword">where</span> st.gradeid<span class="operator">=</span>gr.gradeid;</span><br><span class="line"><span class="comment">-- 左连接left join...on</span></span><br><span class="line"><span class="keyword">select</span> `id` <span class="keyword">as</span> <span class="string">&#x27;编号&#x27;</span>,`name` <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>,`sex` <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span>,`birthday` <span class="keyword">as</span> <span class="string">&#x27;生日&#x27;</span>,`address` <span class="keyword">as</span> <span class="string">&#x27;地址&#x27;</span>,`email` <span class="keyword">as</span> <span class="string">&#x27;邮箱&#x27;</span>,`gradename` <span class="keyword">as</span> <span class="string">&#x27;年级&#x27;</span> <span class="keyword">from</span> student st <span class="keyword">left</span> <span class="keyword">join</span> grade gr  <span class="keyword">on</span> st.gradeid<span class="operator">=</span>gr.gradeid;</span><br><span class="line"><span class="comment">-- 右连接 right join...on</span></span><br><span class="line"><span class="keyword">select</span> `id` <span class="keyword">as</span> <span class="string">&#x27;编号&#x27;</span>,`name` <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>,`sex` <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span>,`birthday` <span class="keyword">as</span> <span class="string">&#x27;生日&#x27;</span>,`address` <span class="keyword">as</span> <span class="string">&#x27;地址&#x27;</span>,`email` <span class="keyword">as</span> <span class="string">&#x27;邮箱&#x27;</span>,`gradename` <span class="keyword">as</span> <span class="string">&#x27;年级&#x27;</span> <span class="keyword">from</span> student st <span class="keyword">right</span> <span class="keyword">join</span> grade gr  <span class="keyword">on</span> st.gradeid<span class="operator">=</span>gr.gradeid;</span><br></pre></td></tr></table></figure><p>总结：</p><table><thead><tr><th align="center">操作</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">inner join</td><td align="center">表中至少有一个匹配，就返回结果</td></tr><tr><td align="center">left join</td><td align="center">会从左表中返回所有的值，即使右表中没有匹配</td></tr><tr><td align="center">right join</td><td align="center">会从右表中返回所有的值，即使左表中没有匹配</td></tr></tbody></table><blockquote><p>遇到多张表连接查询，理清思路，循序渐进</p></blockquote><h3 id="自链接及连表查询"><a href="#自链接及连表查询" class="headerlink" title="自链接及连表查询"></a>自链接及连表查询</h3><p>自己的表和自己连接(理解为一张表拆为两张表)</p><p>父类</p><table><thead><tr><th align="center">categoryid</th><th align="center">categoryName</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">信息技术</td></tr><tr><td align="center">3</td><td align="center">软件开发</td></tr><tr><td align="center">5</td><td align="center">美术设计</td></tr></tbody></table><p>子类</p><table><thead><tr><th align="center">pid</th><th align="center">categoryid</th><th align="center">categoryName</th></tr></thead><tbody><tr><td align="center">3</td><td align="center">4</td><td align="center">数据库</td></tr><tr><td align="center">2</td><td align="center">8</td><td align="center">办公信息</td></tr><tr><td align="center">3</td><td align="center">6</td><td align="center">web开发</td></tr><tr><td align="center">5</td><td align="center">7</td><td align="center">美术设计</td></tr></tbody></table><p>查询父类对应的子类关系</p><table><thead><tr><th align="center">父类</th><th align="center">子类</th></tr></thead><tbody><tr><td align="center">信息技术</td><td align="center">办公信息</td></tr><tr><td align="center">软件开发</td><td align="center">数据库</td></tr><tr><td align="center">软件开发</td><td align="center">web开发</td></tr><tr><td align="center">美术设计</td><td align="center">ps技术</td></tr></tbody></table><p><strong>例子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自连接</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `category`(</span><br><span class="line">`categoryid` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;主题id&#x27;</span>,</span><br><span class="line">`pid` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;父类id&#x27;</span>,</span><br><span class="line">`categoryName` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;主题名字&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`categoryid`)</span><br><span class="line">)engine<span class="operator">=</span>innodb auto_increment<span class="operator">=</span><span class="number">9</span> <span class="keyword">default</span> charset<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `category`(`categoryid`,`pid`,`categoryName`)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;信息技术&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;软件开发&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;数据库&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;美术设计&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;web开发&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;ps技术&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;办公信息&#x27;</span>);</span><br><span class="line"><span class="comment">-- 查询父子信息 把一张表看为两张表</span></span><br><span class="line"><span class="keyword">select</span> a.`categoryName` <span class="keyword">as</span> <span class="string">&#x27;父栏目&#x27;</span>,b.`categoryName` <span class="keyword">as</span> <span class="string">&#x27;子栏目&#x27;</span> <span class="keyword">from</span> `category` <span class="keyword">as</span> a,`category` <span class="keyword">as</span> b <span class="keyword">where</span> a.`categoryid` <span class="operator">=</span> b.`pid`;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(6)</title>
      <link href="/2022/03/12/mysql1_6/"/>
      <url>/2022/03/12/mysql1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=16">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><p>DQL(Data Query Language)数据查询语言：</p><ul><li>所有的查询操作 select</li><li>简单和复杂的查询</li><li>数据库中最核心的语言,使用频率高</li></ul><h3 id="基本的Select语句和别名使用"><a href="#基本的Select语句和别名使用" class="headerlink" title="基本的Select语句和别名使用"></a>基本的Select语句和别名使用</h3><p><strong>语法：</strong></p><blockquote><p>select 字段… from 表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询语句</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">select</span> `name`,`pwd` <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 别名 as</span></span><br><span class="line"><span class="keyword">select</span> `name` <span class="keyword">as</span> 姓名,`pwd` <span class="keyword">as</span> 密码 <span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">-- 函数 Concat(a,b)</span></span><br><span class="line"><span class="keyword">select</span> CONCAT(<span class="string">&#x27;姓名：&#x27;</span>,name) <span class="keyword">as</span> 新名字 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="去重复及数据库的表达式"><a href="#去重复及数据库的表达式" class="headerlink" title="去重复及数据库的表达式"></a>去重复及数据库的表达式</h3><p><strong>去重复</strong></p><p>作用：去除select查询结果中重复的数据，相同只显示一条；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 去重复 去掉重复的张三</span></span><br><span class="line"><span class="keyword">select</span> `name` <span class="keyword">from</span> student;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> `name` <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><p><strong>数据库的列(表达式)</strong></p><p>数据库中的表达式：文本值，列，null，函数，计算表达式，系统变量….</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询系统版本 函数</span></span><br><span class="line"><span class="keyword">select</span> version();</span><br><span class="line"><span class="comment">-- 计算 表达式</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">100</span><span class="operator">*</span><span class="number">5</span><span class="number">-1</span>;</span><br><span class="line"><span class="comment">-- 查询自增步长 变量</span></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@auto</span>_increment_increment;</span><br><span class="line"><span class="comment">-- 学生密码都+1</span></span><br><span class="line"><span class="keyword">select</span> `name` <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>,`pwd` <span class="keyword">as</span> <span class="string">&#x27;原密码&#x27;</span>,`pwd`<span class="operator">+</span><span class="number">1</span> <span class="keyword">as</span> <span class="string">&#x27;密码+1&#x27;</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="Where子句及逻辑运算符"><a href="#Where子句及逻辑运算符" class="headerlink" title="Where子句及逻辑运算符"></a>Where子句及逻辑运算符</h3><p><strong>Where子句</strong></p><p>作用：检索数据中符合条件的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- where子句</span></span><br><span class="line"><span class="keyword">select</span> `name`,`pwd` <span class="keyword">from</span> student <span class="keyword">where</span> `gradeid`<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> `sex`<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="comment">-- 模糊查询</span></span><br><span class="line"><span class="keyword">select</span> `name`,`pwd` <span class="keyword">from</span> student <span class="keyword">where</span> pwd <span class="keyword">between</span> <span class="number">123</span> <span class="keyword">and</span> <span class="number">124</span>;</span><br><span class="line"><span class="comment">-- not !=</span></span><br><span class="line"><span class="keyword">select</span> `name`,`pwd` <span class="keyword">from</span> student <span class="keyword">where</span> `gradeid`<span class="operator">!=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>逻辑运算符</strong></p><p>搜索的条件由一个或多个表达式组成，结果为布尔值</p><table><thead><tr><th align="center">运算符</th><th align="center">语法</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">and &amp;&amp;</td><td align="center">a and b  a &amp;&amp; b</td><td align="center">逻辑与  量真即真</td></tr><tr><td align="center">or ||</td><td align="center">a or b   a || b</td><td align="center">逻辑或 一真即真</td></tr><tr><td align="center">not !</td><td align="center">not a   !a</td><td align="center">逻辑非 取反</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(5)</title>
      <link href="/2022/03/11/mysql1_5/"/>
      <url>/2022/03/11/mysql1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=13">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><p>DML(Data Management Language)数据操作语言：</p><ul><li>insert</li><li>update</li><li>delete</li></ul><h3 id="Insert语句详解"><a href="#Insert语句详解" class="headerlink" title="Insert语句详解"></a>Insert语句详解</h3><p><strong>语法：</strong></p><blockquote><p>insert into 表明(字段1,字段2,字段3)values(‘值1’,’值2’,’值3’);</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入语句</span></span><br><span class="line"><span class="comment">-- insert into 表明(字段1,字段2,字段3)values(&#x27;值1&#x27;,&#x27;值2&#x27;,&#x27;值3&#x27;);</span></span><br><span class="line"><span class="comment">-- 自增可以省略</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`gradename`) <span class="keyword">values</span> (<span class="string">&#x27;大二&#x27;</span>);</span><br><span class="line"><span class="comment">-- 插入多行</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`gradename`) <span class="keyword">values</span> (<span class="string">&#x27;大一&#x27;</span>),(<span class="string">&#x27;大三&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `grade`;</span><br><span class="line"><span class="comment">-- 插入多个字段</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student`(`name`,`pwd`,`sex`,`birthday`,`address`,`email`,`gradeid`)<span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-1-1&#x27;</span>,<span class="string">&#x27;陕西西安&#x27;</span>,<span class="string">&#x27;zhangsan@gmail.com&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">-- 设置了默认值，不赋值会自动填充，无默认值则会为null</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student`(`name`,`gradeid`) <span class="keyword">values</span> (<span class="string">&#x27;李四&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student`;</span><br></pre></td></tr></table></figure><p>注意事项：</p><ol><li>字段和字段之间用<code>,</code>隔开</li><li>字段可以省略，但后面必须要相对应，不能少</li><li>可以同时插入多条数据，<code>values</code>后的值需要逗号隔开</li></ol><h3 id="Update语句详解"><a href="#Update语句详解" class="headerlink" title="Update语句详解"></a>Update语句详解</h3><p>语法：</p><blockquote><p>update 表名 set colnum_name=value,[colnum_name=value,…] where 条件</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改语句</span></span><br><span class="line">update `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;王五&#x27;</span> <span class="keyword">where</span> `id`<span class="operator">=</span><span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 不指定条件则会改动表中所有值</span></span><br><span class="line">update `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;老六&#x27;</span>;</span><br><span class="line"><span class="comment">-- 修改多个值</span></span><br><span class="line">update `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;小王&#x27;</span>,sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>,address<span class="operator">=</span><span class="string">&#x27;陕西咸阳&#x27;</span> <span class="keyword">where</span> `id`<span class="operator">=</span><span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 条件修改 举例</span></span><br><span class="line">update `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;老肥&#x27;</span> <span class="keyword">where</span> `id`<span class="operator">&lt;&gt;</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student`;</span><br></pre></td></tr></table></figure><p>条件：where子句，id等于某个值，大于某个值，再某个区间内修改；</p><p>操作符返回布尔值</p><table><thead><tr><th align="center">操作符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">等于</td></tr><tr><td align="center">&lt;&gt; !=</td><td align="center">不等于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">betwen…and…</td><td align="center">[再…之间]</td></tr><tr><td align="center">and</td><td align="center">与&amp;&amp;</td></tr><tr><td align="center">or</td><td align="center">或||</td></tr></tbody></table><p>注意事项：</p><ol><li>colnum_name时数据库的列，尽量带上<code>``</code></li><li>条件用来筛选，若没有指定则修改所有的列</li><li>value是一个具体的值，也可以是一个变量</li><li><code>CURRENT_TIME</code>为当前时间</li><li>多个属性之间，用逗号隔开</li></ol><h3 id="Delete和Truncate详解"><a href="#Delete和Truncate详解" class="headerlink" title="Delete和Truncate详解"></a>Delete和Truncate详解</h3><p>语法：</p><blockquote><p>delete from 表名 where [条件]</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除语句</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> `student` whrere `id`<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 清空数据库中的一张表</span></span><br><span class="line"><span class="keyword">truncate</span> `student`;</span><br></pre></td></tr></table></figure><p><strong>delete和truncate区别：</strong></p><ul><li>相同点是都能删除数据，不删除表结构</li><li>truncate重新设置自增列，计数器会归零</li><li>truncate不会影响事务</li></ul><blockquote><p>清空表优先使用truncate</p></blockquote><p><strong>拓展</strong></p><blockquote><p>用delete删除，重启数据库后：</p><p>InnoDB自增列会从1开始(因为它在内存中，断电则丢失)</p><p>MyISAM则继续从上一个子增量开始(因为它是存在文件中的，断电也不会丢失)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(4)</title>
      <link href="/2022/03/10/mysql1_4/"/>
      <url>/2022/03/10/mysql1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=10">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="MyISAM和InnoDB的区别"><a href="#MyISAM和InnoDB的区别" class="headerlink" title="MyISAM和InnoDB的区别"></a>MyISAM和InnoDB的区别</h3><table><thead><tr><th align="center">功能</th><th align="center">MyISAM</th><th align="center">InnoDB(默认)</th></tr></thead><tbody><tr><td align="center">事务支持</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">数据行锁定</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">外键约束</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">全文索引</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">表空间大小</td><td align="center">较小</td><td align="center">较大(前者的2倍)</td></tr></tbody></table><p><strong>常规使用操作</strong></p><ul><li>MyISAM 节约空间 速度较快；</li><li>InnoDB 安全性高，事务的处理，多表多用户操作</li></ul><p><strong>在物理空间存在的位置</strong></p><p>所有数据文件都在data目录下，一个文件夹对应一个数据库，本质还是文件的存储。</p><p>MySQL引擎在物理文件上的区别：</p><ul><li>InnoDB在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MyISAM对应文件<ul><li>*.frm 表结构定义文件</li><li>*.myd 数据文件(data)</li><li>*.myi 索引文件(index)</li></ul></li></ul><p><strong>设置数据库的字符集编码</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charset<span class="operator">=</span>utf8 <span class="comment">--设置中文编码</span></span><br></pre></td></tr></table></figure><p>不设置的话，回事mysql默认的字符集编码(不支持中文)</p><p>在my.ini中配置默认的编码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">character</span><span class="operator">-</span><span class="keyword">set</span><span class="operator">-</span>server<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><h3 id="修改和删除数据表字段"><a href="#修改和删除数据表字段" class="headerlink" title="修改和删除数据表字段"></a>修改和删除数据表字段</h3><p><strong>修改</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名 alter table 表名 rename 新表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student rename <span class="keyword">as</span> students;</span><br><span class="line"><span class="comment">-- 增加表的字段 alter table 表名 add 字段名 列属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> students <span class="keyword">add</span> age <span class="type">int</span>(<span class="number">11</span>);</span><br><span class="line"><span class="comment">-- 修改表的字段(一般不用来重命名，只来修改约束)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> students modify age <span class="type">varchar</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">-- 修改字段名称(一般用来重命名，不用来修改约束)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> students change age age1 <span class="type">int</span>(<span class="number">11</span>);</span><br><span class="line"><span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> students <span class="keyword">drop</span> age1;</span><br></pre></td></tr></table></figure><p><strong>删除</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表(如果表存在在删除)</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> students;</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>字段名使用<code>``</code>包裹</li><li>注释 <code>-- 和 /**/</code></li><li>sql关键字大小写不敏感</li></ul><h3 id="数据库级别的外键"><a href="#数据库级别的外键" class="headerlink" title="数据库级别的外键"></a>数据库级别的外键</h3><p><strong>简介</strong></p><blockquote><p> 外键表示一个表中的一个字段被另一个表中的一个字段引用。外键对相关表中的数据造成了限制，使MySQL能够保持参照完整性。</p></blockquote><p><strong>创建外键</strong></p><p>方式一：在创建表时，增加约束(较麻烦);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 年级表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`gradeid`)</span><br><span class="line">)engine<span class="operator">=</span>innodb charset<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表</span></span><br><span class="line"><span class="comment">-- 定义外键  添加约束 引用references 表名(字段名)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;佚名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  `birthday` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生年月&#x27;</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">key `fk_gradeid`(`gradeid`),</span><br><span class="line"><span class="keyword">constraint</span> `fk_gradeid` <span class="keyword">foreign</span> key(`gradeid`) <span class="keyword">references</span> `grade` (`gradeid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 查看表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> grade gr,student st <span class="keyword">where</span> gr.gradeid<span class="operator">=</span>st.gradeid;</span><br></pre></td></tr></table></figure><blockquote><p>注意：删除有外键关系的表时，必须要先删除引用的表，再删除被引用的表；</p></blockquote><p>方式二：创建表成功后，添加外键约束;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 年级表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`gradeid`)</span><br><span class="line">)engine<span class="operator">=</span>innodb charset<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表</span></span><br><span class="line"><span class="comment">-- 定义外键  添加约束 引用references 表名(字段名)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;佚名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  `birthday` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生年月&#x27;</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束</span></span><br><span class="line"><span class="comment">-- alter table 表 add constraint 约束名 foreign key(作为外键的列) references 对应的表(字段)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student`</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> `fk_gradeid` <span class="keyword">foreign</span> key(`gradeid`) <span class="keyword">references</span> `grade`(`gradeid`);</span><br><span class="line"><span class="comment">-- 查看表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> grade gr,student st <span class="keyword">where</span> gr.gradeid<span class="operator">=</span>st.gradeid;</span><br></pre></td></tr></table></figure><blockquote><p>以上两种添加外键的方式都是物理外键，数据库级别的外键，并不建议使用！(避免数据库过多造成困扰)</p></blockquote><p><strong>最佳实现</strong></p><ul><li>数据库就是单纯的表，只用来存数据，只有行(数据)和列(字段)；</li><li>要想使用多张表的数据，想使用外键(可用程序区实现)；</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(3)</title>
      <link href="/2022/03/09/mysql1_3/"/>
      <url>/2022/03/09/mysql1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=7">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="列的数据类型详解"><a href="#列的数据类型详解" class="headerlink" title="列的数据类型详解"></a>列的数据类型详解</h3><p><strong>数值</strong></p><ul><li>tinyint     1个字节(很分小的数据)</li><li>smallint   2个字节(较小的数据)</li><li><strong>int</strong>         4个字节(标准整数)</li><li>bigint     8个字节</li><li>float       4个字节(浮点数)</li><li>double    8个字节(浮点数)</li><li>decimal   字符串形式浮点(金融计算使用)</li></ul><p><strong>字符串</strong></p><ul><li>char        字符串固定大小  0-255</li><li><strong>varchar</strong>   可变字符串       0-65535</li><li>tinytext    微型文本          2^8-1</li><li>text         文本串             2^16-1</li></ul><p><strong>时间日期</strong></p><ul><li>date              日期类型         YYYY-MM-DD</li><li>time              时间类型         HH:mm:ss</li><li><strong>datetime</strong>      日期时间类型   YYYY-MM-DD HH:mm:ss</li><li><strong>timestramp</strong>   时间戳           1970.1.1到现在的毫秒数</li><li>year               年份</li></ul><p><strong>null</strong></p><ul><li>没有值，位置</li><li>尽量不要使用null进行运算，结果为null</li></ul><h3 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h3><p><strong>Unsigned</strong></p><ul><li>无符号的整数</li><li>改列不能声明为负数</li></ul><p><strong>zerofill</strong></p><ul><li>0填充的</li><li>不足的位数使用0来填充 int(3) 5(005)</li></ul><p><strong>自增长</strong>(<strong>AUTO_INCREMENT</strong>)</p><ul><li>自动在上一条记录的基础上+1</li><li>通常用来设计唯一的主键~index，必须是整数类型</li><li>可以自定义设计主键自增的起始值和步长</li></ul><p><strong>非空</strong>(null,not null)</p><ul><li>设置为not null后，不给它赋值就会报错</li><li>null，如果不填值，默认为null</li></ul><p><strong>默认</strong></p><ul><li>设置默认的值</li><li>赋值的时候不给值，则会使用默认值</li></ul><p><strong>主键</strong>(<strong>PRIMARY KEY</strong>)</p><ul><li>每个表只能定义一个主键。</li><li>主键值必须唯一标识表中的每一行，且不能为 NULL，即表中不可能存在有相同主键值的两行数据。这是唯一性原则。</li><li>一个字段名只能在联合主键字段表中出现一</li></ul><p><strong>拓展</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">id         主键</span></span><br><span class="line"><span class="comment">&#x27;version&#x27;  乐观锁</span></span><br><span class="line"><span class="comment">is_delete  伪删除</span></span><br><span class="line"><span class="comment">gmt_create 创建时间</span></span><br><span class="line"><span class="comment">gmt_update 修改时间</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h3><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">  auto_increment 自增长</span></span><br><span class="line"><span class="comment">字段名用英文尽量用&#x27;&#x27;括起来</span></span><br><span class="line"><span class="comment">所有的语句后加, 最后一个不加</span></span><br><span class="line"><span class="comment">primary key 主键 每个表只有一个 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `student`(</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;佚名&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;123456&#x27;</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">varchar</span>(<span class="number">2</span>)  <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span> comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` datetime <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生年月&#x27;</span>,</span><br><span class="line">`address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDENT</span><br></pre></td></tr></table></figure><p><strong>格式</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] `表名`(</span><br><span class="line">`字段名` 列类型[属性][索引][注释],</span><br><span class="line">`字段名` 列类型[属性][索引][注释],</span><br><span class="line">`字段名` 列类型[属性][索引][注释]</span><br><span class="line">)[表类型][字符集设置][注释]</span><br></pre></td></tr></table></figure><p><strong>常用命令</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database student; <span class="comment">--查看出啊关键数据库语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student; <span class="comment">--查看student数据表的定义</span></span><br><span class="line"><span class="keyword">desc</span> student; <span class="comment">--显示表的结构</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(2)</title>
      <link href="/2022/03/08/mysql1_2/"/>
      <url>/2022/03/08/mysql1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=4">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="SQLyog安装"><a href="#SQLyog安装" class="headerlink" title="SQLyog安装"></a>SQLyog安装</h3><ol><li><p>下载SQLyog</p><div class="btns rounded grid5">            <a class="button" href='https://pan.baidu.com/s/11ON04pdDyGCFFmSeBBddTw' title='百度云提取码：vaje'><i class='fas fa-download'></i>百度云提取码：vaje</a><a class="button" href='https://jokerdig.lanzoub.com/iiKkN0160u2f' title='蓝奏云密码：joker'><i class='fas fa-download'></i>蓝奏云密码：joker</a>          </div></li><li><p>一键式安装</p><p>选择Chinese</p><p><img src="https://s2.loli.net/2022/03/08/Y1Et9owWOc548DF.png" alt="image-20220308140216512"></p><p>下一步</p><p><img src="https://s2.loli.net/2022/03/08/CKfauYxUwZBJVLO.png" alt="image-20220308140310996"></p><p><img src="https://s2.loli.net/2022/03/08/PQluBJCvmV9Lwqt.png" alt="image-20220308140533220"></p><p><img src="https://s2.loli.net/2022/03/08/IeJi3y9nUMaOdjP.png" alt="image-20220308140600828"></p><p><img src="https://s2.loli.net/2022/03/08/b85z1gCQySDaT6e.png" alt="image-20220308140716538"></p><p><img src="https://s2.loli.net/2022/03/08/U9pv3VcJ16qi2bY.png" alt="image-20220308140816660"></p><p><img src="https://s2.loli.net/2022/03/08/JCpgGfDqnBTU9ax.png" alt="image-20220308140839068"></p><p>打开后输入密钥</p><blockquote><p>名称：any</p><p>证书秘钥：dd987f34-f358-4894-bd0f-21f3f04be9c1</p></blockquote><p><img src="https://s2.loli.net/2022/03/08/hzcgeisu8WwTvUY.png" alt="image-20220308141017354"></p></li><li><p>连接数据库</p><p>确保MySQL服务正在运行</p><p><img src="https://s2.loli.net/2022/03/08/4EHnQZBveYr7WaP.png" alt="image-20220308141301685"></p><p>测试连接</p><p><img src="https://s2.loli.net/2022/03/08/zm37cZtsbj4QdSJ.png" alt="image-20220308141417877"></p><p><img src="https://s2.loli.net/2022/03/08/21X5GohpADVjEev.png" alt="image-20220308141451964"></p></li><li><p>安装完成 ヾ(•ω•`)o</p></li></ol><blockquote><p>博主使用<a href="https://navicat.com.cn/"><strong>Navicat</strong></a></p><p><a href="https://www.cnblogs.com/kkdaj/p/14987106.html">学习版安装步骤</a></p></blockquote><h3 id="基本的命令行操作"><a href="#基本的命令行操作" class="headerlink" title="基本的命令行操作"></a>基本的命令行操作</h3><p><strong>命令连接数据库</strong></p><blockquote><p>前提将MySQL安装目录下bin的地址添加到环境变量Path中</p></blockquote><p>连接数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/08/RrhA97Xc1DKGNqs.png" alt="image-20220308144007338"></p><p>刷新权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges</span><br></pre></td></tr></table></figure><blockquote><p>所有语句分号结尾</p></blockquote><p>查看所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/08/p8eAmMCP7IYhO4B.png" alt="image-20220308143920091"></p><p>切换数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">user</span> test;</span><br></pre></td></tr></table></figure><p>查看数据库中所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><p>查看数据库中所有表的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span> userinfo;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/08/VdZ2mwTcySnALEC.png" alt="image-20220308144352921"></p><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database demo1;</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><p>注释</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p>学习 DDL(定义) DML(操作) DQL(查询) DCL(控制)</p><p>CRUD 增删改查</p></blockquote><h3 id="操作数据库语句"><a href="#操作数据库语句" class="headerlink" title="操作数据库语句"></a>操作数据库语句</h3><blockquote><p>操作数据库-&gt;操作数据库中的表-&gt;操作表中的数据</p><p>MySQL 关键字不区分大小写</p></blockquote><p>数据库基本操作(CRUD)</p><ul><li><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database student;</span><br></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> students(</span><br><span class="line">userid <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">address <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students (username,age,address) <span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;陕西西安&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students (username,age,address)<span class="keyword">values</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;陕西渭南&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>条件查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 条件查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> students;</span><br></pre></td></tr></table></figure></li><li><p>修改数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改数据 (userid=2的数据)</span></span><br><span class="line">update students <span class="keyword">set</span> username<span class="operator">=</span><span class="string">&#x27;王五&#x27;</span>,age <span class="operator">=</span><span class="number">26</span>,address<span class="operator">=</span><span class="string">&#x27;陕西咸阳&#x27;</span> <span class="keyword">where</span> userid<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> students <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;王五&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> students;</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据库</span></span><br><span class="line"><span class="keyword">drop</span> database student;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MySQL】MySQL基础教程(1)</title>
      <link href="/2022/03/07/mysql1_1/"/>
      <url>/2022/03/07/mysql1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费MySQL基础讲解视频：<a href="https://www.bilibili.com/video/BV1NJ411J79W?p=1">【狂神说Java】MySQL最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是数据库-为什么要学"><a href="#什么是数据库-为什么要学" class="headerlink" title="什么是数据库,为什么要学"></a>什么是数据库,为什么要学</h3><p>JavaEE：企业级Java开发 Web</p><p>前端（页面，展示，数据）</p><p>后台 连接数据库(JDBC..),连接前端(控制，控制视图跳转，和给前端传递数据)</p><p><strong>数据库</strong> (存数据，txt，excel，word)</p><blockquote><p>只会写代码，学好数据库  初级</p><p>操作系统，数据结构与算法！中级</p><p>离散数学 数学电路 体系结构 编程原理 +实战经验 高级</p></blockquote><p><strong>为什么学习数据库</strong></p><ol><li>岗位需求</li><li>数据的重要性</li><li>存储数据 存数据(去IOE)</li><li>数据库是所有软件体系中最核心的存在</li></ol><p><strong>什么是数据库</strong></p><p>数据库(DB DataBase)</p><p>概念：按照数据结构来组织、 存储和管理数据的仓库</p><p>作用：存储和管理数据</p><h3 id="初始MySQL-关系型和非关系型数据库"><a href="#初始MySQL-关系型和非关系型数据库" class="headerlink" title="初始MySQL,关系型和非关系型数据库"></a>初始MySQL,关系型和非关系型数据库</h3><p><strong>数据库分类</strong></p><p>关系型数据库(SQL)</p><ul><li>MySQL,Oracle,SQLServer,DB2,SQLite…</li><li>通过表和表之间，行和列之间的关系进行数据的存储。</li></ul><p>非关系型数据库(NoSQL) Not Only</p><ul><li>Redis,MongDB…</li><li>对象存储，通过对象的自身属性来决定。</li></ul><p><strong>DBMS</strong>数据库管理系统(DataBase Management System)</p><p>是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，简称DBMS。</p><ul><li>数据库管理软件，科学有效的管理、维护和获取数据。</li><li>MySQL,数据库管理系统</li></ul><p><strong>MySQL</strong></p><blockquote><p> MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性</p></blockquote><p><a href="https://www.mysql.com/">MySQL</a>是最好的 <a href="https://baike.baidu.com/item/RDBMS/1048260">RDBMS</a> (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>开源的数据库软件。</p><p>体积小，速度快，成本低。</p><h3 id="安装MySQL详细说明"><a href="#安装MySQL详细说明" class="headerlink" title="安装MySQL详细说明"></a>安装MySQL详细说明</h3><p><strong>Windows安装</strong></p><ol><li><p><a href="https://dev.mysql.com/downloads/mysql/">MySQL下载</a> 按下图步骤</p><p><img src="https://s2.loli.net/2022/03/07/n15sgcjtZT7QmOb.png"></p></li><li><p>下载完后，我们将 zip 包解压到相应的目录，这里我将解压后的文件夹放在 <strong>C:\mysql-8.0.28</strong> 下。</p></li><li><p>接下来我们需要配置下 MySQL 的配置文件</p><p>打开刚刚解压的文件夹 <strong>C:\mysql-8.0.28</strong> ，在该文件夹下创建 <strong>my.ini</strong> 配置文件，编辑 <strong>my.ini</strong> 配置以下基本信息：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">client</span>]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"> </span><br><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="string">port</span> <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="string">basedir=C:\\mysql-8.0.28</span></span><br><span class="line"><span class="comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span></span><br><span class="line"><span class="comment"># datadir=C:\\web\\sqldata</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="string">max_connections=20</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br></pre></td></tr></table></figure></li><li><p>接下来我们来启动下 MySQL 数据库：</p><p>以管理员身份打开 cmd 命令行工具，切换目录：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">C:\mysql-8.0.28\bin</span></span><br></pre></td></tr></table></figure><p>初始化数据库：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysqld</span> <span class="string">--initialize</span> <span class="string">--console</span></span><br></pre></td></tr></table></figure><p>执行完成后，会输出 root 用户的初始默认密码，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="number">2022-03</span><span class="string">-7T03:35:00.464644Z</span> <span class="number">5</span> [<span class="string">Note</span>] [<span class="string">MY-010454</span>] [<span class="string">Server</span>] <span class="string">A</span> <span class="string">temporary</span> <span class="string">password</span> <span class="string">is</span> <span class="string">generated</span> <span class="string">for</span> <span class="string">root@localhost:</span> <span class="string">APWCY5ws&amp;hjQ</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>APWCY5ws&amp;hjQ</strong> 就是初始密码，后续登录需要用到，你也可以在登陆后修改密码。</p><p>输入以下安装命令：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysqld</span> <span class="string">install</span></span><br></pre></td></tr></table></figure><p>启动输入以下命令即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">net</span> <span class="string">start</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><blockquote><p>注意: 在 5.7 需要初始化 data 目录：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">C:\mysql-8.0.28\bin</span> </span><br><span class="line"><span class="string">mysqld</span> <span class="string">--initialize-insecure</span> </span><br></pre></td></tr></table></figure><p>初始化后再运行 net start mysql 即可启动 mysql。</p></blockquote></li><li><p>登录 MySQL</p><p>   当 MySQL 服务已经运行时, 我们可以通过 MySQL 自带的客户端工具登录到 MySQL 数据库中, 首先打开命令提示符, 输入以下格式的命名:</p>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysql</span> <span class="string">-h</span> <span class="string">主机名</span> <span class="string">-u</span> <span class="string">用户名</span> <span class="string">-p</span></span><br></pre></td></tr></table></figure><p>   参数说明：</p><ul><li><strong>-h</strong> : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;</li><li><strong>-u</strong> : 登录的用户名;</li><li><strong>-p</strong> : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。</li></ul><p>   如果我们要登录本机的 MySQL 数据库，只需要输入以下命令即可：</p>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysql</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">-p</span></span><br></pre></td></tr></table></figure><p>   按回车确认, 如果安装正确且 MySQL 正在运行, 会得到以下响应:</p>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Enter password:</span></span><br></pre></td></tr></table></figure><p>   若密码存在, 输入密码登录, 不存在则直接按回车登录。登录成功后你将会看到 Welcome to the MySQL monitor… 的提示语。</p><p>   然后命令提示符会一直以 <strong>mysql&gt;</strong> 加一个闪烁的光标等待命令的输入, 输入 <strong>exit</strong> 或 <strong>quit</strong> 退出登录。</p><p>   <strong>Linux安装步骤：</strong></p><blockquote><p><a href="https://www.runoob.com/mysql/mysql-install.html">Linux安装MySQL| 菜鸟教程 (runoob.com)</a></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(10)</title>
      <link href="/2022/03/02/javaScript2_1/"/>
      <url>/2022/03/02/javaScript2_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=28">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p><p>JavaScript基础教程笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzoub.com/imNqP00tuate">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1rytprhwXc9Ej9yV4XhxQyg">下载地址</a> 提取码：86v8</p></blockquote><h3 id="jQuery事件"><a href="#jQuery事件" class="headerlink" title="jQuery事件"></a>jQuery事件</h3><p><strong>常见DOM事件</strong></p><table><thead><tr><th align="center">鼠标事件</th><th align="center">键盘事件</th><th align="center">表单事件</th><th align="center">文档/窗口事件</th></tr></thead><tbody><tr><td align="center"><a href="https://www.runoob.com/jquery/event-click.html">click</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-keypress.html">keypress</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-submit.html">submit</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-load.html">load</a></td></tr><tr><td align="center"><a href="https://www.runoob.com/jquery/event-dblclick.html">dblclick</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-keydown.html">keydown</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-change.html">change</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-resize.html">resize</a></td></tr><tr><td align="center"><a href="https://www.runoob.com/jquery/event-mouseenter.html">mouseenter</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-keyup.html">keyup</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-focus.html">focus</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-scroll.html">scroll</a></td></tr><tr><td align="center"><a href="https://www.runoob.com/jquery/event-mouseleave.html">mouseleave</a></td><td align="center"></td><td align="center"><a href="https://www.runoob.com/jquery/event-blur.html">blur</a></td><td align="center"><a href="https://www.runoob.com/jquery/event-unload.html">unload</a></td></tr><tr><td align="center"><a href="https://www.runoob.com/jquery/event-hover.html">hover</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p><strong>鼠标事件练习</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入jQuery--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#move</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#f5cdd5</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--获取鼠标坐标--&gt;</span></span><br><span class="line">mouse: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;coordinate&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;move&quot;</span>&gt;</span></span><br><span class="line">在这里移动鼠标</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 当网页元素加载完毕后响应时间</span></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// mousemove耗费资源过大，请谨慎使用</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 直接调用MOUSEMOVE现已被弃用</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#move&#x27;</span>).MOUSEMOVE(<span class="function"><span class="keyword">function</span>(<span class="params">coordinates</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;#coordinate&#x27;</span>).text(<span class="string">&#x27;x:&#x27;</span>+coordinates.pageX+<span class="string">&#x27; y:&#x27;</span>+coordinates.pageY);</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jQuery操作DOM元素"><a href="#jQuery操作DOM元素" class="headerlink" title="jQuery操作DOM元素"></a>jQuery操作DOM元素</h3><p><strong>节点文本操作</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#text-ul li[name=java]&#x27;</span>).text(<span class="string">&#x27;JavaSE&#x27;</span>);<span class="comment">// 设置值</span></span><br><span class="line">$(<span class="string">&#x27;#text-ul .js&#x27;</span>).html(<span class="string">&#x27;JS&#x27;</span>);<span class="comment">// 获得值</span></span><br></pre></td></tr></table></figure><p><strong>css操作</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#text-ul li[name=java]&#x27;</span>).css(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);<span class="comment">// 修改颜色</span></span><br></pre></td></tr></table></figure><p><strong>元素显示和隐藏</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示和隐藏 hide()隐藏 show()显示</span></span><br><span class="line"><span class="comment">// 本质是display:none;</span></span><br><span class="line">$(<span class="string">&#x27;#text-ul .js&#x27;</span>).hide();</span><br></pre></td></tr></table></figure><p><strong>ajax简单了解</strong></p><blockquote><p>异步的 JavaScript 和 XML</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">loadXMLDoc</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span></span><br><span class="line"><span class="javascript">&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span></span><br><span class="line"><span class="javascript">xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">else</span></span></span><br><span class="line"><span class="javascript">&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// IE6, IE5 浏览器执行代码</span></span></span><br><span class="line"><span class="javascript">xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myDiv&quot;</span>).innerHTML=xmlhttp.responseText;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">xmlhttp.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;/try/ajax/ajax_info.txt&quot;</span>,<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">xmlhttp.send();</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDiv&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>使用 AJAX 修改该文本内容<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;loadXMLDoc()&quot;</span>&gt;</span>修改内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="前端小结及开发技巧分享"><a href="#前端小结及开发技巧分享" class="headerlink" title="前端小结及开发技巧分享"></a>前端小结及开发技巧分享</h3><p><strong>巩固知识</strong></p><ol><li>巩固JS（看jQuery源码，看js实现的额小游戏源码）</li><li>巩固HTML，CSS（找一些好看的页面，自己动手练）</li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(9)</title>
      <link href="/2022/03/01/javaScript1_9/"/>
      <url>/2022/03/01/javaScript1_9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=25">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="表单提交验证及前端密码MD5加密"><a href="#表单提交验证及前端密码MD5加密" class="headerlink" title="表单提交验证及前端密码MD5加密"></a>表单提交验证及前端密码MD5加密</h3><p><strong>MD5加密及表单验证</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--MD5工具类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    表单绑定提交事件</span></span><br><span class="line"><span class="comment">    onsubmit 绑定一个提交检测函数 true false</span></span><br><span class="line"><span class="comment">    将这个结果返回给表单，使用onsubmit接受</span></span><br><span class="line"><span class="comment">    onsubmit=&#x27;return check()&#x27;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;https://baidu.com&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return check()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>账号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通过onClick绑定按钮点击事件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--隐藏的加密密码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">id</span>=<span class="string">&quot;md5-pwd&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;user&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pwd&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> MD5pwd = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;md5-pwd&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// MD5算法 加密密码</span></span></span><br><span class="line"><span class="javascript">        MD5pwd.value = md5(pwd.value);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 可以校验判断表单内容，true提交 false阻止 提交</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="初识jQuery及公式"><a href="#初识jQuery及公式" class="headerlink" title="初识jQuery及公式"></a>初识jQuery及公式</h3><p><strong>jQuery</strong> </p><ul><li><p>是一个 JavaScript 库。</p></li><li><p>极大地简化了 JavaScript 编程。</p></li><li><p>很容易学习。</p></li></ul><p><strong>获取jQuery</strong></p><p><a href="https://jquery.com/">jQuery</a>官网下载</p><p>jQuery3.6.0在线版</p><p><code>&lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt;</code></p><blockquote><p>公式：$(selector).action()</p></blockquote><p><strong>练习</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入jQuery--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    公式：$(selector).action()</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;baidu&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// js获取Dom</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> baidu = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;baidu&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// jQuery实现点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;#baidu&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&quot;百度一下&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h3><p><strong>jQuery选择器</strong></p><ul><li>元素选择器<br><code>$(&quot;p&quot;)</code></li><li>#id 选择器<br><code>$(&quot;#test&quot;)</code></li><li>.class 选择器<br><code>$(&quot;.test&quot;)</code></li></ul><p><strong>更多选择器</strong></p><table><thead><tr><th align="center">选择器</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">$(“*”)</td><td align="center">选取所有元素</td></tr><tr><td align="center">$(this)</td><td align="center">选取当前 HTML 元素</td></tr><tr><td align="center">$(“p.intro”)</td><td align="center">选取 class 为 intro 的 <p> 元素</td></tr><tr><td align="center">$(“p:first”)</td><td align="center">选取第一个 <p> 元素</td></tr><tr><td align="center">$(“ul li:first”)</td><td align="center">选取第一个 <ul> 元素的第一个 <li> 元素</td></tr><tr><td align="center">$(“ul li:first-child”)</td><td align="center">选取每个 <ul> 元素的第一个 <li> 元素</td></tr><tr><td align="center">$(“[href]”)</td><td align="center">选取带有 href 属性的元素</td></tr><tr><td align="center">$(“a[target=’_blank’]”)</td><td align="center">选取所有 target 属性值等于 “_blank” 的 <a> 元素</td></tr><tr><td align="center">$(“a[target!=’_blank’]”)</td><td align="center">选取所有 target 属性值不等于 “_blank” 的 <a> 元素</td></tr><tr><td align="center">$(“:button”)</td><td align="center">选取所有 type=”button” 的 <input> 元素 和 <button> 元素</td></tr><tr><td align="center">$(“tr:even”)</td><td align="center">选取偶数位置的 <tr> 元素</td></tr><tr><td align="center">$(“tr:odd”)</td><td align="center">选取奇数位置的 <tr> 元素</td></tr></tbody></table><p><strong>练习</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 原生js选择器</span></span><br><span class="line">    <span class="comment">// 标签选择器</span></span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName();</span><br><span class="line">    <span class="comment">// id选择器</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById();</span><br><span class="line">    <span class="comment">// 类选择器</span></span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName();</span><br><span class="line">    <span class="comment">// jQuery选择器</span></span><br><span class="line">    <span class="comment">// 元素选择器</span></span><br><span class="line">    $(<span class="string">&quot;p&quot;</span>)</span><br><span class="line">    <span class="comment">// #id 选择器</span></span><br><span class="line">    $(<span class="string">&quot;#test&quot;</span>)</span><br><span class="line">    <span class="comment">// .class 选择器</span></span><br><span class="line">    $(<span class="string">&quot;.test&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(8)</title>
      <link href="/2022/02/28/javaScript1_8/"/>
      <url>/2022/02/28/javaScript1_8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=22">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="删除DOM节点"><a href="#删除DOM节点" class="headerlink" title="删除DOM节点"></a>删除DOM节点</h3><p>删除节点的步骤：先获取父节点，再通过父节点删除自己。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>one<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>two<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;p1&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> father = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;father&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 通过father移除子节点p1</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">father.removeChild(p1)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    father.removeChild(father.children[<span class="number">0</span>])</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>注意：删除多个节点是一个动态的过程，children是在变化的。</p><h3 id="创建和插入DOM节点"><a href="#创建和插入DOM节点" class="headerlink" title="创建和插入DOM节点"></a>创建和插入DOM节点</h3><p><strong>插入节点</strong></p><p>我们获得某个DOM节点，假设这个DOM节点是空的，我们通过innerHTML就可以增加一个元素，若这个DOM节点已经存在元素了，那就得内容就会被覆盖。</p><p><strong>追加</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;js&quot;</span>&gt;JavaScript&lt;/p&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span>JavaSE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span>JavaEE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span>JavaME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> father = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;father&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;js&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 追加元素到后面</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    father.append(js)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>创建新节点，实现插入</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;js&quot;</span>&gt;JavaScript&lt;/p&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span>JavaSE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span>JavaEE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span>JavaME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> father = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;father&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;js&#x27;</span>);</span><br><span class="line">    <span class="comment">// 追加元素到后面</span></span><br><span class="line">    father.append(js)</span><br><span class="line">    <span class="comment">// 通过js 创建一个新的节点</span></span><br><span class="line">    <span class="keyword">var</span> newp=<span class="built_in">document</span>.createElement(<span class="string">&#x27;p&#x27;</span>);<span class="comment">// 创建一个p标签</span></span><br><span class="line">    newp.id=<span class="string">&#x27;newp&#x27;</span>;</span><br><span class="line">    newp.innerText=<span class="string">&#x27;创建p标签&#x27;</span></span><br><span class="line">    father.appendChild(newp)</span><br><span class="line"><span class="comment">// 创建一个标签节点</span></span><br><span class="line">    <span class="keyword">var</span> myscript=<span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    myscript.setAttribute(<span class="string">&#x27;type&#x27;</span>,<span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line"><span class="comment">// 插入script标签</span></span><br><span class="line">    father.appendChild(myscript);</span><br><span class="line"> <span class="comment">// 修改body背景 需要为body定义id后来实现</span></span><br><span class="line">    <span class="keyword">var</span> baby=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;body&#x27;</span>)</span><br><span class="line">    baby.style.background=<span class="string">&#x27;#e09999&#x27;</span>;</span><br><span class="line">    <span class="comment">// 通过创建style标签 来修改body背景</span></span><br><span class="line">    <span class="keyword">var</span> myStyle = <span class="built_in">document</span>.createElement(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">    myStyle.setAttribute(<span class="string">&#x27;type&#x27;</span>,<span class="string">&#x27;text/css&#x27;</span>);</span><br><span class="line">    myStyle.innerHTML= <span class="string">&#x27;body&#123;background: #e09999&#125;&#x27;</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].appendChild(myStyle);</span><br></pre></td></tr></table></figure><p><strong>insertBefore</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js插入到ee之前  insertBefore(要插入的节点,目标节点)</span></span><br><span class="line">   <span class="keyword">var</span> ee = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;ee&#x27;</span>);</span><br><span class="line">   father.insertBefore(js,ee);</span><br><span class="line">   <span class="comment">// me插入到se前</span></span><br><span class="line">   <span class="keyword">var</span> se = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;se&#x27;</span>);</span><br><span class="line">   <span class="keyword">var</span> me = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;me&#x27;</span>);</span><br><span class="line">   father.insertBefore(me,se);</span><br></pre></td></tr></table></figure><h3 id="获得和设置表单的值"><a href="#获得和设置表单的值" class="headerlink" title="获得和设置表单的值"></a>获得和设置表单的值</h3><p><strong>表单From</strong></p><ul><li>文本框 text</li><li>密码框 password</li><li>下拉框 select…option</li><li>复选框 checkBox</li><li>单选框 radio</li><li>隐藏域 hidden</li><li>……</li></ul><p>表单作用：提交信息</p><p><strong>获得提交信息</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>账号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;boy&#x27;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;girl&#x27;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 获取表单dom</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> input_text = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;user&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> man = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;boy&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> girl = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;girl&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 获取账号输入框值</span></span></span><br><span class="line"><span class="javascript">    input_text.value;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 修改账号输入框值</span></span></span><br><span class="line"><span class="javascript">    input_text.value=<span class="string">&#x27;jokerdig&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 获取单选框选中情况</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(man.checked);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(girl.checked);</span></span><br><span class="line"><span class="javascript">    girl.checked=<span class="literal">true</span>;<span class="comment">// 女被选中</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(7)</title>
      <link href="/2022/02/26/javaScript1_7/"/>
      <url>/2022/02/26/javaScript1_7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=19">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="操作BOM对象"><a href="#操作BOM对象" class="headerlink" title="操作BOM对象"></a>操作BOM对象</h3><p>JavaScript诞生就是为了能够在浏览器中运行！</p><p>BOM：浏览器对象模型</p><ul><li>IE 6-11</li><li>Chrom</li><li>Safari</li><li>FireFox</li></ul><p><strong>Window</strong></p><p>window代表 浏览器窗口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 常用获取窗口宽度高度</span></span><br><span class="line"><span class="built_in">window</span>.alert(<span class="string">&#x27;jokerdig&#x27;</span>)</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line"><span class="built_in">window</span>.innerHeight</span><br><span class="line"><span class="number">722</span></span><br><span class="line"><span class="built_in">window</span>.innerWidth</span><br><span class="line"><span class="number">951</span></span><br><span class="line"><span class="built_in">window</span>.outerHeight</span><br><span class="line"><span class="number">824</span></span><br><span class="line"><span class="built_in">window</span>.outerWidth</span><br><span class="line"><span class="number">1536</span></span><br></pre></td></tr></table></figure><p><strong>Navigator</strong></p><p>Navigator封装了浏览器的信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">navigator.appName</span><br><span class="line"><span class="string">&#x27;Netscape&#x27;</span></span><br><span class="line">navigator.appVersion</span><br><span class="line"><span class="string">&#x27;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27;</span></span><br><span class="line">navigator.userAgent</span><br><span class="line"><span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27;</span></span><br><span class="line">navigator.platform</span><br><span class="line"><span class="string">&#x27;Win32&#x27;</span></span><br></pre></td></tr></table></figure><p>大多数时候我们不适用<code>navigator</code>对象，因为可以被人为修改。</p><p><strong>Screen</strong></p><p>代表屏幕尺寸</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">screen.height</span><br><span class="line"><span class="number">864</span></span><br><span class="line">screen.width</span><br><span class="line"><span class="number">1536</span></span><br></pre></td></tr></table></figure><p><strong>Location</strong></p><p>location代表当前页面URL信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location</span><br><span class="line"><span class="attr">host</span>: <span class="string">&quot;cn.bing.com&quot;</span> </span><br><span class="line"><span class="attr">href</span>: <span class="string">&quot;https://cn.bing.com/chrome/newtab&quot;</span></span><br><span class="line"><span class="attr">protocol</span>: <span class="string">&quot;https:&quot;</span> <span class="comment">// 协议</span></span><br><span class="line"><span class="attr">reload</span>: ƒ reload() <span class="comment">// 重新加载 刷新网页</span></span><br><span class="line"><span class="comment">// 设置新的地址</span></span><br><span class="line">location.assign(<span class="string">&#x27;https://jokerdig.com&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>Document</strong></p><p>document代表当前页面，HTML DOM文档树。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.title</span><br><span class="line"><span class="string">&#x27;必应&#x27;</span></span><br><span class="line"><span class="built_in">document</span>.title=<span class="string">&#x27;出错了(づ￣ 3￣)づ&#x27;</span></span><br><span class="line"><span class="string">&#x27;出错了(づ￣ 3￣)づ&#x27;</span></span><br><span class="line"><span class="built_in">document</span>.title</span><br><span class="line"><span class="string">&#x27;出错了(づ￣ 3￣)づ&#x27;</span></span><br></pre></td></tr></table></figure><p>获取具体的文档树节点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>JavaEE<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>JavaSE<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> dl= <span class="built_in">document</span>.getElementById(<span class="string">&#x27;app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>获取cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie</span><br><span class="line"><span class="string">&#x27;Hm_lvt_73ce72c8d50c16faa7230ffd058063db=1645854529; _clck=10jp5qg|1|ezb|0; Hm_lpvt_73ce72c8d50c16faa7230ffd058063db=164582377; _clsk=1fnjpdd|1645854378352|2|1|d.clarity.ms/collect&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>cookie也可能被恶意劫持，造成隐私泄露。</p><p>服务器设置cookie:httpOnly 来保证安全</p></blockquote><p><strong>History</strong></p><p>history代表浏览器历史记录。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history.back()<span class="comment">// 后退</span></span><br><span class="line">history.forward()<span class="comment">// 前进</span></span><br></pre></td></tr></table></figure><h3 id="获得DOM节点"><a href="#获得DOM节点" class="headerlink" title="获得DOM节点"></a>获得DOM节点</h3><p>浏览器网页就是一个DOM树形结构。</p><ul><li>更新：更新DOM节点</li><li>遍历DOM节点；得到DOM节点</li><li>删除：删除一个DOM节点</li><li>添加：添加一个新的节点</li></ul><p>要操作一个DOM节点，就必须要先获得这个DOM节点。</p><p><strong>获得DOM节点</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 对应css选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;h1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;p1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> p2 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;p2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> father = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;father&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 获得父节点下的所有子节点</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> children = father.children;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// father.firstChild;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// father.lastChild;</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上方是原生代码，之后又更简洁的写法；</p></blockquote><h3 id="更新DOM节点"><a href="#更新DOM节点" class="headerlink" title="更新DOM节点"></a>更新DOM节点</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--一个空的div--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 获得对应DOM</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 修改文本 表示一个节点及其后代的“渲染”文本内容</span></span></span><br><span class="line"><span class="javascript">    div1.innerText=<span class="string">&#x27;Hey,Joker&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 修改HTML</span></span></span><br><span class="line"><span class="javascript">    div1.innerHTML=<span class="string">&#x27;&lt;strong&gt;Hey,Joker&lt;/strong&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 修改css</span></span></span><br><span class="line"><span class="javascript">    div1.style.color=<span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(6)</title>
      <link href="/2022/02/25/javaScript1_6/"/>
      <url>/2022/02/25/javaScript1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=16">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="JSON对象"><a href="#JSON对象" class="headerlink" title="JSON对象"></a>JSON对象</h3><p>JSON: <strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation(JavaScript 对象表示法)</p><p>JSON 是存储和交换文本信息的语法，类似 XML。</p><p>JSON 比 XML 更小、更快，更易解析。</p><p><strong>格式：</strong></p><ul><li>对象用{}</li><li>数组用[]</li><li>所有的键值对使用key:value</li></ul><p>JSON字符串和JS对象的转化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对象转化为json字符串</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(user);</span><br><span class="line"><span class="comment">// json字符串转换为对象 参数为json字符串</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:10,&quot;sex&quot;:&quot;男&quot;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="面向对象原型继承"><a href="#面向对象原型继承" class="headerlink" title="面向对象原型继承"></a>面向对象原型继承</h3><p>JavaScript，Java，C#… 面向对象。</p><p>JavaScrip的区别：</p><ul><li>类：模板；</li><li>对象：具体的实例；</li></ul><p>在JavaScript中需要大家换一下思维方式。</p><p>原型：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">run</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name+<span class="string">&quot;run...&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> li = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// li的原型是student</span></span><br><span class="line">li.__proto__= student;</span><br></pre></td></tr></table></figure><p>定义一个类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6之前给Student新增方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Student.prototype.hello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="面向对象class继承"><a href="#面向对象class继承" class="headerlink" title="面向对象class继承"></a>面向对象class继承</h3><blockquote><p>在ES6中，class (类)作为对象的模板被引入，可以通过 class 关键字定义类。</p><p>class 的本质是 function。</p></blockquote><p><strong>定义一个类</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6之后引入的class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;class的hello&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> user1 = <span class="keyword">new</span> Student(<span class="string">&#x27;李四&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> user2 = <span class="keyword">new</span> Student(<span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"><span class="comment">// 运行结果</span></span><br><span class="line">user1.name</span><br><span class="line"><span class="string">&#x27;李四&#x27;</span></span><br><span class="line">user2.name</span><br><span class="line"><span class="string">&#x27;张三&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>继承</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建Student</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;class的hello&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elementary</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name,age</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);<span class="comment">// 实现父类的name</span></span><br><span class="line">        <span class="built_in">this</span>.age = age;<span class="comment">// 重写方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">myFunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;我是一名小学生&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> elementary = <span class="keyword">new</span> Elementary(<span class="string">&#x27;王五&#x27;</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>本质：查看对象原型</p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202251402401.png" alt="image-20220225140226653"></p><p><strong>原型链</strong></p><p>JavaScript中每个对象都可以有一个原型<code>_proto_</code>，这个原型还可以有它自己的原型，以此类推，形成一个原型链。</p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202251408035.png" alt="查看源图像"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(5)</title>
      <link href="/2022/02/24/javaScript1_5/"/>
      <url>/2022/02/24/javaScript1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=13">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="变量的作用域、let、const"><a href="#变量的作用域、let、const" class="headerlink" title="变量的作用域、let、const"></a>变量的作用域、let、const</h3><p><strong>变量的作用域</strong></p><p>js中，var定义变量实际是有作用域的。</p><p>假设在函数体中声明，则在函数体外不可以使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = x+<span class="number">2</span>;<span class="comment">//x is not defined</span></span><br></pre></td></tr></table></figure><p>如果两个函数使用了相同的变量名，只要在函数内部，就不冲突。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">2</span>;</span><br><span class="line">    x = x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部函数可以访问外部函数的成员，反之则不行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 内部函数可以访问外部函数的成员，反之则不行</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">box1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> y = x+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> z = y+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设，内部函数变量和外部函数的变量重名。</p><blockquote><p>假设在JavaScript中，函数查找变量从自身函数开始，由内向外查找 ，假设外部存在同名的函数变量，内部变量会屏蔽外部变量。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">box1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(x)</span><br><span class="line">    &#125;</span><br><span class="line">    box1()</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">&#125;</span><br><span class="line">box()</span><br></pre></td></tr></table></figure><p>提升变量的作用域</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;x&#x27;</span>+y;</span><br><span class="line">    <span class="built_in">console</span>.log(x);<span class="comment">// xundefined</span></span><br><span class="line">    <span class="keyword">var</span> y = <span class="string">&#x27;y&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">box()</span><br></pre></td></tr></table></figure><p>结果：xundefined</p><p>js执行引擎自动提升了y的声明，但不会提升变量y的赋值。</p><p>建议所有的变量定义都放在函数的头部，便于维护。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> y;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;x&#x27;</span>+y;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">    y = <span class="string">&#x27;y&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>全局函数：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line">x =<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line">box()</span><br></pre></td></tr></table></figure><p>全局对象：<code>window</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">alert(x);</span><br><span class="line">alert(<span class="built_in">window</span>.x);<span class="comment">// 默认所有的全局变量，都会自动绑定window对象。</span></span><br></pre></td></tr></table></figure><p><code>alert()</code>本身也是一个<code>window</code>变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"><span class="built_in">window</span>.alert(x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> old_alert = <span class="built_in">window</span>.alert;</span><br><span class="line"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// alert() 失效</span></span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 恢复</span></span><br><span class="line"><span class="built_in">window</span>.alert = old_alert;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">456</span>);</span><br></pre></td></tr></table></figure><p>js实际只有一个全局作用域，任何变量(函数也可视为变量)，假设没有在函数作用范围内找到，就会向外查找。如果在全局作用域中也没找到，就会报<code>RefrenceError</code></p><blockquote><p>规范：</p></blockquote><p>由于我们所有的全局变量都会绑定到window上，如果不同js文件使用相同的全局变量，可能发生冲突-&gt; 减少冲突的方法；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 唯一全局变量</span></span><br><span class="line"><span class="keyword">var</span> Jokerdig =&#123;&#125;</span><br><span class="line"><span class="comment">// 定义全局变量</span></span><br><span class="line">Jokerdig.name=<span class="string">&#x27;JokerDaxiong&#x27;</span>;</span><br><span class="line">Jokerdig.add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把自己的代码全部放入自己定义的唯一空间中，降低全局命名冲突的问题；</p><blockquote><p>局部作用域 let：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">section</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;<span class="number">100</span> ; i++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i+<span class="number">1</span>)<span class="comment">// i在作用域外还可使用?</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES6 <code>let</code>关键字，解决局部作用域冲突；(推荐使用)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">section</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;<span class="number">100</span> ; i++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i+<span class="number">1</span>)<span class="comment">// Uncaught ReferenceError: i is not defined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>常量const</p></blockquote><p>在ES6之前，定义常量：只要用全部大写字母命名的就是常量；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PI = <span class="string">&#x27;3.14&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line">PI = <span class="string">&#x27;213&#x27;</span>;<span class="comment">// 可以被改变</span></span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br></pre></td></tr></table></figure><p>ES6引入<code>const</code>，来定义常量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI =<span class="string">&#x27;3.14&#x27;</span>;<span class="comment">// 只读变量</span></span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line"><span class="comment">//PI = &#x27;213&#x27;; 直接报错</span></span><br></pre></td></tr></table></figure><h3 id="方法的定义和调用、apply"><a href="#方法的定义和调用、apply" class="headerlink" title="方法的定义和调用、apply"></a>方法的定义和调用、apply</h3><p><strong>定义方法</strong></p><p>方法就是把函数放在对象里；(对象包括：属性和方法)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jokerdig =&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;JokerDaxiong&#x27;</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1999</span>,</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="attr">age</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> now= <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">       <span class="keyword">return</span> now-<span class="built_in">this</span>.birth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 属性</span></span><br><span class="line">jokerdig.name</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">jokerdig.age()</span><br></pre></td></tr></table></figure><p>this代表什么？</p><p>拆分上方代码；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 拆分开</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 计算年龄</span></span><br><span class="line">    <span class="keyword">var</span> now= <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">    <span class="keyword">return</span> now-<span class="built_in">this</span>.birth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jokerdig =&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;JokerDaxiong&#x27;</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1999</span>,</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="attr">age</span>: getAge</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(jokerdig.age())</span><br><span class="line"><span class="comment">// jokeerdig.age() 正常显示</span></span><br><span class="line"><span class="comment">// getAge() NaN</span></span><br></pre></td></tr></table></figure><p>this是无法指向的，它默认指向调用它的那个对象；</p><p><strong>apply</strong></p><p>在JavaScript中控制this指向；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 拆分开</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">// 计算年龄</span></span><br><span class="line">     <span class="keyword">var</span> now= <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">     <span class="keyword">return</span> now-<span class="built_in">this</span>.birth;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> jokerdig =&#123;</span><br><span class="line">     <span class="attr">name</span>: <span class="string">&#x27;JokerDaxiong&#x27;</span>,</span><br><span class="line">     <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">     <span class="attr">birth</span>: <span class="number">1999</span>,</span><br><span class="line">     <span class="comment">// 方法</span></span><br><span class="line">     <span class="attr">age</span>: getAge</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">console</span>.log(jokerdig.age())</span><br><span class="line"> <span class="comment">// jokeerdig.age() 正常显示</span></span><br><span class="line"> <span class="comment">// getAge() NaN</span></span><br><span class="line"> <span class="comment">// 使用apply 使this指向jokerdig,参数为空</span></span><br><span class="line"><span class="built_in">console</span>.log(getAge.apply(jokerdig,[]))</span><br></pre></td></tr></table></figure><h3 id="Date日期对象"><a href="#Date日期对象" class="headerlink" title="Date日期对象"></a>Date日期对象</h3><blockquote><p>标准对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="number">123</span></span><br><span class="line"><span class="string">&quot;number&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">&#x27;123&#x27;</span></span><br><span class="line"><span class="string">&quot;string&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span></span><br><span class="line"><span class="string">&quot;boolean&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span></span><br><span class="line"><span class="string">&quot;number&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> []</span><br><span class="line"><span class="string">&quot;object&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;&#125;</span><br><span class="line"><span class="string">&quot;object&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.abs</span><br><span class="line"><span class="string">&quot;function&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span></span><br><span class="line"><span class="string">&quot;undefined&quot;</span></span><br></pre></td></tr></table></figure><p><strong>Date对象</strong></p><p>Date基本使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Date基本使用</span></span><br><span class="line"> <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"> <span class="built_in">console</span>.log(now)</span><br><span class="line"><span class="comment">// VM79:1 Thu Feb 24 2022 15:05:04 GMT+0800 (中国标准时间)</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getFullYear());<span class="comment">// 年</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getMonth());<span class="comment">// 月份 0-11 代表月</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getDay());<span class="comment">// 星期几</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getDate());<span class="comment">// 星期几</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getHours());<span class="comment">// 时</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getMinutes());<span class="comment">// 分</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getSeconds());<span class="comment">// 秒</span></span><br><span class="line"> <span class="built_in">console</span>.log(now.getTime());<span class="comment">// 时间戳 全球统一 1790 1.1 0:00:00 开始</span></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">1645686594044</span>)); <span class="comment">// 时间戳转为时间</span></span><br><span class="line"> <span class="comment">//调用是方法不是属性 </span></span><br><span class="line"> <span class="built_in">console</span>.log(now.toLocaleString());<span class="comment">// 打印本地时间</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(4)</title>
      <link href="/2022/02/23/javaScript1_4/"/>
      <url>/2022/02/23/javaScript1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=10">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Map和Set集合"><a href="#Map和Set集合" class="headerlink" title="Map和Set集合"></a>Map和Set集合</h3><blockquote><p>ES6的新特性</p></blockquote><p><strong>Map</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&#x27;张三&#x27;</span>,<span class="number">99</span>],[<span class="string">&#x27;李四&#x27;</span>,<span class="number">98</span>],[<span class="string">&#x27;王五&#x27;</span>,<span class="number">112</span>]]);</span><br><span class="line"><span class="keyword">var</span> name = map.get(<span class="string">&#x27;张三&#x27;</span>);<span class="comment">// 通过key获取值</span></span><br><span class="line">map.set(<span class="string">&#x27;admin&#x27;</span>,<span class="number">1233</span>) <span class="comment">// 新增和修改</span></span><br><span class="line">map.delete(<span class="string">&#x27;李四&#x27;</span>) <span class="comment">// 删除</span></span><br><span class="line"><span class="built_in">console</span>.log(name)</span><br></pre></td></tr></table></figure><p><strong>Set</strong></p><p>无序不重复集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Set 可以去重复</span></span><br><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]);</span><br><span class="line">set.add(<span class="number">2</span>);</span><br><span class="line">set.delete(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(set.has(<span class="number">3</span>));</span><br></pre></td></tr></table></figure><h3 id="Iterable迭代"><a href="#Iterable迭代" class="headerlink" title="Iterable迭代"></a>Iterable迭代</h3><blockquote><p>ES6新特性</p></blockquote><p>使用iterator遍历Map，Set</p><p><strong>遍历数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> arr)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>遍历Map</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历map</span></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&#x27;joker&#x27;</span>,<span class="number">100</span>],[<span class="string">&#x27;jack&#x27;</span>,<span class="number">90</span>],[<span class="string">&#x27;boy&#x27;</span>,<span class="number">0</span>]])</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> map)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>遍历Set</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历Set</span></span><br><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>])</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">of</span> set)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的定义和参数获取"><a href="#函数的定义和参数获取" class="headerlink" title="函数的定义和参数获取"></a>函数的定义和参数获取</h3><blockquote><p>定义方式一</p></blockquote><p><strong>定义函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public 返回值类型 方法名()&#123;</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绝对值函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦执行到return代表函数结束，返回结果！</p><p>如果没有执行return，函数执行完也会返回结果，结果就是<code>undefined</code></p><blockquote><p>定义方式二</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function(){…..}这是一个匿名函数，但是可以把结果赋值给abs，通过abs就可以调用函数！</p><blockquote><p>调用函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abs(<span class="number">10</span>) <span class="comment">// 10</span></span><br><span class="line">abs(-<span class="number">10</span>) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>参数问题：js可以传任意个参数，也可以不传递参数。</p><p>假设传递的参数不存在，可手动抛出异常：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span>  x !== <span class="string">&#x27;number&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// 手动抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;Not a Number&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Arguments 对象</p></blockquote><p><code>arguments</code>是一个对应于传递给函数的参数的类数组对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义函数时只有一个参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">argument</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用函数，可传递多个参数，并且调用</span></span><br><span class="line">argument(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>问题：arguments包含所有的参数，当我们想使用多余的参数来进行操作，需要先去除已有参数；</p><blockquote><p>Rest </p></blockquote><p>ES6引入的新特性，获取除了已经定义的参数之外的所有参数。</p><p>旧方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">arguments</span>.length&gt;<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">2</span>;i &lt; <span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">       <span class="comment">// ..... </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新的方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">a,b,...rest</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;a=&gt;&#x27;</span>+a);</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&#x27;b=&gt;&#x27;</span>+b);</span><br><span class="line">     <span class="built_in">console</span>.log(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rest参数只能写在最后，必须用…标识。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(3)</title>
      <link href="/2022/02/22/javaScript1_3/"/>
      <url>/2022/02/22/javaScript1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=7">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="数组类型详解"><a href="#数组类型详解" class="headerlink" title="数组类型详解"></a>数组类型详解</h3><p>Array可以包含任意的数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>] <span class="comment">// 通过下标取值和赋值</span></span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>长度：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.length</span><br></pre></td></tr></table></figure><p>注意：加入给arr.length赋值，数组大小就会发生变化；如果赋值过小，元素就会丢失。</p><p><strong>indexOf：</strong></p><p>通过元素获得下标索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.indexOf(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>字符串”1”和1是不同的</p><p><strong>slice()</strong></p><p>截取Array的一部分，返回一个新的数组；类似String中的substring；</p><p><strong>push() pop()</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push()  <span class="comment">//压入到尾部</span></span><br><span class="line">pop()   <span class="comment">//弹出尾部的一个元素</span></span><br></pre></td></tr></table></figure><p><strong>unshift() shift()</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unshift()  <span class="comment">//压入到头部</span></span><br><span class="line">shift()   <span class="comment">//弹出头部的一个元素</span></span><br></pre></td></tr></table></figure><p><strong>排序 sort()</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;A&#x27;</span>]</span><br><span class="line">arr.sort()</span><br><span class="line">[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>]</span><br></pre></td></tr></table></figure><p><strong>元素反转 reverse()</strong> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>]</span><br><span class="line">arr.reverse()</span><br><span class="line">[<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;A&#x27;</span>]</span><br></pre></td></tr></table></figure><p><strong>concat()</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.concat([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">(<span class="number">11</span>) [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">55</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">arr</span><br><span class="line">(<span class="number">8</span>) [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">55</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>注意：concat()并没有修改数组，只是返回一个新的数组。</p><p><strong>连接符join</strong></p><p>打印拼接数组，使用特定的字符串连接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr</span><br><span class="line">(<span class="number">8</span>) [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">55</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">arr.join(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;1-3-4-55-2-2-4-5&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>多维数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr = [[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">5</span>,<span class="number">3</span>],[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]];</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>数组：存储数据</p><h3 id="对象类型详解"><a href="#对象类型详解" class="headerlink" title="对象类型详解"></a>对象类型详解</h3><blockquote><p>对象是若干个键值对</p><p>JavaScript中所有的键都是字符串，值是任意对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = &#123;</span><br><span class="line">    属性名:属性值,</span><br><span class="line">    属性名:属性值,</span><br><span class="line">    属性名:属性值</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">email</span>: <span class="string">&#x27;jokerdaxiong@qq.com&#x27;</span>,</span><br><span class="line">    <span class="attr">score</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>js种对象，{…}表示一个对象，键值对描述属性xxx:xxx,多个属性之间使用逗号隔开，最有一个不加逗号；</p><p><strong>对象赋值：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.name=<span class="string">&#x27;李四&#x27;</span></span><br><span class="line"><span class="string">&#x27;李四&#x27;</span></span><br><span class="line">person.name</span><br><span class="line"><span class="string">&#x27;李四&#x27;</span></span><br></pre></td></tr></table></figure><p>注意：js调用不存在的对象属性并不会报错，只会提示 <code>undenfined</code>；</p><p><strong>动态的删减属性：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.name</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">person</span><br><span class="line">&#123;<span class="attr">age</span>: <span class="number">3</span>, <span class="attr">email</span>: <span class="string">&#x27;jokerdaxiong@qq.com&#x27;</span>, <span class="attr">score</span>: <span class="number">100</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>动态的添加属性：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.game=<span class="string">&#x27;Celeste&#x27;</span></span><br><span class="line"><span class="string">&#x27;Celeste&#x27;</span></span><br><span class="line">person</span><br><span class="line">&#123;<span class="attr">age</span>: <span class="number">3</span>, <span class="attr">email</span>: <span class="string">&#x27;jokerdaxiong@qq.com&#x27;</span>, <span class="attr">score</span>: <span class="number">100</span>, <span class="attr">game</span>: <span class="string">&#x27;Celeste&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>判断属性值是否在对象中：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;game&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="string">&#x27;toString&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>判断属性值是否为此对象自身拥有的：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.hasOwnProperty(<span class="string">&#x27;toString&#x27;</span>)</span><br><span class="line"><span class="literal">false</span></span><br><span class="line">person.hasOwnProperty(<span class="string">&#x27;game&#x27;</span>)</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="分支和循环详解"><a href="#分支和循环详解" class="headerlink" title="分支和循环详解"></a>分支和循环详解</h3><p><strong>if判断：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(age &gt; <span class="number">3</span>)&#123;</span><br><span class="line">    alert(<span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(age = <span class="number">3</span>)&#123;</span><br><span class="line">    alert(<span class="string">&#x27;相等&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>while循环：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// while循环</span></span><br><span class="line"><span class="keyword">while</span>(age&lt;<span class="number">100</span>)&#123;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age) </span><br><span class="line">&#125; <span class="keyword">while</span>(age&lt;<span class="number">100</span>)  </span><br></pre></td></tr></table></figure><p><strong>for循环：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>forEach输出数组：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> score = [<span class="number">12</span>,<span class="number">44</span>,<span class="number">21</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">41</span>,<span class="number">33</span>];</span><br><span class="line">score.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>for…in循环：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> score = [<span class="number">12</span>,<span class="number">44</span>,<span class="number">21</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">41</span>,<span class="number">33</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num <span class="keyword">in</span> score)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(score[num]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(2)</title>
      <link href="/2022/02/21/javaScript1_2/"/>
      <url>/2022/02/21/javaScript1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=4">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="数据类型快速预览"><a href="#数据类型快速预览" class="headerlink" title="数据类型快速预览"></a>数据类型快速预览</h3><p>数值，文本，图形，音频，视频….</p><p><strong>变量</strong></p><p>不能以数字开头，可以是(字母,$,下划线)开头</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><strong>number</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span>  <span class="comment">//整数</span></span><br><span class="line"><span class="number">123.33</span>  <span class="comment">//浮点数</span></span><br><span class="line"><span class="number">1.232e2</span> <span class="comment">//科学计数法</span></span><br><span class="line">-<span class="number">99</span>  负数</span><br><span class="line"><span class="literal">NaN</span> <span class="comment">// not a number</span></span><br><span class="line">infinity  <span class="comment">//无穷大</span></span><br></pre></td></tr></table></figure><blockquote><p>NaN 与所有的值都不相等，包括自己。</p></blockquote><p><strong>字符串</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;abc&#x27;</span> </span><br><span class="line"><span class="string">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure><p><strong>布尔值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><p><strong>逻辑运算</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp;  <span class="comment">//与(两个为真,结果为真)</span></span><br><span class="line">||  <span class="comment">//或(一个为真,结果为真)</span></span><br><span class="line">!   <span class="comment">//非(取反)</span></span><br></pre></td></tr></table></figure><p><strong>比较运算符</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=   <span class="comment">//赋值</span></span><br><span class="line">==  <span class="comment">//等于</span></span><br><span class="line">=== <span class="comment">//绝对等于(必须类型和值都相同才为true)</span></span><br></pre></td></tr></table></figure><p><strong>浮点数问题</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//因为精度损失 所以并不相等</span></span><br><span class="line"><span class="built_in">console</span>.log((<span class="number">1</span>/<span class="number">3</span>)===(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>尽量避免使用浮点数进行运算。</p><p>解决办法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="number">1</span>/<span class="number">3</span>-(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>))&lt;<span class="number">0.00000001</span>)</span><br></pre></td></tr></table></figure><p>做差绝对值无限接近于0，近似认为二者相等。</p><p><strong>null 和 undefined</strong></p><ul><li>null 空值</li><li>undefined 未定义</li></ul><p><strong>数组</strong></p><p>Java的数值必须是相同类型的对象，JavaScript没有此限制。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组 建议使用第一种定义方式</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="literal">null</span>,<span class="literal">true</span>]</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;hello&#x27;</span>);</span><br></pre></td></tr></table></figure><p>数组下标越界会显示<code>undefined</code></p><p><strong>对象</strong></p><p>对象是大括号，数组是中括号。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">tags</span>: [<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;javascript&#x27;</span>,<span class="string">&#x27;...&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取对象值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.name</span><br><span class="line">&gt;<span class="string">&#x27;张三&#x27;</span></span><br><span class="line">person.age</span><br><span class="line">&gt;3</span><br></pre></td></tr></table></figure><h3 id="严格检查模式strict"><a href="#严格检查模式strict" class="headerlink" title="严格检查模式strict"></a>严格检查模式strict</h3><blockquote><p>使用前提：</p><p>​    需设置支持ES6语法<br>​    严格检查模式 ‘use strict’<br>​    语句必须写在第一行</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   使用前提：需设置支持ES6语法</span></span><br><span class="line"><span class="comment">   严格检查模式 &#x27;use strict&#x27;</span></span><br><span class="line"><span class="comment">   严格检查模式语句必须写在第一行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line"><span class="keyword">var</span> k = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// ES6 局部变量建议都使用let定义</span></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="字符串类型详解"><a href="#字符串类型详解" class="headerlink" title="字符串类型详解"></a>字符串类型详解</h3><ol><li><p>正常字符串我们使用单引号<code>&#39;&#39;</code>或双引号<code>&quot;&quot;</code></p></li><li><p>注意转义字符<code>\</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">&#x27;     //单引号</span></span><br><span class="line"><span class="string">\n     //换行</span></span><br><span class="line"><span class="string">\t     //制表符</span></span><br><span class="line"><span class="string">\u4ed  //unicode字符</span></span><br><span class="line"><span class="string">\x41   //Ascll字符</span></span><br></pre></td></tr></table></figure></li><li><p>多行字符串编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多行字符串</span></span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`</span></span><br><span class="line"><span class="string">hello</span></span><br><span class="line"><span class="string">你好</span></span><br><span class="line"><span class="string">嘿嘿</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure></li><li><p>模板字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模板字符串</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">21</span>;</span><br><span class="line"><span class="keyword">let</span> mess = <span class="string">`你好呀，<span class="subst">$&#123;age&#125;</span>岁的<span class="subst">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure></li><li><p>字符串长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(str.length)</span><br></pre></td></tr></table></figure><blockquote><p>字符串是不可变的</p></blockquote></li><li><p>大小写转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意 这里是方法而非属性</span></span><br><span class="line">str.toUpperCase() <span class="comment">// 大写</span></span><br><span class="line">str.toLowerCase() <span class="comment">// 小写</span></span><br></pre></td></tr></table></figure></li><li><p>一些常用方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str.indexOf(<span class="string">&#x27;s&#x27;</span>) <span class="comment">// 获取下标</span></span><br><span class="line">str.substring(<span class="number">1</span>) <span class="comment">// 从第一个字符串截取到最后一个字符串</span></span><br><span class="line">str.substring(<span class="number">1</span>,<span class="number">3</span>) <span class="comment">// 原理同上，且包含第一个，不包含第三个</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript】JavaScript基础教程(1)</title>
      <link href="/2022/02/19/javaScript1_1/"/>
      <url>/2022/02/19/javaScript1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaScript基础讲解视频：<a href="https://www.bilibili.com/video/BV1JJ41177di?p=1">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="关于JavaScript"><a href="#关于JavaScript" class="headerlink" title="关于JavaScript"></a>关于JavaScript</h3><p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><strong>为什么学习JavaScript：</strong></p><p>JavaScript 是 web 开发人员必须学习的 3 门语言中的一门：</p><ol><li><strong>HTML</strong> 定义了网页的内容</li><li><strong>CSS</strong> 描述了网页的布局</li><li><strong>JavaScript</strong> 控制了网页的行为</li></ol><p><strong>JavaScript 是脚本语言</strong></p><blockquote><p>JavaScript 是一种轻量级的编程语言。</p><p>JavaScript 是可插入 HTML 页面的编程代码。</p><p>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p><p>JavaScript 很容易学习。</p></blockquote><h3 id="基本使用及HelloWrod"><a href="#基本使用及HelloWrod" class="headerlink" title="基本使用及HelloWrod"></a>基本使用及HelloWrod</h3><p><strong>引入javascript</strong></p><p>内部引入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//写js代码</span></span><br><span class="line">  alert(<span class="string">&#x27;HelloWord&#x27;</span>);<span class="comment">//弹窗</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>外部引入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;js/xx.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>小练习：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--外部引入</span></span><br><span class="line"><span class="comment">    必须为：&lt;script&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    不能标签闭合&lt;script/&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/Helloword.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--script标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&#x27;HelloWord&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="浏览器控制台使用"><a href="#浏览器控制台使用" class="headerlink" title="浏览器控制台使用"></a>浏览器控制台使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// JavaScript严格区分大小写</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.定义变量  变量类型 变量名 = 变量值;</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> num1 = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.条件控制</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(num1&lt;<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num1=<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&#x27;no&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 浏览器控制台常用语句</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(score) 控制台打印变量</span></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(12)</title>
      <link href="/2022/02/17/css2_3/"/>
      <url>/2022/02/17/css2_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=23">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p><p>CSS3笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzouw.com/iSIx30042rod">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1h5-xsDJ5H0_qmEWf76YFyQ">下载地址</a> 提取码：na1i</p></blockquote><h3 id="动画拓展"><a href="#动画拓展" class="headerlink" title="动画拓展"></a>动画拓展</h3><p><strong>CSS 动画属性</strong></p><p>下表列出@keyframes 规则和所有 CSS 动画属性：</p><table><thead><tr><th align="left">属性</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_keyframes.asp">@keyframes</a></td><td align="left">规定动画模式。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation.asp">animation</a></td><td align="left">设置所有动画属性的简写属性。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-delay.asp">animation-delay</a></td><td align="left">规定动画开始的延迟。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-direction.asp">animation-direction</a></td><td align="left">定动画是向前播放、向后播放还是交替播放。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-duration.asp">animation-duration</a></td><td align="left">规定动画完成一个周期应花费的时间。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-fill-mode.asp">animation-fill-mode</a></td><td align="left">规定元素在不播放动画时的样式（在开始前、结束后，或两者同时）。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-iteration-count.asp">animation-iteration-count</a></td><td align="left">规定动画应播放的次数。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-name.asp">animation-name</a></td><td align="left">规定 @keyframes 动画的名称。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-play-state.asp">animation-play-state</a></td><td align="left">规定动画是运行还是暂停。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/cssref/pr_animation-timing-function.asp">animation-timing-function</a></td><td align="left">规定动画的速度曲线。</td></tr></tbody></table><p><strong>动画案例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-name</span>: example;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-duration</span>: <span class="number">4s</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-iteration-count</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-direction</span>: alternate-reverse;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> example &#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>   &#123;<span class="attribute">background-color</span>:red; <span class="attribute">left</span>:<span class="number">0px</span>; <span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>  &#123;<span class="attribute">background-color</span>:yellow; <span class="attribute">left</span>:<span class="number">200px</span>; <span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>  &#123;<span class="attribute">background-color</span>:blue; <span class="attribute">left</span>:<span class="number">200px</span>; <span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>  &#123;<span class="attribute">background-color</span>:green; <span class="attribute">left</span>:<span class="number">0px</span>; <span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span> &#123;<span class="attribute">background-color</span>:red; <span class="attribute">left</span>:<span class="number">0px</span>; <span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注释：<span class="tag">&lt;/<span class="name">b</span>&gt;</span>本例在 Internet Explorer 9 以及更早的版本中无效。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="css总结"><a href="#css总结" class="headerlink" title="css总结"></a>css总结</h3><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202151725602.png" alt="css总结"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(11)</title>
      <link href="/2022/02/16/css2_2/"/>
      <url>/2022/02/16/css2_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=21">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="绝对定位和固定定位"><a href="#绝对定位和固定定位" class="headerlink" title="绝对定位和固定定位"></a>绝对定位和固定定位</h3><p><strong>绝对定位</strong></p><p><code>position: absolute;</code> 的元素相对于最近的定位祖先元素进行定位（而不是相对于视口定位，如 fixed）。</p><p>然而，如果绝对定位的元素没有祖先，它将使用文档主体（body），并随页面滚动一起移动。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#father</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#first</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#8EC5FC</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#000000</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;<span class="comment">/*绝对定位基于父级*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#second</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#809783</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#5469ec</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>:  <span class="number">70px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#third</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#6f5858</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#295500</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>:  <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">130px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>第一个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>第二个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;third&quot;</span>&gt;</span>第三个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>固定定位</strong></p><p><code>position: fixed;</code> 的元素是相对于视口定位的，这意味着即使滚动页面，它也始终位于同一位置。 top、right、bottom 和 left 属性用于定位此元素。</p><p>固定定位的元素不会在页面中通常应放置的位置上留出空隙。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*绝对定位相基于父类*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#8EC5FC</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*固定定位相基于窗口*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#809783</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>绝对定位<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>固定定位<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="z-index及透明度"><a href="#z-index及透明度" class="headerlink" title="z-index及透明度"></a>z-index及透明度</h3><p><strong>z-index</strong></p><p>z-index:默认是0，最高无限；</p><p><strong>透明度</strong></p><p>opacity 属性的取值范围为 0.0-1.0。值越低，越透明;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2021/10/01/lxhupX5fdjn8gsG.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Jokerdig&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;jokerdig&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jokerdig.com&quot;</span>&gt;</span>Hey,Joker<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tipbg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>时间：2022/2/15<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#000000</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*父级元素使用相对定位*/</span></span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.jokerdig</span>, <span class="selector-class">.tipbg</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">290px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.jokerdig</span>&#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.jokerdig</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipbg</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#848484</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(10)</title>
      <link href="/2022/02/15/css2_1/"/>
      <url>/2022/02/15/css2_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=19">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="相对定位的使用及练习"><a href="#相对定位的使用及练习" class="headerlink" title="相对定位的使用及练习"></a>相对定位的使用及练习</h3><p>position 属性规定应用于元素的定位方法的类型。</p><p>有五个不同的位置值：</p><ul><li>static 静态</li><li>relative 相对</li><li>fixed 固定</li><li>absolute 绝对</li><li>sticky 根据用户的滚动位置进行定位</li></ul><p>使用 top、bottom、left 和 right 属性定位</p><p><strong>相对定位</strong></p><p><code>position: relative;</code> 的元素相对于其正常位置进行定位。</p><p>设置相对定位的元素的 top、right、bottom 和 left 属性将导致其偏离其正常位置进行调整。不会对其余内容进行调整来适应元素留下的任何空间</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#father</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#first</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#8EC5FC</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#000000</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;<span class="comment">/*相对定位*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: -<span class="number">15px</span>;<span class="comment">/*向上*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">20px</span>;<span class="comment">/*向右*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#second</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#809783</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#5469ec</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;<span class="comment">/*相对定位*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: -<span class="number">15px</span>;<span class="comment">/*向下*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">18px</span>;<span class="comment">/*向左*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#third</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#6f5858</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#295500</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;<span class="comment">/*相对定位*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">25px</span>;<span class="comment">/*向下*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>第一个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>第二个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;third&quot;</span>&gt;</span>第三个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方块定位练习讲解"><a href="#方块定位练习讲解" class="headerlink" title="方块定位练习讲解"></a>方块定位练习讲解</h3><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202151527359.png" alt="image-20220215152707242"></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#faa6ea</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#8EC5FC</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a4</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a5</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: -<span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a1&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a2&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a3&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a4&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a5&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(9)</title>
      <link href="/2022/02/14/css1_9/"/>
      <url>/2022/02/14/css1_9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=17">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="display和浮动"><a href="#display和浮动" class="headerlink" title="display和浮动"></a>display和浮动</h3><p>块级元素：独占一行</p><p>行内元素：不独占一行</p><p><strong>display</strong></p><blockquote><p>block 块元素<br>initial 行内元素<br>initial-block 块元素+行内元素<br>none 无</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="css">        display：</span></span></span><br><span class="line"><span class="comment"><span class="css">            block 块元素</span></span></span><br><span class="line"><span class="comment"><span class="css">            initial 行内元素</span></span></span><br><span class="line"><span class="comment"><span class="css">            initial-block 块元素+行内元素</span></span></span><br><span class="line"><span class="comment"><span class="css">            none 无</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: initial; <span class="comment">/*设置为行元素*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: inline-block; <span class="comment">/*设置为块元素*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div块元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>浮动float</strong></p><p>float 属性用于定位和格式化内容，例如让图像向左浮动到容器中的文本那里。</p><p>float 属性：</p><ul><li>left - 元素浮动到其容器的左侧</li><li>right - 元素浮动在其容器的右侧</li><li>none - 元素不会浮动（将显示在文本中刚出现的位置）。默认值。</li><li>inherit - 元素继承其父级的 float 值</li></ul><p>最简单的用法是，float 属性可实现（报纸上）文字包围图片的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>向右浮动<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像会在段落中向右浮动，而段落中的文本会包围这幅图像。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2021/10/01/lxhupX5fdjn8gsG.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;jokerdig.com&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:200px;height:170px;margin-left:15px;&quot;</span>&gt;</span></span><br><span class="line">    我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段</span><br><span class="line">    落我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段落我是段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="overflow及父级边框塌陷问题"><a href="#overflow及父级边框塌陷问题" class="headerlink" title="overflow及父级边框塌陷问题"></a>overflow及父级边框塌陷问题</h3><p><strong>overflow</strong> </p><blockquote><p>属性指定在元素的内容太大而无法放入指定区域时是剪裁内容还是添加滚动条。</p></blockquote><p>overflow 属性：</p><ul><li>visible - 默认。溢出没有被剪裁。内容在元素框外渲染</li><li>hidden - 溢出被剪裁，其余内容将不可见</li><li>scroll - 溢出被剪裁，同时添加滚动条以查看其余内容</li><li>auto - 与 scroll 类似，但仅在必要时添加滚动条</li></ul><blockquote><p>overflow 属性仅适用于具有指定高度的块元素。</p><p>在 OS X Lion（在 Mac 上）中，滚动条默认情况下是隐藏的，并且仅在使用时显示（即使设置了 “overflow:scroll”）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span>  <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">border</span>: <span class="number">1px</span> dotted black;</span></span><br><span class="line"><span class="css">                <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>CSS 溢出<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>默认情况下，溢出是可见的，这意味着它不会被裁剪，而是在元素框外渲染：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>当您想更好地控制布局时，可以使用 overflow 属性。overflow 属性规定如果内容溢出元素框会发生什么情况。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>父级边框塌陷</strong></p><p>clear</p><blockquote><p>clear:right; 右侧不允许右浮动元素</p><p>clear:left; 左侧不允许右浮动元素</p><p>clear:both; 两侧不允许右浮动元素</p><p>clear:none; </p></blockquote><p>解决办法：</p><ol><li><p>增加父级元素高度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#000</span> solid;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">800px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>增加一个空的div标签，清除浮动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;<span class="attribute">clear</span>&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用overflow来解决，具体使用方法参考上方内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*例如：*/</span></span><br><span class="line"><span class="attribute">overflow</span>:hidden;</span><br></pre></td></tr></table></figure></li><li><p>添加一个伪类，after（推荐使用）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span>:after&#123;</span><br><span class="line">    content:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(8)</title>
      <link href="/2022/02/13/css1_8/"/>
      <url>/2022/02/13/css1_8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=15">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="内外边距及DIV居中"><a href="#内外边距及DIV居中" class="headerlink" title="内外边距及DIV居中"></a>内外边距及DIV居中</h3><p><strong>外边距 margin</strong></p><blockquote><p>margin-left 左</p><p>margin-right 右</p><p>margin-top 上</p><p>margin-bottom 下</p></blockquote><p><strong>内边距 padding</strong></p><blockquote><p>padding-left 左</p><p>padding-right 右</p><p>padding-top 上</p><p>padding-bottom 下</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*去除默认边距及超链接下划线*/</span></span></span><br><span class="line"><span class="css">        *&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*div居中*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*自定义边距 美化页面*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>会员登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>账号：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>邮箱：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="圆角边框及阴影"><a href="#圆角边框及阴影" class="headerlink" title="圆角边框及阴影"></a>圆角边框及阴影</h3><p><strong>圆角边框</strong></p><p>控制4个角</p><blockquote><p>border-radius</p><p>左上 右上 右下 左下</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>盒子阴影</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">50px</span> darkred;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(7)</title>
      <link href="/2022/02/09/css1_7/"/>
      <url>/2022/02/09/css1_7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=13">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="背景图片应用及渐变"><a href="#背景图片应用及渐变" class="headerlink" title="背景图片应用及渐变"></a>背景图片应用及渐变</h3><p><strong>背景图片</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">        <span class="comment">/*图片默认是平铺的*/</span></span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image/images.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div1</span>&#123;</span><br><span class="line">        <span class="comment">/*水平平铺*/</span></span><br><span class="line">        <span class="attribute">background-repeat</span>: repeat-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div2</span>,<span class="selector-class">.div3</span>&#123;</span><br><span class="line">        <span class="comment">/*水平平铺*/</span></span><br><span class="line">        <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>列表样式美化</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="comment">/*颜色 图片 图片位置 平铺方式*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;../image/down.jpg&quot;</span>) <span class="number">230px</span> <span class="number">15px</span> no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*ul li*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">list-style</span></span><br><span class="line"><span class="comment">    none 无</span></span><br><span class="line"><span class="comment">    circle 空心圆</span></span><br><span class="line"><span class="comment">    decimal 数字</span></span><br><span class="line"><span class="comment">    square 正方形</span></span><br><span class="line"><span class="comment">    armenian 默认 实心圆</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;../image/up.jpg&quot;</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">230px</span>,<span class="number">2px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#b8b5b5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e71111</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>颜色渐变</strong></p><blockquote><p><a href="https://www.grabient.com/">Grabient</a></p><p><a href="https://github.com/johnkorzhuk/grabient">GitHub - johnkorzhuk/grabient: UI to generate linear-gradients</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#8EC5FC</span>;</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(<span class="number">62deg</span>, <span class="number">#8EC5FC</span> <span class="number">0%</span>, <span class="number">#E0C3FC</span> <span class="number">100%</span>);</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">-moz-linear-gradient</span>(<span class="number">62deg</span>, <span class="number">#8EC5FC</span> <span class="number">0%</span>, <span class="number">#E0C3FC</span> <span class="number">100%</span>);</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">-o-linear-gradient</span>(<span class="number">62deg</span>, <span class="number">#8EC5FC</span> <span class="number">0%</span>, <span class="number">#E0C3FC</span> <span class="number">100%</span>);</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">62deg</span>, <span class="number">#8EC5FC</span> <span class="number">0%</span>, <span class="number">#E0C3FC</span> <span class="number">100%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202091351044.png" alt="image-20220209135111912"></p><h3 id="盒子模型及边框使用"><a href="#盒子模型及边框使用" class="headerlink" title="盒子模型及边框使用"></a>盒子模型及边框使用</h3><p><strong>什么是盒子模型</strong></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202091358804.png" alt="image-20220209135850745"></p><blockquote><p>margin：外边距</p><p>padding：内边距</p><p>border：边框</p></blockquote><p><strong>边框</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*去除默认边距及超链接下划线*/</span></span></span><br><span class="line"><span class="css">        *&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*border: 粗细 样式 颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">h2</span>,<span class="selector-tag">form</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#D9AFD9</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(<span class="number">344deg</span>, <span class="number">#D9AFD9</span> <span class="number">0%</span>, <span class="number">#97D9E1</span> <span class="number">100%</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">-moz-linear-gradient</span>(<span class="number">344deg</span>, <span class="number">#D9AFD9</span> <span class="number">0%</span>, <span class="number">#97D9E1</span> <span class="number">100%</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">-o-linear-gradient</span>(<span class="number">344deg</span>, <span class="number">#D9AFD9</span> <span class="number">0%</span>, <span class="number">#97D9E1</span> <span class="number">100%</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">344deg</span>, <span class="number">#D9AFD9</span> <span class="number">0%</span>, <span class="number">#97D9E1</span> <span class="number">100%</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*solid 实线*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*dashen 虚线*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>会员登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>账号：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>邮箱：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202091417400.png" alt="image-20220209141743353"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(6)</title>
      <link href="/2022/02/08/css1_6/"/>
      <url>/2022/02/08/css1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=11">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="文本阴影和超链接伪类"><a href="#文本阴影和超链接伪类" class="headerlink" title="文本阴影和超链接伪类"></a>文本阴影和超链接伪类</h3><p><strong>文本阴影</strong></p><blockquote><p>text-shadow /* 阴影颜色 水平偏移 垂直偏移 阴影半径*/</p></blockquote><p><strong>超链接伪类</strong></p><blockquote><p>a:link {color: #FF0000}     /* 未访问的链接 */</p><p>a:visited {color: #00FF00}  /* 已访问的链接 */</p><p>a:hover {color: #FF00FF}    /* 当有鼠标悬停在链接上 */</p><p>a:active {color: #0000FF}   /* 被选择的链接 */</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*默认颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#000000</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*鼠标悬浮颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*鼠标长按颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#2fc9d0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*text-shadow 阴影颜色 水平偏移 垂直偏移 阴影半径*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#shadow</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-shadow</span>: <span class="number">#454141</span> <span class="number">10px</span> <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/images.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://bilibili.com&quot;</span>&gt;</span>Bilibili弹幕网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;shadow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jokerdig.com&quot;</span>&gt;</span>作者：233<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表样式"><a href="#列表样式" class="headerlink" title="列表样式"></a>列表样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*ul li*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">list-style</span></span><br><span class="line"><span class="comment">    none 无</span></span><br><span class="line"><span class="comment">    circle 空心圆</span></span><br><span class="line"><span class="comment">    decimal 数字</span></span><br><span class="line"><span class="comment">    square 正方形</span></span><br><span class="line"><span class="comment">    armenian 默认 实心圆</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#b8b5b5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e71111</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>商品分类<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//jiadian.jd.com&quot;</span>&gt;</span>家用电器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//shouji.jd.com/&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//wt.jd.com&quot;</span>&gt;</span>运营商<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cate_menu_line&quot;</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//shuma.jd.com/&quot;</span>&gt;</span>数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//diannao.jd.com/&quot;</span>&gt;</span>电脑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cate_menu_line&quot;</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//bg.jd.com&quot;</span>&gt;</span>办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//channel.jd.com/home.html&quot;</span>&gt;</span>家居<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cate_menu_line&quot;</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//channel.jd.com/furniture.html&quot;</span>&gt;</span>家具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cate_menu_line&quot;</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//jzjc.jd.com/&quot;</span>&gt;</span>家装<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cate_menu_line&quot;</span>&gt;</span>/<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//channel.jd.com/kitchenware.html&quot;</span>&gt;</span>厨具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(5)</title>
      <link href="/2022/02/07/css1_5/"/>
      <url>/2022/02/07/css1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=9">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="CSS的作用及字体样式"><a href="#CSS的作用及字体样式" class="headerlink" title="CSS的作用及字体样式"></a>CSS的作用及字体样式</h3><p><strong>美化网页元素</strong></p><ul><li>有效传递页面信息</li><li>美化网页，来吸引用户</li><li>凸显页面主题</li><li>提高用户的体验</li></ul><p>span标签：重点要突出的字，使用span嵌套。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#title</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎学习<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>字体样式</strong></p><blockquote><p>font-family 字体样式<br>font-size 字体大小<br>font-weight 字体粗细<br>color 字体颜色</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*字体样式</span></span></span><br><span class="line"><span class="comment"><span class="css">        font-family 字体样式</span></span></span><br><span class="line"><span class="comment"><span class="css">        font-size 字体大小</span></span></span><br><span class="line"><span class="comment"><span class="css">        font-weight 字体粗细</span></span></span><br><span class="line"><span class="comment"><span class="css">        color 字体颜色</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: <span class="string">&quot;Times New Roman&quot;</span>,宋体;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: cadetblue;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#title</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.p1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎学习<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>钓竿<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>a有个老人在河边钓鱼，一个小孩走过去看他钓鱼。老人技巧纯熟，所以没多久就钓上了满篓的鱼，老人见小孩很可爱，要把整篓的鱼送给他，小孩摇摇头，老人惊异的问道：“你为何不要？”<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小孩回答：“我想要你手中的钓竿。”老人问：“你要钓竿做什么？”小孩说：“这篓鱼没多久就吃完了，要是我有钓竿，我就可以自己钓，一辈子也吃不完。”<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我想你一定会说：好聪明的小孩。错了，他如果只要钓竿，那他一条鱼也吃不到。因为，他不懂钓鱼的技巧，光有鱼竿是没用的，因为钓鱼重要的不在钓竿，而在钓技。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I have searched a thousand years,And I have cried a thousand tears. I found everything I need, You are everything to me.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h3><ol><li><p>颜色</p><blockquote><p>颜色：</p><pre><code>RGB 0~FRGBA A的值：0~1</code></pre></blockquote></li><li><p>文本对齐方式</p><blockquote><p>text-align 排版<br>vertical-align 水平对齐方式：需要参照物 a b</p></blockquote></li><li><p>首行缩进</p><blockquote><p>text-indent: 2em  段落首行缩进 1em表示缩进一个字</p></blockquote></li><li><p>行高</p><blockquote><p>height:  高度<br>line-height:  行高<br>行高与高度一致可让文本垂直居中</p></blockquote></li><li><p>装饰</p><blockquote><p>上划线：text-decoration: overline;<br>下划线：text-decoration: underline;</p><p>中划线：text-decoration: line-through;</p><p>去下划线：text-decoration: none;</p></blockquote></li><li><p>文本图片水平对齐</p><blockquote><p>img,span{</p><p>​    vertical-align:middle;</p><p>}</p></blockquote></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*文本样式</span></span></span><br><span class="line"><span class="comment"><span class="css">        颜色：</span></span></span><br><span class="line"><span class="comment"><span class="css">            RGB 0~F</span></span></span><br><span class="line"><span class="comment"><span class="css">            RGBA A的值：0~1</span></span></span><br><span class="line"><span class="comment"><span class="css">        text-align 排版</span></span></span><br><span class="line"><span class="comment"><span class="css">        text-indent: 2em  段落首行缩进 1em表示缩进一个字</span></span></span><br><span class="line"><span class="comment"><span class="css">        height:  高度</span></span></span><br><span class="line"><span class="comment"><span class="css">        line-height:  行高</span></span></span><br><span class="line"><span class="comment"><span class="css">        行高与高度一致可让文本垂直居中</span></span></span><br><span class="line"><span class="comment"><span class="css">        vertical-align 水平对齐方式：需要参照物 a b</span></span></span><br><span class="line"><span class="comment"><span class="css">        上划线：text-decoration: overline;</span></span></span><br><span class="line"><span class="comment"><span class="css">        下划线：text-decoration: underline;</span></span></span><br><span class="line"><span class="comment"><span class="css">        中划线：text-decoration: line-through;</span></span></span><br><span class="line"><span class="comment"><span class="css">        去下划线：text-decoration: none;</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#2fc9d0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.p1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*上划线*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: overline;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.p4</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#c787af</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.p2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*下划线*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.p3</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*中划线*/</span></span></span><br><span class="line"><span class="css">        <span class="attribute">text-decoration</span>: line-through;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>钓竿<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>有个老人在河边钓鱼，一个小孩走过去看他钓鱼。老人技巧纯熟，所以没多久就钓上了满篓的鱼，老人见小孩很可爱，要把整篓的鱼送给他，小孩摇摇头，老人惊异的问道：“你为何不要？”<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>小孩回答：“我想要你手中的钓竿。”老人问：“你要钓竿做什么？”小孩说：“这篓鱼没多久就吃完了，要是我有钓竿，我就可以自己钓，一辈子也吃不完。”<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p3&quot;</span>&gt;</span>我想你一定会说：好聪明的小孩。错了，他如果只要钓竿，那他一条鱼也吃不到。因为，他不懂钓鱼的技巧，光有鱼竿是没用的，因为钓鱼重要的不在钓竿，而在钓技。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p4&quot;</span>&gt;</span>I have searched a thousand years,And I have cried a thousand tears. I found everything I need, You are everything to me.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(4)</title>
      <link href="/2022/02/06/css1_4/"/>
      <url>/2022/02/06/css1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=7">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><p>伪类：用于定义元素的特殊状态。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    结构伪类选择器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*ul的第一个子元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*ul的最后一个子元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: rebeccapurple;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*选中p1 定位到父元素，选择二当前的第一个元素</span></span></span><br><span class="line"><span class="comment"><span class="css">           选择当前p元素的父级元素，选中父级元素的第一个</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: aqua;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*选中父元素下的p元素的第二个，类型*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: darkred;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#000000</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> &gt;</span>被你看到了<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>l1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>l2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>l3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性选择器★"><a href="#属性选择器★" class="headerlink" title="属性选择器★"></a>属性选择器★</h3><p>ID+Class结合</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.demo</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: black;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*选择存在id属性的元素 例如：a[属性名=属性值]&#123;&#125;*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[id=first]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#63b86c</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*选择class里有links的元素 例如：a[class*=links]&#123;&#125; */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[class*=links]</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#69b1ba</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*选中href中以https开头的 例如：a[href^=https]&#123;&#125;*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[href^=https]</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*选中href中以pp结尾的 例如：a[href$=pp]&#123;&#125;*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[href$=pp]</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jokerdig.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;blog links&quot;</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://bing.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;search links&quot;</span>&gt;</span>bing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;search links&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://taobao.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;it links&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jd.com&quot;</span><span class="attr">class</span>=<span class="string">&quot;it links&quot;</span> &gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pp&quot;</span><span class="attr">class</span>=<span class="string">&quot;it links&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pp&quot;</span><span class="attr">class</span>=<span class="string">&quot;it links&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202202061406783.png" alt="image-20220206140644739"></p><p><strong>格式：</strong></p><ul><li><p> 属性名： 属性名=属性值(正则)：</p></li><li><p>=  绝对等于</p></li><li><p>*= 包含这个元素</p></li><li><p>^= 以这个值开头</p></li><li><p>$= 以这个值结尾</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(3)</title>
      <link href="/2022/02/05/css1_3/"/>
      <url>/2022/02/05/css1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=5">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="三种基本选择器"><a href="#三种基本选择器" class="headerlink" title="三种基本选择器"></a>三种基本选择器</h3><blockquote><p>作用：选择页面上的某一类或某一个元素</p></blockquote><p><strong>基本选择器</strong></p><ul><li><p>标签选择器  选择页面上所有同类标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*标签选择器，可以选择页面上所有同类标签*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#b33e3e</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>标签选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>类选择器  格式：.类名{}  选择页面上class相同的标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*类选择器，可以选择页面上class相同的标签 方便归类</span></span></span><br><span class="line"><span class="comment"><span class="css">        格式：.类名&#123;&#125;  */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.h1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#b33e3e</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h1&quot;</span>&gt;</span>这是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;h1&quot;</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>ID选择器  格式：#ID值{}  唯一的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*  ID选择器，可以选择页面上ID值的标签</span></span></span><br><span class="line"><span class="comment"><span class="css">            注意：ID的值是唯一的</span></span></span><br><span class="line"><span class="comment"><span class="css">            格式：#ID值&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.h1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#b33e3e</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#idh</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#63b86c</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h1&quot;</span>&gt;</span>这是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;idh&quot;</span>&gt;</span>这是ID选择器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;h1&quot;</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器不遵循就近原则 而是固定的</p><p>ID选择器&gt;class选择器&gt;标签选择器</p></blockquote></li></ul><h3 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h3><ul><li><p>后代选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*后代选择器*/</span></span><br><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>子选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*子选择器  只有一代*/</span></span><br><span class="line"><span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#63b86c</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>相领兄弟选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*相领兄弟选择器 只有一个 向下*/</span></span><br><span class="line"><span class="selector-class">.active</span> + <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#b33e3e</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通用选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通用兄弟选择器 向下所有*/</span></span><br><span class="line"><span class="selector-class">.active</span>~<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#cba4a4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*后代选择器*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*子选择器 只有一代*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#63b86c</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*相领兄弟选择器 只有一个 向下*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span> + <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#b33e3e</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/*通用兄弟选择器 向下所有*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span>~<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#cba4a4</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>p5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>p6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>p8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p9<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(2)</title>
      <link href="/2022/02/04/css1_2/"/>
      <url>/2022/02/04/css1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=3">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="CSS的快速入门及优势"><a href="#CSS的快速入门及优势" class="headerlink" title="CSS的快速入门及优势"></a>CSS的快速入门及优势</h3><p><strong>书写格式</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    引入外部css--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    规范：&lt;style&gt; 可以编写css代码</span></span><br><span class="line"><span class="comment">    语法：</span></span><br><span class="line"><span class="comment">        选择器&#123;</span></span><br><span class="line"><span class="comment">            申明1</span></span><br><span class="line"><span class="comment">            申明2</span></span><br><span class="line"><span class="comment">            申明3</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是h1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>CSS的优势</strong></p><ol><li>内容和表现分离</li><li>内容结构表现统一，可以实现复用</li><li>样式丰富</li><li>建议使用外部css文件</li><li>利用SEO，容易被搜索引擎收录</li></ol><h3 id="四种CSS导入方式"><a href="#四种CSS导入方式" class="headerlink" title="四种CSS导入方式"></a>四种CSS导入方式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;title&gt;demo01&lt;/title&gt;</span><br><span class="line">&lt;!--    引入外部css--&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style<span class="selector-class">.css</span>&quot;&gt;</span><br><span class="line">&lt;!--   内部样式 --&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="selector-tag">h1</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: green;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;!--优先级：就近原则，越靠近越优先--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--行内样式：在标签元素中，编写一个style属性，编写样式即可--&gt;</span><br><span class="line">&lt;<span class="selector-tag">h1</span> style=&quot;<span class="attribute">color</span>: red<span class="string">&quot;&gt;我是h1标题&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>拓展：外部样式两种写法</p><ul><li><p>链接式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--链接式链接式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入式 (已经被淘汰，先加载 在渲染 展示效果不好)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="keyword">@import</span> url(<span class="string">&quot;css/style.css&quot;</span>);</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSS3】CSS3基础教程(1)</title>
      <link href="/2022/02/02/css1_1/"/>
      <url>/2022/02/02/css1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费CSS3基础讲解视频：<a href="https://www.bilibili.com/video/BV1YJ411a7dy?p=1">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="CSS简单介绍"><a href="#CSS简单介绍" class="headerlink" title="CSS简单介绍"></a>CSS简单介绍</h3><p><strong>学习概述</strong></p><ul><li>CSS是什么</li><li>CSS快速入门</li><li><strong>CSS选择器</strong></li><li>美化网页(文字，阴影，超链接…)</li><li>盒子模型</li><li>浮动</li><li>定位</li><li>网页动画(特效)</li></ul><h3 id="CSS及其发展史"><a href="#CSS及其发展史" class="headerlink" title="CSS及其发展史"></a>CSS及其发展史</h3><p><strong>什么是CSS?</strong></p><ul><li>CSS指的是层叠样式表（Cascading Style Sheets）</li><li>CSS描述了如何在屏幕、纸张或其他媒体上显示HTML元素</li><li>CSS节省了大量工作。它可以同时控制多张网页的布局</li><li>外部样式表存储在CSS文件中</li><li>CSS也称级联样式表。</li></ul><p><strong>CSS发展史</strong></p><ul><li>CSS1.0</li><li>CSS2.0 <strong>DIV(块)+CSS,HTML与CSS结构分离的思想，网页变的简单，SEO(搜索引擎优化)</strong></li><li>CSS2.1 <strong>浮动，定位</strong></li><li>CSS3.0 <strong>圆角，阴影，动画(考虑兼容性)</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【2021年终总结】总结这一年</title>
      <link href="/2022/02/01/2021/"/>
      <url>/2022/02/01/2021/</url>
      
        <content type="html"><![CDATA[<blockquote><p>拖了好久的年终总结，伴随着新的一年开始！</p></blockquote><h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><p>想要搭建博客很久了，但一直没有去付诸实践，以至于我都块要忘却了。直到今年一月份，因为疫情选怎升学而没有马上去找工作，在家准备论文以及升学备考；找论文的时候翻到<a href="https://2heng.xin/">樱花庄的白猫</a>大佬的博客，想到自己学的东西没有一个记录的地方，以至于每次忘掉的内容回头复习因为太杂乱却耗费大量时间去寻找，必须要搭建一个属于自己的博客。</p><p>在网上寻找搭建博客的流程，从B站UP主<a href="https://space.bilibili.com/384068749/?spm_id_from=333.999.0.0">CodeSheep</a>找到静态博客框架的推荐和搭建视频，最后选择了Hexo+Github搭建自己的博客，Hexo大量的插件以及丰富的主题简直不要太爽😉</p><p>实际上手的时候也遇到了各种各样的问题，一步步的摸索，遇到问题就上网查找解决办法，博客搭建并发布成功的那一刻，显示在浏览器页面，成就感爆棚。大概两三天的时间就搞定了第一版博客，主题使用<a href="https://theme-next.js.org/">NexT - Theme for Hexo</a>就此博客也算是搭建完成了，写下博客第一篇内容<a href="https://jokerdig.com/2021/02/21/test/">测试文档</a>。</p><p>后续又将主题换到Sukura，直到国庆前将主题换为现在的<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a>，文章更新到了53篇，大部分都是之前学过的知识笔记，又进行梳理和总结。</p><p>从当初博客的搭建，到主题的更换和美化，每一步都是挖坑填坑的过程。</p><h3 id="疫情"><a href="#疫情" class="headerlink" title="疫情"></a>疫情</h3><p>从2019年11月，新冠肺炎爆发至今两年了，病毒的变异也是层出不穷。是啊，疫情已经两年了😟。好在国内疫情控制非常不错，我们的生活并没有因为疫情受到太影响，即使如此年末西安受到疫情影响，差点在学校过年了🥺，好在最后西安控制主了疫情。但是全球疫情防控并不乐观，截至我写下文章这一刻，全球累计确诊3.8亿，累计死亡人数571万，一场疫情夺走无数生命。但国外某些国家的政府提出解决疫情的办法是群体免疫，群体免疫代价是什么，这些政府是否关心普通人的生命，我不得而知，或许也只有他们自己心里清楚。</p><blockquote><p>就像某国首席医疗官所说：“Omicron”变异病毒如果广泛传播，将会是上天赐予他“最好的圣诞礼物”🙄</p></blockquote><p>一些发展中国家甚至没有医疗条件治理感染的患者，发达国家是否伸出援手？就目前而言，全球疫情得不到治理，新冠疫情也似乎一眼望不到尽头。</p><h3 id="学习像素画"><a href="#学习像素画" class="headerlink" title="学习像素画"></a>学习像素画</h3><p>学习像素画，也许是从小接触红白机的各种游戏，当时由于机能限制，大部分游戏都是像素画风，也让自己对像素风非常有感。每当Steam有不错的像素游戏我都要买来玩，我爱这种一格一格的像素点组成的画面，人物、风景、动画…简单的色彩和绘制就能把自己的想法表达出来。</p><p>自己没有任何绘画基础的学习，画出来的内容看起来并不太美观，从简单开始练习，临摹也是提升画工和审美的一种方式，或许我不是别人口中艺术家，也要当自己心中的艺术家。</p><blockquote><p>一些像素画的练习</p><p><a href="https://jokerdig.com/photos/pixelart">像素作品 | Hey,Joker (jokerdig.com)</a></p></blockquote><p>你也可以在我博客主页右上方的(清单&gt;照片)里找到。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>匆匆写下总结，本来准备在12月31日写下这篇文章，一直拖在现在，对于我来说，升学也是今年最重要的一件事，但我没有写进来。升学更多是让自己还能有时间去自学更多的东西，或者总结过往所学内容并加深理解。今年看的动画并不多，让我最惊艳的便是<a href="https://lol.qq.com/arcane/index.html">英雄联盟：双城之战</a>以及<a href="https://www.bilibili.com/bangumi/play/ss38245/?from=search&seid=4181783830434682388&spm_id_from=333.337.0.0">奇巧出租车</a>，音乐软件换到了AppleMusic，博客功能也基本完善。我想说的也就这些了，感谢你能看到这里。</p><p>最后一首古诗送给自己，也送给每个有拖延症的人，2022一起加油吧！</p><div class='poem'><div class='poem-title'>明日歌</div><div class='poem-author'>[明]钱福</div><p>明日复明日，明日何其多。<br>我生待明日，万事成蹉跎 。<br>世人若被明日累，春去秋来老将至。<br>朝看水东流，暮看日西坠。<br>百年明日能几何？请君听我明日歌。</p></div>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(6)</title>
      <link href="/2021/12/17/html1_6/"/>
      <url>/2021/12/17/html1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=16">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p><p>HTML5笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzouw.com/igxSfxv84xe">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1D4iIaJz2HlrHuJ2dhivYbw">下载地址</a> 提取码：drtu</p></blockquote><h3 id="搜索框滑动和简单验证"><a href="#搜索框滑动和简单验证" class="headerlink" title="搜索框滑动和简单验证"></a>搜索框滑动和简单验证</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>搜索框滑动和简单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    邮件验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mail&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    url验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URL：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数字验证</span></span><br><span class="line"><span class="comment">    max:最大值</span></span><br><span class="line"><span class="comment">    min:最小值</span></span><br><span class="line"><span class="comment">    step:步长</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>数字：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;number&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">step</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--滑块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>滑块</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;voice&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">step</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--搜索框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单应用"><a href="#表单应用" class="headerlink" title="表单应用"></a>表单应用</h3><ul><li>隐藏域 <code>hidden</code></li><li>只读 <code>readonly</code></li><li>禁用 <code>disabled</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    增强鼠标可用性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>账号：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h3><ul><li><p>为什么要进行表单验证？</p><ul><li>减轻数据库压力，减少错误数据反复提交</li><li>增加网页安全性</li></ul></li><li><p>常用方式</p><ul><li>placeholder 输入框提示</li><li>required 非空验证</li><li>pattern 正则表达式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单简单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        placeholder 提示信息</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- required  非空验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--正则表达式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;diymail&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="HTML总结"><a href="#HTML总结" class="headerlink" title="HTML总结"></a>HTML总结</h3><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202112221532735.png" alt="HTML总结"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(5)</title>
      <link href="/2021/12/16/html1_5/"/>
      <url>/2021/12/16/html1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=13">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="文本框和单项框"><a href="#文本框和单项框" class="headerlink" title="文本框和单项框"></a>文本框和单项框</h3><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">type</td><td align="center">指定元素的类型。text、password、checkbox、radio、submit、reset、file、hidden、image和button，默认为text</td></tr><tr><td align="center">name</td><td align="center">指定表单元素的名称</td></tr><tr><td align="center">value</td><td align="center">元素的初始值。type为radio时必须指定一个值</td></tr><tr><td align="center">size</td><td align="center">指定表单元素的初始宽度。当type为text或password时，表单元素的大小以字符为单位。对于其他类型，宽度以像素为单位</td></tr><tr><td align="center">maxlength</td><td align="center">type为text或password时，输入的最大字符数</td></tr><tr><td align="center">checked</td><td align="center">type为radio或checkbox时，指定按钮是否被选中</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文本框和单选框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文本输入框</span></span><br><span class="line"><span class="comment">    type=&quot;text&quot;</span></span><br><span class="line"><span class="comment">    value 默认初始值</span></span><br><span class="line"><span class="comment">    maxlength 输入最大长度</span></span><br><span class="line"><span class="comment">    size 文本框长度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Joker大雄&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;9&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--密码框 type=&quot;password&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>密码框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">    input type=&quot;radio&quot;</span></span><br><span class="line"><span class="comment">    value 单选框值</span></span><br><span class="line"><span class="comment">    name 相同的name值表示在同一个组里</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>单选框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>选项一</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>选项二</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="按钮和多选框"><a href="#按钮和多选框" class="headerlink" title="按钮和多选框"></a>按钮和多选框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>按钮和多选框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文本输入框</span></span><br><span class="line"><span class="comment">    type=&quot;text&quot;</span></span><br><span class="line"><span class="comment">    value 默认初始值</span></span><br><span class="line"><span class="comment">    maxlength 输入最大长度</span></span><br><span class="line"><span class="comment">    size 文本框长度</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Joker大雄&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;9&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--密码框 type=&quot;password&quot;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">    input type=&quot;radio&quot;</span></span><br><span class="line"><span class="comment">    value 单选框值</span></span><br><span class="line"><span class="comment">    name 相同的name值表示在同一个组里</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>单选框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>选项一<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>选项二</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--多选框</span></span><br><span class="line"><span class="comment">    type=&quot;checkbox&quot;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>多选框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox1&quot;</span>&gt;</span>多选框1</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox2&quot;</span>&gt;</span>多选框2</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox3&quot;</span>&gt;</span>多选框3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按钮</span></span><br><span class="line"><span class="comment">    type=&quot;button&quot; 普通按钮</span></span><br><span class="line"><span class="comment">    type=&quot;image&quot;  图片按钮(也可以提交)</span></span><br><span class="line"><span class="comment">    type=&quot;submit&quot; 提交按钮</span></span><br><span class="line"><span class="comment">    type=&quot;reset&quot;  重置按钮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>按钮：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表框文本域和文件域"><a href="#列表框文本域和文件域" class="headerlink" title="列表框文本域和文件域"></a>列表框文本域和文件域</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表框文本域和文件域<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文本输入框</span></span><br><span class="line"><span class="comment">    type=&quot;text&quot;</span></span><br><span class="line"><span class="comment">    value 默认初始值</span></span><br><span class="line"><span class="comment">    maxlength 输入最大长度</span></span><br><span class="line"><span class="comment">    size 文本框长度</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Joker大雄&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;9&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--密码框 type=&quot;password&quot;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">    input type=&quot;radio&quot;</span></span><br><span class="line"><span class="comment">    value 单选框值</span></span><br><span class="line"><span class="comment">    name 相同的name值表示在同一个组里</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>单选框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>选项一<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;radio2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>选项二</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--多选框</span></span><br><span class="line"><span class="comment">    type=&quot;checkbox&quot;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>多选框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox1&quot;</span>&gt;</span>多选框1</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox2&quot;</span>&gt;</span>多选框2</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;checkbox3&quot;</span>&gt;</span>多选框3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按钮</span></span><br><span class="line"><span class="comment">    type=&quot;button&quot; 普通按钮</span></span><br><span class="line"><span class="comment">    type=&quot;image&quot;  图片按钮(也可以提交)</span></span><br><span class="line"><span class="comment">    type=&quot;submit&quot; 提交按钮</span></span><br><span class="line"><span class="comment">    type=&quot;reset&quot;  重置按钮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>按钮：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    下拉框，列表框</span></span><br><span class="line"><span class="comment">    &lt;select&gt;</span></span><br><span class="line"><span class="comment">        &lt;option&gt;下拉框1&lt;/option&gt;</span></span><br><span class="line"><span class="comment">        &lt;option&gt;下拉框2&lt;/option&gt;</span></span><br><span class="line"><span class="comment">    &lt;/select&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框：</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;select&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>请选择...<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>下拉框1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>下拉框2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>下拉框3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文本域</span></span><br><span class="line"><span class="comment">        cols=&quot;&quot; 跨列</span></span><br><span class="line"><span class="comment">        rows=&quot;&quot; 跨行</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本域：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">name</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文件域</span></span><br><span class="line"><span class="comment">        type=&quot;file&quot;</span></span><br><span class="line"><span class="comment">        name 传值名称</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;upload&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(4)</title>
      <link href="/2021/12/15/html1_4/"/>
      <url>/2021/12/15/html1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=10">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h3><table><thead><tr><th align="center">元素名</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">header</td><td align="center">标题头部区域的内容(用于页面或页面中的一块区域)</td></tr><tr><td align="center">footer</td><td align="center">标记脚部区域的内容(用于整个页面或页面的一块区域)</td></tr><tr><td align="center">section</td><td align="center">Web页面中的一块独立区域</td></tr><tr><td align="center">article</td><td align="center">独立的文章内容</td></tr><tr><td align="center">aside</td><td align="center">相关内容或应用(常用于侧边栏)</td></tr><tr><td align="center">nav</td><td align="center">导航类辅助内容</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面结构分析<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页主体<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页脚部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h3><p><code>&lt;iframe sr=&quot;path&quot; name=&quot;mainFrame&quot;&gt;&lt;/iframe&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>iframe内联框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--iframe 内联框架</span></span><br><span class="line"><span class="comment">    src：地址</span></span><br><span class="line"><span class="comment">    width： 宽度</span></span><br><span class="line"><span class="comment">    height：高度</span></span><br><span class="line"><span class="comment">    name：框架标识名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jokerdig.com&quot;</span> <span class="attr">name</span>=<span class="string">&quot;one&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;html1.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;one&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=795783034&amp;bvid=BV1HC4y1p7qH&amp;cid=194434491&amp;page=1&quot;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/iframe&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="初始表单提交"><a href="#初始表单提交" class="headerlink" title="初始表单提交"></a>初始表单提交</h3><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202112151411732.png" alt="image-20211215141115623"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单提交<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">    action：表单提交的位置，可以是网站，也可以是处理地址</span></span><br><span class="line"><span class="comment">    method: 提交方式 get/post</span></span><br><span class="line"><span class="comment">        get提交可以在地址栏显示提交的内容 不安全 高效</span></span><br><span class="line"><span class="comment">        post提交地址栏不显示提交的内容 安全 传输大文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    账号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    密码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取消&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(3)</title>
      <link href="/2021/12/14/html1_3/"/>
      <url>/2021/12/14/html1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=7">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><ul><li><p>什么时列表</p><ul><li>列表就是信息资源的一中展示形式。它可以使信息结构化和条理化，并以列表的样式显示出来，一边浏览者能更快捷地获得相应的信息。</li></ul></li><li><p>列表的分类</p><ul><li>无序列表</li><li>有序列表</li><li>定义列表</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有序列表</span></span><br><span class="line"><span class="comment">    应用范围：试卷，问答等</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表</span></span><br><span class="line"><span class="comment">    应用范围：导航，侧边栏等</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义列表</span></span><br><span class="line"><span class="comment">dl: 标签</span></span><br><span class="line"><span class="comment">dt: 列表名称</span></span><br><span class="line"><span class="comment">dd: 列表内容</span></span><br><span class="line"><span class="comment">应用范围：网站底部</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>自定义列表<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><ul><li><p>为什么使用表格</p><ul><li>简单通用</li><li>结构稳定</li></ul></li><li><p>基本结构</p><ul><li>单元格</li><li>行</li><li>列</li><li>跨行</li><li>跨列</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表格 table</span></span><br><span class="line"><span class="comment">    行： tr</span></span><br><span class="line"><span class="comment">    列： td</span></span><br><span class="line"><span class="comment">    跨行：rowspan</span></span><br><span class="line"><span class="comment">    跨列：colspan</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>小王<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="媒体元素"><a href="#媒体元素" class="headerlink" title="媒体元素"></a>媒体元素</h3><ul><li><p>视频元素</p><ul><li>video</li></ul></li><li><p>音频元素</p><ul><li>audio</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>媒体元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--视频</span></span><br><span class="line"><span class="comment">    src 资源</span></span><br><span class="line"><span class="comment">    controls 控制</span></span><br><span class="line"><span class="comment">    autoplay 自动播放</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;../resource/video1.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">width</span>=<span class="string">&quot;350px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--音频</span></span><br><span class="line"><span class="comment">    src 资源</span></span><br><span class="line"><span class="comment">    controls 控制</span></span><br><span class="line"><span class="comment">    autoplay 自动播放</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;../resource/music1.flac&quot;</span> <span class="attr">autoplay</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(2)</title>
      <link href="/2021/12/12/html1_2/"/>
      <url>/2021/12/12/html1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=4">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><ul><li><p>常见的图像格式(JPG,GIF,PNG,BMP)</p><p><code>&lt;img src=&quot;path&quot; alt=&quot;text&quot; title=&quot;text&quot; width=&quot;x&quot; height&quot;y&quot;/&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图像标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;html3&quot;</span>&gt;</span>页面四的锚链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--src: 图片地址</span></span><br><span class="line"><span class="comment">     相对地址(推荐使用)</span></span><br><span class="line"><span class="comment">     绝对地址</span></span><br><span class="line"><span class="comment">     ../ 表示上一级目录</span></span><br><span class="line"><span class="comment">     alt： 图片未加载时显示</span></span><br><span class="line"><span class="comment">     title： 鼠标悬浮在图片上显示</span></span><br><span class="line"><span class="comment">     width 宽度  height 高度</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="超链接标签及应用"><a href="#超链接标签及应用" class="headerlink" title="超链接标签及应用"></a>超链接标签及应用</h3><p><strong>链接标签</strong></p><p>  <code>&lt;a href=&quot;path&quot; target=&quot;目标窗口位置&quot;&gt;链接文本或图像&lt;/a&gt;</code></p><ul><li><p>文本超链接</p></li><li><p>图像超链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>超链接标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用name标记--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;top&quot;</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- a标签</span></span><br><span class="line"><span class="comment"> href: 必填，表示要跳转到哪个页面</span></span><br><span class="line"><span class="comment"> target：表示窗口在哪里打开</span></span><br><span class="line"><span class="comment">    _blank 在新标签中打开</span></span><br><span class="line"><span class="comment">    _self 默认打开方式</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;html1.html&quot;</span>&gt;</span>点击跳转第一个网页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--网页跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jokerdig.com&quot;</span>&gt;</span>Hey,Joker<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--图片超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;html3.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/img1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;蔚蓝截图&quot;</span> <span class="attr">title</span>=<span class="string">&quot;蔚蓝山脉&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  锚链接</span></span><br><span class="line"><span class="comment">  1.需要一个毛标记</span></span><br><span class="line"><span class="comment">  2.跳转到标记</span></span><br><span class="line"><span class="comment">  3.使用#跳转</span></span><br><span class="line"><span class="comment">  锚链接也可以在不同页面之间跳转</span></span><br><span class="line"><span class="comment">  例子：锚链接可以定位博客文章的具体位置</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;html3.html#html3&quot;</span>&gt;</span>使用锚链接跳转不同页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    功能性链接：</span></span><br><span class="line"><span class="comment">    邮件链接：href=&quot;mailto:xxxxx@gmail.com&quot;</span></span><br><span class="line"><span class="comment">    QQ链接：搜索QQ推广</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:jokerdaxiong@qq.com&quot;</span>&gt;</span>QQ邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="块元素和行内元素"><a href="#块元素和行内元素" class="headerlink" title="块元素和行内元素"></a>块元素和行内元素</h3><ul><li><p>块元素</p><ul><li>无论内容多少，该元素独占一行</li><li>(p、h1-h6)</li></ul></li><li><p>行内元素</p><ul><li>内容撑开宽度，左右都是行内元素的可以排在一行</li><li>(a,strong,em…)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>行元素块元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>块元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>块元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HTML5】HTML5基础教程(1)</title>
      <link href="/2021/12/11/html1_1/"/>
      <url>/2021/12/11/html1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费HTML5基础讲解视频：<a href="https://www.bilibili.com/video/BV1x4411V75C?p=1">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="初始HTML"><a href="#初始HTML" class="headerlink" title="初始HTML"></a>初始HTML</h3><p><strong>什么是HTML</strong></p><ul><li><p>HTML</p><ul><li>Hyper Text Markup Language(<a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC/2832422">超文本</a>标记语言)</li></ul><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202112111625357.png" alt="image-20211211162527214"></p></li></ul><p><strong>HTML5的优势</strong></p><ul><li>世界知名浏览器厂商对Html5的支持(谷歌，微软，苹果等)</li><li>市场的需求</li><li>跨平台</li></ul><p><strong>W3C标准</strong></p><ul><li>W3C<ul><li>World Wide Web Consortium(万维网联盟)</li><li>成立于1994年，Web技术领域最权威和具影响力的国际中立性技术标准机构</li><li><a href="https://www.w3.org/">World Wide Web Consortium (W3C)</a></li><li><a href="https://www.chinaw3c.org/">W3C中国 (chinaw3c.org)</a></li></ul></li><li>W3C标准<ul><li>结构化标准语言(HTML、XML)</li><li>表现标准语言(CSS)</li><li>行为标准(DOM、ECMAScript)</li></ul></li></ul><p><strong>常见IDE</strong></p><ul><li>记事本</li><li>Dreamweaver</li><li>IDEA</li><li>WebStorm</li><li><strong>Visual Studio Code</strong></li></ul><p><strong>HTML基本结构</strong></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202112111652084.png" alt="image-20211211165221005"></p><h3 id="网页基本信息"><a href="#网页基本信息" class="headerlink" title="网页基本信息"></a>网页基本信息</h3>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- DOCTYPE:告诉浏览器所使用的规范--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- head标签代表头部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    meta标签描述网站的信息,一般来做SEO--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keyboard&quot;</span> <span class="attr">content</span>=<span class="string">&quot;我的第一个网页&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这是我学习html的第一个网页哦&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    title标签代表网页标题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--body标签代表网页主体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello World</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="网页基本标签"><a href="#网页基本标签" class="headerlink" title="网页基本标签"></a>网页基本标签</h3><ul><li>标题标签</li><li>段落标签</li><li>换行标签</li><li>水平线标签</li><li>字体样式标签</li><li>注释和特殊符号</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>咏鹅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>鹅，鹅，鹅， 曲项向天歌。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>白毛浮绿水，红掌拨清波。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--换行标签--&gt;</span></span><br><span class="line">咏鹅<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">鹅，鹅，鹅， 曲项向天歌。<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">白毛浮绿水，红掌拨清波。<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--水平线标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--字体样式标签--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--粗体 斜体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>字体样式<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>粗体:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">strong</span>&gt;</span>i love you<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>斜体:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">em</span>&gt;</span>i love you<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--注释和特殊符号--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注释和特殊符号<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">空      格<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">空<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>格<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>大于号：<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小于号：<span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>版权符号：<span class="symbol">&amp;copy;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  特殊符号记忆：</span></span><br><span class="line"><span class="comment">  &amp;开头</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【日常】一段有趣的话(二)</title>
      <link href="/2021/10/29/life2/"/>
      <url>/2021/10/29/life2/</url>
      
        <content type="html"><![CDATA[<p>不要在相爱时找不爱的细节，也别在分开时回忆相爱的点滴，两个人好的时候,就好比一起乘坐一辆火车,奔着同一个目的地，沿途一起看风景，分手时就好比中途他要下车，因为我们要去的，很可能不是一个地方了，我拦着你说不许走，或说我也在这儿下,可是你忘了你原本要去的地方吗。放行是美德，不管是谁放了谁。</p><p>一直以来人们对于分手有个误区，好像分手这种事情，往往被分手的那一方，容易被人注意到他们要更加难过，我更愿意相信，分手后两边都在承受痛苦，说过的话，拍过的照，什么天涯，什么海角，所有的甜蜜凭证化为枪口。一起吃过的小店，走过的天桥，所有的稀疏平常在分手以后却变得分外耀眼。</p><p>彼此对彼此接下来的生活都不要妄加干涉、评论、猜忌，我觉得这是对分手后俩人的曾经一种保护，断联是最好的办法，最美的那些时刻，星辰，日落，我就记住了。</p><p>从现在开始，你要每天认真洗脸，好好护肤，按时睡觉 不要在深夜发那些矫情的话，第二天早上起来的时候再删掉，更不要再去联系那个早就已经走散在你生活里的人了</p><p>你还要多读书，多认识一些可爱的人，不要把自己的圈子局限在某个人身上。除此之外，你还要努力变得温柔和大度，无论别人如何变化，你都要不忘初心，保持善意。</p><p>同时，我还希望你要明白，真正的成熟应该是不再逢人就诉说自己的遭遇，是逐渐学会一个 人面对生活里的苦， 自己说服自己，想通曾经所有想不通的事情。</p><p>所以，你看，这样的你，就算现在单身也无所谓啊，因为你这么努力的去做好自己那你当然也会遇到那个跟你一样热爱生活、频率相同的人。</p><p>等到某一天他出现的时候，你就会恍然大悟，你付出的所有等待都是有意义的，不是吗？</p><p>答应我，一定要快乐哦，就像你不曾认识她的时候那样！   </p><blockquote><p>内容转载于小黑盒评论区，如果你是内容原创请在评论区留言或致电首页邮箱。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【今日摸鱼】你的名字。</title>
      <link href="/2021/10/16/video2/"/>
      <url>/2021/10/16/video2/</url>
      
        <content type="html"><![CDATA[<p>  最近一直在摸鱼，假装更新博客/(ㄒoㄒ)/~~，欢迎大家关注我的主页，偶尔发发像素画练习视频！</p><div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=795783034&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 你的名字。 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(6)</title>
      <link href="/2021/09/22/assembly1_6/"/>
      <url>/2021/09/22/assembly1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=11">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="汇编学习环境及必要说明"><a href="#汇编学习环境及必要说明" class="headerlink" title="汇编学习环境及必要说明"></a>汇编学习环境及必要说明</h3><p>机器语言就是位运算。都是电路来实现的。者就是计算机的最底层的本质。</p><p>通过机器语言来实现加法计算器，设计电路。</p><p><strong>汇编语言环境：</strong></p><p>通过指令来代替我们的二进制编码！</p><p>通过汇编指令可以给计算机发一些操作，然后让计算机执行，编译器的发展，底层更古老。</p><p>掌握环境的配置。</p><blockquote><p>vc6 od 抓包工具 加密解密工具与</p></blockquote><p><strong>学汇编不是为了写代码</strong></p><p>理解程序的本质，懂汇编。</p><p>《汇编语言》 16位的汇编 -&gt;32位 -&gt; 64位(本质架构区别不大，寻址能力增加)</p><p> 入门：了解汇编和程序的对应关系，程序的本质即可！</p><p><a href="https://imgtu.com/i/4Nwi1U"><img src="https://z3.ax1x.com/2021/09/22/4Nwi1U.png" alt="4Nwi1U.png"></a></p><h3 id="寄存器理解"><a href="#寄存器理解" class="headerlink" title="寄存器理解"></a>寄存器理解</h3><p>寄存器：</p><p>存储数据：CPU&gt;内存&gt;硬盘</p><p>32位CPU 8 16 32</p><p>64位CPU 8 16 32 64</p><p><strong>通用寄存器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 32位的通用寄存器只有8个值</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4NwGBd"><img src="https://z3.ax1x.com/2021/09/22/4NwGBd.png" alt="4NwGBd.png"></a></p><p>存志的范围0-FFFFFFFF</p><p>对于二进制来说，直接修改值</p><p><strong>计算机如何向寄存器存值</strong></p><p><strong>mov指令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov 存的地址,存的值</span><br><span class="line">mov 存的地址1,存的地址1</span><br></pre></td></tr></table></figure><p>可以将数字写入到寄存器，可以将寄存器中的值写到寄存器。(计算机=计算力)</p><p><strong>不同的寄存器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> FFFF  FF  0000 0000</span><br><span class="line">2位  16位  8位</span><br><span class="line">EAX   AX   AL</span><br><span class="line">ECX   CX   CL</span><br><span class="line">EDX   DX   DL</span><br><span class="line">EBX   BX   BL</span><br><span class="line">ESP   SP   AH</span><br><span class="line">EBP   BP   CH</span><br><span class="line">ESI   SI   DH</span><br><span class="line">EDI   DI   BH</span><br></pre></td></tr></table></figure><p>8位：L低8位，H高8位</p><p><a href="https://imgtu.com/i/4N0Hsg"><img src="https://z3.ax1x.com/2021/09/22/4N0Hsg.png" alt="4N0Hsg.png"></a></p><p>除了这些通用寄存器之外，那么其他的寄存器每一位都有自己特定的功能。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(7)</title>
      <link href="/2021/09/22/assembly1_7/"/>
      <url>/2021/09/22/assembly1_7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=13">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="内存的理解"><a href="#内存的理解" class="headerlink" title="内存的理解"></a>内存的理解</h3><p>寄存器小，不够用，所以数据放到内存中！(内存条)</p><p>每个应用程序都有4G的内存空间，空头支票。</p><p><a href="https://imgtu.com/i/4NDw36"><img src="https://z3.ax1x.com/2021/09/22/4NDw36.png" alt="4NDw36.png"></a></p><p>程序真正运行的时候，才会用到物理内存。</p><p>1b=8bit</p><p>1Kb=1024b</p><p>1Mb=1024Kb</p><p>1Gb=1024Mb</p><p>4G的内存，4096-&gt;最终计算为位，就是可以存储的最大容量。</p><p>计算机中内存地址很多，空间很大。</p><p><strong>内存地址</strong></p><p>存一个数：占用的大小，数据宽度！存到哪里？</p><p>计算机内存地址很多，空间很大，每个空间分配一个地址，名字。(32位 8个 16进制的值)</p><p>32位：寻址能力！4GB</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFFFFFFF+1 =100000000</span><br></pre></td></tr></table></figure><p>位是如何限制内存大小的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">100000000 内存地址*8 =位：800000000</span><br><span class="line">转位10进制/8: 4,967,296</span><br><span class="line">按规则/1024，最后就是4GB</span><br></pre></td></tr></table></figure><p>64位：</p><p>每个内存地址都有一个编号，可以通过编号来存值。</p><p><a href="https://imgtu.com/i/4NrszV"><img src="https://z3.ax1x.com/2021/09/22/4NrszV.png" alt="4NrszV.png"></a></p><p>内存如何存值？</p><ul><li><p>数据宽度：byte word dword</p></li><li><p>地址的位置 0xFFFFFFF</p></li><li><p>不是任意的地址都可以写值的，申请使用，程序申请过的内存地址才能使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">汇编如何向内存写值</span></span><br><span class="line">mov  数据宽度 内存地址 值</span><br><span class="line">mov (byte/word/dword/qword)</span><br><span class="line"><span class="meta">#</span><span class="bash">写法举例：</span></span><br><span class="line">mov byte ptr ds:[0x19FF90],1</span><br><span class="line"><span class="meta">#</span><span class="bash">注意传值大小，一定要与数据宽度相等</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4Ns1w4"><img src="https://z3.ax1x.com/2021/09/22/4Ns1w4.png" alt="4Ns1w4.png"></a></p></li></ul><p><strong>内存地址有多种写法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 内存地址偏移</span></span><br><span class="line">ds:[0x19FF70+4]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 寄存器</span></span><br><span class="line">ds:[eax]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 寄存器偏移</span></span><br><span class="line">ds:[eax+4]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数组[]</span></span><br><span class="line">ds:[reg+reg*&#123;1,2,4,8&#125;]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 偏移</span></span><br><span class="line">ds:[reg+reg*&#123;1,2,4,8&#125;+4]</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p><strong>努力的你一定绽放光芒！</strong></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(5)</title>
      <link href="/2021/09/20/assembly1_5/"/>
      <url>/2021/09/20/assembly1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=9">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="位运算理解"><a href="#位运算理解" class="headerlink" title="位运算理解"></a>位运算理解</h3><p>寄存器：mov寄存器 存值</p><p><a href="https://imgtu.com/i/4831XD"><img src="https://z3.ax1x.com/2021/09/19/4831XD.png" alt="4831XD.png"></a></p><p><strong>位运算：</strong></p><p>计算机现在可以存储所有数字(正数，浮点，字符)的运算。</p><p>0 1</p><p>位运算：</p><p>2*8最高高效计算方式。(位运算最高效)</p><p>很多底层的调试器，需要通过位来判断CPU的状态。</p><p><strong>与运算(and &amp;)</strong></p><p><a href="https://imgtu.com/i/488CEd"><img src="https://z3.ax1x.com/2021/09/19/488CEd.png" alt="488CEd.png"></a></p><p>全true为true，一false为false。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">-------------- 与运算</span><br><span class="line">1001 0000 </span><br></pre></td></tr></table></figure><p><strong>或运算(or |)</strong></p><p><a href="https://imgtu.com/i/488Oaj"><img src="https://z3.ax1x.com/2021/09/19/488Oaj.png" alt="488Oaj.png"></a></p><p>true|false为true，false|false为false。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">-----------或运算</span><br><span class="line">1111 1001</span><br></pre></td></tr></table></figure><p><strong>异或运算(xor ^)</strong></p><p><a href="https://imgtu.com/i/48Gay8"><img src="https://z3.ax1x.com/2021/09/19/48Gay8.png" alt="48Gay8.png"></a></p><p>不一样就是1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">-----------异或运算</span><br><span class="line">0110 1001</span><br></pre></td></tr></table></figure><p><strong>非运算(单目运算符 not ~ !)</strong></p><p>0就是1，1就是0，取反</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1101 1000</span><br><span class="line">-----------</span><br><span class="line">0010 0111</span><br></pre></td></tr></table></figure><p>通过这些可以完成加减乘除！位运算来实现加减乘除！</p><p>位运算(移动位)</p><ul><li><p>左移:(shl&lt;&lt;)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0000 0001 @ 所有二进制位全部左移若干位，高位就丢弃了，低位补0</span><br><span class="line">0000 0010</span><br></pre></td></tr></table></figure></li><li><p>右移:(shr&gt;&gt;)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0000 0001  @ 所有二进制位全部右移若干位，低位就丢弃了，高位就需要补0,1(符号位决定)</span><br><span class="line">0000 0000</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0000 0001  1</span><br><span class="line"></span><br><span class="line">0000 0010  2</span><br><span class="line"></span><br><span class="line">0000 0100  4</span><br><span class="line"></span><br><span class="line">0000 1000  8</span><br></pre></td></tr></table></figure><h3 id="位运算真实加减乘除"><a href="#位运算真实加减乘除" class="headerlink" title="位运算真实加减乘除"></a>位运算真实加减乘除</h3><p>计算机只认识 0 1</p><p>基本数学是建立在 加减乘除。(加法)</p><p><strong>4+5</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">计算机是怎么操作的</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">----------- (加法，计算机不会直接加)</span><br><span class="line"><span class="meta">#</span><span class="bash">了解计算机的实现原理</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">第一步，异或，如果不考虑进位，异或就可以直接出结果。</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">------------</span><br><span class="line">0000 0001</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">第二步，与运算(判断进位，如果与运算结果位0，那就没有进位。)</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">------------</span><br><span class="line">0000 0100</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">第三步，将与运算的结果座左移一位。</span> </span><br><span class="line">0000 0100 -&gt; 0000 1000</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">第四步，异或</span></span><br><span class="line">0000 0001</span><br><span class="line">0000 1000</span><br><span class="line">------------</span><br><span class="line">0000 1001</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">第五步，与运算(判断进位,如果与运算运算结果位0，没有进位。)</span></span><br><span class="line">0000 0001</span><br><span class="line">0000 1000</span><br><span class="line">------------</span><br><span class="line">0000 0000</span><br><span class="line"><span class="meta">#</span><span class="bash">所以最终结果就是与运算为0的结果的上一个异或运算。</span></span><br><span class="line">4+5=9</span><br></pre></td></tr></table></figure><p><strong>4-5</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">计算机是怎么操作的</span></span><br><span class="line">4+(-5)</span><br><span class="line">0000 0100</span><br><span class="line">1111 1011</span><br><span class="line">----------- (减法，计算机不会直接加)</span><br><span class="line">1111 1111 -&gt;ff</span><br><span class="line"><span class="meta">#</span><span class="bash">了解计算机的实现原理</span></span><br><span class="line">0000 0100</span><br><span class="line">1111 1011</span><br><span class="line">----------异或(如果不考虑进位，异或就可以直接出结果)</span><br><span class="line">1111 1111</span><br><span class="line"></span><br><span class="line">0000 0100</span><br><span class="line">1111 1011</span><br><span class="line">----------与运算(判断进位，如果与运算结果位0，那就没有进位)</span><br><span class="line">0000 0000</span><br><span class="line">最终结果：</span><br><span class="line">1111 1111 -&gt;ff</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">符号位</span></span><br><span class="line">ff  -1  255</span><br></pre></td></tr></table></figure><p>乘：x*y，就是y个x相加，还是加法。</p><p>除：x/y，本质就是减法，就是x能减去多少个y。</p><p><strong>计算机只会加法！</strong></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Tag Plugins】Tag Plugins Plus</title>
      <link href="/2021/09/20/tag_plugins/"/>
      <url>/2021/09/20/tag_plugins/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考自：<a href="https://akilar.top/posts/615e2dec/">Tag Plugins Plus | Akilarの糖果屋</a>和<a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p><a href="https://jokerdig.com/">Hey,Joker - Blog (jokerdig.com)</a></p><p>仅作个人使用。</p></blockquote><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ol><li><p>安装插件，在博客根目录打开<code>[Git Bash Here]</code>终端，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-buterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure><p>hexo自带markdown选完插件<code>hexo-renderer-marked</code>与外挂标签的语法兼容性差，建议替换为<code>hexo-renderer-kramed</code>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li><p>添加配置信息，以下为写法示例<br>在站点配置文件<code>_config.yml</code> 或者主题配置文件<code>_config.yml</code> 中添加如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-tag-plugins-plus@latest/lib/carousel-touch.min.js</span></span><br></pre></td></tr></table></figure></li><li><p>参数释义</p><table><thead><tr><th align="left">参数</th><th align="left">备选值 / 类型</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">enable</td><td align="left">true/false</td><td align="left">【必选】控制开关</td></tr><tr><td align="left">priority</td><td align="left">number</td><td align="left">【可选】过滤器优先级，数值越小，执行越早，默认为 10，选填</td></tr><tr><td align="left">issues</td><td align="left">true/false</td><td align="left">【可选】issues 标签控制开关，默认为 false</td></tr><tr><td align="left">CDN.anima</td><td align="left">URL</td><td align="left">【可选】动画标签 anima 的依赖</td></tr><tr><td align="left">CDN.jquery</td><td align="left">URL</td><td align="left">【可选】issues 标签依赖</td></tr><tr><td align="left">CDN.issues</td><td align="left">URL</td><td align="left">【可选】issues 标签依赖</td></tr><tr><td align="left">CDN.iconfont</td><td align="left">URL</td><td align="left">【可选】iconfont 标签 symbol 样式引入</td></tr><tr><td align="left">CDN.carousel</td><td align="left">URL</td><td align="left">【可选】carousel 旋转相册标签鼠标拖动依赖</td></tr></tbody></table></li></ol><h3 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test1-2">样式展示</button></li><li class="tab"><button type="button" data-href="#test1-3">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>带 <u>下划线</u> 的文本<br>带 <emp>着重号</emp> 的文本<br>带 <wavy>波浪线</wavy> 的文本<br>带 <del>删除线</del> 的文本<br>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd><br>密码样式的文本：<psw>这里没有验证码</psw></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line">带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line">带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line">带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line">键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line">密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="行内文本span"><a href="#行内文本span" class="headerlink" title="行内文本span"></a>行内文本span</h3><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test2-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test2-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test2-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><ol><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h3><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test3-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test3-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test3-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ol><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h3><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>以下时<code>Butterfly</code>的note写法</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">通用配置</button></li><li class="tab"><button type="button" data-href="#test4-2">语法格式</button></li><li class="tab"><button type="button" data-href="#test4-3">参数配置</button></li><li class="tab"><button type="button" data-href="#test4-4">样式展示</button></li><li class="tab"><button type="button" data-href="#test4-5">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>修改主题配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">modern</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><code>Note</code> 标签外挂有两种用法。<code>icons</code> 和 <code>light_bg_offset</code> 只对方法一生效。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details green><summary> 方法一 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details green><summary> 方法二 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details green><summary> 方法一 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】不显示 icon</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><details green><summary> 方法二 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】可配置自定义 icon (只支持 fontawesome 图标，也可以配置 no-icon)</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><details green><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code> 样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div></li><li><p><code>modern</code> 样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div></li><li><p><code>flat</code> 样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div></li><li><p><code>disabled</code> 样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div></li><li><p><code>no-icon</code> 样式</p><div class="note no-icon modern"><p>默认 提示块标签</p></div><div class="note default no-icon modern"><p>default 提示块标签</p></div><div class="note primary no-icon modern"><p>primary 提示块标签</p></div><div class="note success no-icon modern"><p>success 提示块标签</p></div><div class="note info no-icon modern"><p>info 提示块标签</p></div><div class="note warning no-icon modern"><p>warning 提示块标签</p></div><div class="note danger no-icon modern"><p>danger 提示块标签</p></div></li></ol>              </div>            </details><details green><summary> 方法二 </summary>              <div class='content'>              <ol><li><p><code>simple</code> 样式</p><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p><code>modern</code> 样式</p><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p><code>flat</code> 样式</p><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p><code>disabled</code> 样式</p><div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p><code>no-icon</code> 样式</p><div class="note no-icon modern"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon modern"><p>2021年快到了….</p></div><div class="note pink no-icon modern"><p>小心开车 安全至上</p></div><div class="note red no-icon modern"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon modern"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon modern"><p>剪刀石头布</p></div><div class="note green no-icon modern"><p>前端最讨厌的浏览器</p></div></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-5"><details green><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details green><summary> 方法二 </summary>              <div class='content'>              <ol><li><p><code>simple</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code> 样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h3><div class="tabs" id="test5"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test5-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test5-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test5-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test5-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test5-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标：支持 fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-3"><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h3><div class="tabs" id="test6"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test6-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test6-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test6-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test6-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test6-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test6-2"><ol><li>样式: plus, minus, times</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test6-3"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test6-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h3><div class="tabs" id="test7"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test7-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test7-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test7-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test7-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test7-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test7-2"><ol><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test7-3"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test7-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h3><div class="tabs" id="test8"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test8-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test8-2">样式展示</button></li><li class="tab"><button type="button" data-href="#test8-3">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test8-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选） %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test8-2"><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></p></div><div class="body"><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></p></div><div class="body"><p>不需要额外处理。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></p></div><div class="body"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test8-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) %&#125;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h3><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>这里只适配btns</p></div><div class="tabs" id="test10"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test10-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test10-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test10-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test10-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test10-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test10-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;标题&lt;/b&gt;</code>和<code>&lt;p&gt;描述文字&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">wide</td><td align="left">宽一点的按钮</td></tr><tr><td align="left">fill</td><td align="left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td align="left">center</td><td align="left">居中，按钮之间是固定间距</td></tr><tr><td align="left">around</td><td align="left">居中分散</td></tr><tr><td align="left">grid2</td><td align="left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid3</td><td align="left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid4</td><td align="left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid5</td><td align="left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test10-3"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接：</p><div class="btns circle grid5">         <a class="button" href='https://jokerdig.com' title='Hey Joker'><img src='https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png'>Hey Joker</a><a class="button" href='https://jokerdig.com' title='Hey Joker'><img src='https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png'>Hey Joker</a><a class="button" href='https://jokerdig.com' title='Hey Joker'><img src='https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png'>Hey Joker</a><a class="button" href='https://jokerdig.com https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png' title='Hey Joker'><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-volantis@3/img/placeholder/d570170f4f12e1ee829ca0e85a7dffeb77343a.svg'>Hey Joker</a><a class="button" href='https://jokerdig.com' title='Hey Joker'><img src='https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png'>Hey Joker</a>       </div></li><li><p>或者含有图标的按钮：</p><div class="btns rounded grid5">         <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>       </div></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">         <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>       </div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test10-4"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell Hey Joker, https://jokerdig.com, https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png %&#125;</span><br><span class="line">&#123;% cell Hey Joker, https://jokerdig.com, https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png %&#125;</span><br><span class="line">&#123;% cell Hey Joker, https://jokerdig.com, https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png %&#125;</span><br><span class="line">&#123;% cell Hey Joker, https://jokerdig.com https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png %&#125;</span><br><span class="line">&#123;% cell Hey Joker, https://jokerdig.com, https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li><p>或者含有图标的按钮：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h3><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>ghcard使用了<code>github-readme-stats</code>的API，支持直接使用markdown语法来写。</p></div><div class="tabs" id="test11"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test11-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test11-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test11-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test11-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test11-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test11-2"><p>更多参数可以参考：<br><a href="https://github.com/anuraghazra/github-readme-stats"><img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats&show_owner=true" alt="img"></a><br>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th align="left">参数名</th><th align="left">取值</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">hide</td><td align="left">stars,commits,prs,issues,contribs</td><td align="left">隐藏指定统计</td></tr><tr><td align="left">count_private</td><td align="left">true</td><td align="left">将私人项目贡献添加到总提交计数中</td></tr><tr><td align="left">show_icons</td><td align="left">true</td><td align="left">显示图标</td></tr><tr><td align="left">theme</td><td align="left">请查阅<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td align="left">主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test11-3"><ol><li><p>用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/JokerDaxiong"><img src="https://github-readme-stats.vercel.app/api/?username=JokerDaxiong&theme=calm&show_owner=true"/></a></td></tr></tbody></table></li><li><p>仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test11-4"><ol><li><p>用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard xaoxuu %&#125; | &#123;% ghcard xaoxuu, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=buefy %&#125; | &#123;% ghcard xaoxuu, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=onedark %&#125; | &#123;% ghcard xaoxuu, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=algolia %&#125; | &#123;% ghcard xaoxuu, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li><li><p>仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h3><div class="tabs" id="test12"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test12-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test12-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test12-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test12-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test12-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test12-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test12-3"><blockquote><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></blockquote><ol><li><p>基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p></li><li><p>信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p></li><li><p>拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test12-4"><blockquote><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></blockquote><ol><li><p>基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure></li><li><p>信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure></li><li><p>拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h3><div class="tabs" id="test13"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test13-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test13-2">样式展示</button></li><li class="tab"><button type="button" data-href="#test13-3">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test13-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test13-2"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://jokerdig.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png"/><span class="title">Hey Joker</span><span class="desc">简约风格</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test13-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site Hey Joker, url=https://jokerdig.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/JokerDaxiong/Jokerblog@main/source/images/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h3><div class="tabs" id="test14"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test14-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test14-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test14-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test14-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test14-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test14-2"><p>高度：height=20px</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test14-3"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test14-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h3><div class="tabs" id="test15"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test15-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test15-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test15-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test15-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test15-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test15-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test15-3"><ol><li><p>添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>指定宽度：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div></li><li><p>指定宽度并添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>设置占位背景色：</p><div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test15-4"><ol><li><p>添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h3><div class="tabs" id="test16"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test16-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#test16-2">样式展示</button></li><li class="tab"><button type="button" data-href="#test16-3">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test16-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test16-2"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test16-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h3><div class="tabs" id="test17"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test17-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test17-2">参数配置</button></li><li class="tab"><button type="button" data-href="#test17-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test17-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test17-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test17-2"><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test17-3"><ol><li><p>100% 宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></li><li><p>50% 宽度</p><div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li><li><p>25% 宽度</p><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test17-4"><ol><li><p>100% 宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>50% 宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li><li><p>25% 宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h3><div class="tabs" id="test19"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test19-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test19-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test19-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test19-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test19-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://i.loli.net/2021/10/01/uJFAHSDco4ZlXPj.gif)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test19-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test19-3"><details ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://i.loli.net/2021/10/01/uJFAHSDco4ZlXPj.gif"></p>              </div>            </details><details cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>222</li><li>333</li></ul>              </div>            </details><details red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>🍜 <span><img src='https://i.loli.net/2021/10/01/uJFAHSDco4ZlXPj.gif' style='height:24px'></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test19-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2021/10/01/uJFAHSDco4ZlXPj.gif)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">🍜 <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://i.loli.net/2021/10/01/uJFAHSDco4ZlXPj.gif&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h3><div class="tabs" id="test20"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test20-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test20-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test20-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test20-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test20-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test20-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在 #id 中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成 #id，所有空格将由破折号代替。</li><li>仅当前帖子 / 页面的 URL 必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果 index 为 - 1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome 图标名称（全名，看起来像 “fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test20-3"><blockquote><p> Demo 1 - 预设选择第一个【默认】</p></blockquote><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p> Demo 2 - 预设选择 tabs</p></blockquote><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p> Demo 3 - 没有预设值</p></blockquote><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p> Demo 4 - 自定义 Tab 名 + 只有 icon + icon 和 Tab 名</p></blockquote><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test20-4"><blockquote><p> Demo 1 - 预设选择第一个【默认】</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><blockquote><p> Demo 2 - 预设选择 tabs</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><blockquote><p> Demo 3 - 没有预设值</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><blockquote><p> Demo 4 - 自定义 Tab 名 + 只有 icon + icon 和 Tab 名</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h3><div class="tabs" id="test21"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test21-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test21-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test21-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test21-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test21-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem [title],[author] %&#125;</span><br><span class="line">诗词内容</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test21-2"><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test21-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test21-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h3><div class="tabs" id="test22"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test22-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test22-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test22-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test22-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test22-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test22-2"><p><code>width</code>: 0 到 100 的阿拉伯数字<br><code>color</code>: 颜色，取值有 red,yellow,green,cyan,blue,gray<br><code>text</code>: 进度条上的文字内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test22-3"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test22-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h3><div class="tabs" id="test23"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test23-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test23-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test23-3">样式展示</button></li><li class="tab"><button type="button" data-href="#test23-4">示例代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test23-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test23-2"><p><code>label</code>: 注释词汇<br><code>text</code>: 悬停显示的注解内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test23-3"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test23-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Tag </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(4)</title>
      <link href="/2021/09/17/assembly1_4/"/>
      <url>/2021/09/17/assembly1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=7">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="有符号数和无符号数规则理解"><a href="#有符号数和无符号数规则理解" class="headerlink" title="有符号数和无符号数规则理解"></a>有符号数和无符号数规则理解</h3><p>数据都是有宽度的，每个数据代表什么意思呢？ 二进制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 0 1 0 1 0 1</span><br></pre></td></tr></table></figure><p><strong>规则：</strong>二进制解码增加一个规则？</p><p>例如：解析一个音频：mp3解码规则</p><p><strong>无符号数规则</strong></p><p>你这数字是什么，那就是什么</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 0 0 1 1 0 1 0 十六进制：0x9A </span><br></pre></td></tr></table></figure><p><strong>有符号数规则</strong></p><p>最高位是符号位：1(负数) 0(正数)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 0 0 1 1 0 1 0  如何转化？</span><br></pre></td></tr></table></figure><h3 id="原码反码补码理解"><a href="#原码反码补码理解" class="headerlink" title="原码反码补码理解"></a>原码反码补码理解</h3><p><strong>编码规则</strong></p><p><strong>有符号数的编码规则</strong></p><p>原码：最高位是符号位，对其它位进行本身绝对值即可</p><p>反码：</p><ul><li>正数：反码和原码相同</li><li>负数：符号位一定是1，其余位对原码取反。</li></ul><p>补码：</p><ul><li><p>正数：反码和原码相同</p></li><li><p>负数：符号位一定是1，反码+1</p><table><thead><tr><th></th><th>正数</th></tr></thead><tbody><tr><td>0</td><td>0000</td></tr><tr><td>1</td><td>0001</td></tr><tr><td>2</td><td>0010</td></tr><tr><td>3</td><td>0011</td></tr><tr><td>4</td><td>0100</td></tr><tr><td>5</td><td>0101</td></tr><tr><td>6</td><td>0110</td></tr><tr><td>7</td><td>0111</td></tr></tbody></table><p>负数为相反数</p></li></ul><blockquote><p>测试</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">8位算法</span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果是正数，这三个都是一样的</span></span><br><span class="line">1</span><br><span class="line"><span class="meta">#</span><span class="bash">原码 0 0 0 0 0 0 0 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">反码 0 0 0 0 0 0 0 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">补码 1 0 0 0 0 0 0 1</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果是负数</span></span><br><span class="line">-1</span><br><span class="line"><span class="meta">#</span><span class="bash">原码 0 0 0 0 0 0 0 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">反码 1 1 1 1 1 1 1 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash">补码 1 1 1 1 1 1 1 1</span></span><br><span class="line"></span><br><span class="line">-7</span><br><span class="line"><span class="meta">#</span><span class="bash">原码 1 0 0 0 0 1 1 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">反码 1 1 1 1 1 0 0 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash">补码 1 1 1 1 1 0 0 1</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">二进制标志</span></span><br><span class="line">2  10</span><br><span class="line">4  100</span><br><span class="line">8  1000</span><br><span class="line">16 10000</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>如果看到一个数字，二进制的，需要了解它是有符号数还是无符号数。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(3)</title>
      <link href="/2021/09/16/assembly1_3/"/>
      <url>/2021/09/16/assembly1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=5">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="二进制和16进制的深层理解"><a href="#二进制和16进制的深层理解" class="headerlink" title="二进制和16进制的深层理解"></a>二进制和16进制的深层理解</h3><p><strong>二进制</strong></p><hr><p>计算机使用二进制0 1 ! 状态！电子！</p><p>物理极限：摩尔定律！硬操作!</p><p>追求语言的极限！并发语言！软操作！</p><p><strong>量子计算机：</strong></p><p>可以实现量子计算的机器</p><p>传统计算器：集成电路！0 1 硅晶片</p><p>量子计算机的单位：昆比特(量子比特！)量子的两态来表示。</p><p>光子：正交偏振方向。</p><p>磁场：电子的自旋方向。</p><p>21世纪。计算力快到尽头了！</p><p><strong>量子计算机：</strong>提高计算力。</p><p>量子比特、量子叠加态、量子纠缠、量子并行原理…</p><blockquote><p>2019年，Google研究人员展示其最新54比特量子计算机，该计算机只用200秒便可计算完毕当前世界最大的超级计算机需1万年进行的运算。</p><p>2020年，6.18 量子体积64的量子计算机！</p><p>霍尼韦尔还表示，将在一年之内得到至少10个有效量子比特，相当于1024个量子体积。量产！</p></blockquote><p><strong>电子计算机</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">二进制  0  1111</span><br><span class="line"></span><br><span class="line">0 1 10 11 100 101 110 111 1000 10001 1010 1011 1100 1101 1110</span><br></pre></td></tr></table></figure><p>二进制这么写很麻烦!二进制能否简写！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 2 3 4 5 6 7 8 9 a b c d e f</span><br></pre></td></tr></table></figure><p>这就是16进制(计算机操作系统原理)</p><p><strong>课程上的教学！2进制转化那位10进制。然后计算！</strong></p><p><strong>为什么要学习理解二进制</strong></p><p>寄存器、内存、位！底层的每一个为位都是由含义的。汇编入门</p><p>汇编高级：了解程序的深层，操作系统的内核！</p><h3 id="数据宽度理解"><a href="#数据宽度理解" class="headerlink" title="数据宽度理解"></a>数据宽度理解</h3><p>计算机：内存！给计算机增加数据宽度。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bit    ▭</span><br><span class="line">Byte   ▭▭▭▭▭▭▭▭</span><br><span class="line">Word   16位</span><br><span class="line">Dword  32 位</span><br></pre></td></tr></table></figure><p>C和C++、Java都需要定义数据类型、计算机底层需要我们给数据定义宽度。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">位    0  1</span><br><span class="line">字节  0-0xFF</span><br><span class="line">字    0-0xFFFF</span><br><span class="line">双字  0-0xFFFFFFFF</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(2)</title>
      <link href="/2021/09/15/assembly1_2/"/>
      <url>/2021/09/15/assembly1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=3">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="进制的思想本质"><a href="#进制的思想本质" class="headerlink" title="进制的思想本质"></a>进制的思想本质</h3><p><strong>二进制？</strong> 0 1</p><p>学习进制的障碍？</p><p>人类为什么天然选择了10进制，因为人有10个指头；学好二进制要跳出固有思维。</p><p><strong>二进制</strong></p><p>思想：每一种进制都是完美的，都有自己的计算方式！</p><p><strong>进制</strong></p><p>1进制：逢一进一,结绳记事，1 1</p><p>2进制：逢二进一，计算机01 01 10</p><p>8进制：逢八进一，8个符号组成：0 1 2 3 4 5 6 7</p><p>10进制：逢10进一，10个符号组成：0 1 2 3 4 5 6 7 8 9</p><p>16进制：逢16进一，16个符号组成：0 1 2 3 4 5 6 7 8 9 a b c d e f</p><p>学好进制最关键是：<strong>查数</strong></p><p><strong>测试</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 一进制</span></span><br><span class="line">1</span><br><span class="line">11</span><br><span class="line">111</span><br><span class="line">1111</span><br><span class="line">.....</span><br><span class="line"><span class="meta">#</span><span class="bash">三进制</span></span><br><span class="line">0 1 2</span><br><span class="line">10 11 12</span><br><span class="line">20 21 22</span><br><span class="line">100 101 102</span><br><span class="line">110 111 112</span><br><span class="line">.....</span><br><span class="line"><span class="meta">#</span><span class="bash">七进制</span></span><br><span class="line">0 1 2 3 4 5 6</span><br><span class="line">10 11 12 13 14 15 16</span><br><span class="line">20 21 22 23 24 25 26</span><br><span class="line"><span class="meta">#</span><span class="bash">一组符号，逢几进几</span></span><br></pre></td></tr></table></figure><p>问题：你真的理解进制了吗 1+1=3对吗？</p><p>十进制 0 1 2 3 4 5 6 7 8 9 </p><p>机密解密：程序员、破解程序的人！<strong>进制的加密</strong></p><h3 id="进制的运算"><a href="#进制的运算" class="headerlink" title="进制的运算"></a>进制的运算</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">八进制计算</span></span><br><span class="line">2+3=5</span><br><span class="line">2*3=6</span><br><span class="line">4+5=11</span><br><span class="line">4*5=24</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运算的本质就是查数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">8进制</span></span><br><span class="line">0 1 2 3 4 5 6 7 </span><br><span class="line">10 11 12 13 14 15 16 17</span><br><span class="line">20 21 22 23 24 25 26 27 </span><br><span class="line"><span class="meta">#</span><span class="bash">8进制计算下面的结果</span></span><br><span class="line">277+333=?</span><br><span class="line">276*54=?</span><br><span class="line">237-54=?</span><br><span class="line">234/4=?</span><br></pre></td></tr></table></figure><p><strong>八进制加法表：</strong></p><table><thead><tr><th>1+1=2</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>1+2=3</td><td>2+2=4</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1+3=4</td><td>2+3=5</td><td>3+3=6</td><td></td><td></td><td></td><td></td></tr><tr><td>1+4=5</td><td>2+4=6</td><td>3+4=7</td><td>4+4=10</td><td></td><td></td><td></td></tr><tr><td>1+5=6</td><td>2+5=7</td><td>3+5=10</td><td>4+5=11</td><td>5+5=12</td><td></td><td></td></tr><tr><td>1+6=7</td><td>2+6=10</td><td>3+6=11</td><td>4+6=12</td><td>5+6=13</td><td>6+6=14</td><td></td></tr><tr><td>1+7=10</td><td>2+7=11</td><td>3+7=12</td><td>4+7=13</td><td>5+7=14</td><td>6+7=15</td><td>7+7=16</td></tr></tbody></table><p><strong>八进制乘法表：</strong></p><table><thead><tr><th>1*1=1</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>1*2=2</td><td>2*2=4</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1*3=3</td><td>2*3=6</td><td>3*3=11</td><td></td><td></td><td></td><td></td></tr><tr><td>1*4=4</td><td>2*4=10</td><td>3*4=14</td><td>4*4=20</td><td></td><td></td><td></td></tr><tr><td>1*5=5</td><td>2*5=12</td><td>3*5=17</td><td>4*5=24</td><td>5*5=31</td><td></td><td></td></tr><tr><td>1*6=6</td><td>2*6=14</td><td>3*6=22</td><td>4*6=30</td><td>5*6=36</td><td>6*6=44</td><td></td></tr><tr><td>1*7=7</td><td>2*7=16</td><td>3*7=25</td><td>4*7=34</td><td>5*7=43</td><td>6*7=52</td><td>7*7=61</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">277</span><br><span class="line">333  +</span><br><span class="line">-------</span><br><span class="line">632</span><br><span class="line"></span><br><span class="line">276</span><br><span class="line"> 54  x</span><br><span class="line">-------</span><br><span class="line"> 1370</span><br><span class="line">1666 +</span><br><span class="line">--------</span><br><span class="line">20250</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">除法的本质</span></span><br><span class="line">234</span><br><span class="line">  4  ÷</span><br><span class="line">-------</span><br><span class="line">  47</span><br></pre></td></tr></table></figure><p><strong>结论：无论什么进制，本身都有一套完整的运算体系的，我们都可以通过列表的方式将它计算出来！</strong></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机底层】二进制到汇编(1)</title>
      <link href="/2021/09/14/assembly1_1/"/>
      <url>/2021/09/14/assembly1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费计算机底层入门讲解视频：<a href="https://www.bilibili.com/video/BV1ni4y1G7B9?p=1">【狂神说】最通俗易懂的计算机底层教学，二进制到汇编学习！_哔哩哔哩bilibili</a></p></blockquote><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>汇编语言是你的必经之路</p><p><strong>语言</strong></p><p><strong>进制</strong></p><p><strong>进制如何运算</strong></p><p><strong>二进制</strong></p><p><strong>数据宽度</strong></p><p><strong>有符号树和无符号数</strong></p><p><strong>源码反码补码</strong></p><p><strong>位运算</strong></p><p><strong>位运算计算</strong></p><p><strong>汇编</strong></p><p><strong>寄存器</strong></p><p><strong>内存</strong></p><p><strong>汇编指令</strong></p><p><strong>内存复制</strong></p><p><strong>堆栈的指令</strong></p><p><strong>汇编如何写函数</strong></p><p><strong>堆栈传参</strong></p><p><strong>堆栈平衡</strong></p><p><strong>写辅助<del>到入狱</del></strong></p><h3 id="为什么要学习汇编语言"><a href="#为什么要学习汇编语言" class="headerlink" title="为什么要学习汇编语言"></a>为什么要学习汇编语言</h3><p><strong>语言：</strong></p><p>比如：人与人的沟通，学习计算机的语言。</p><p><strong>什么是机器语言</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">我们目前主流的电子计算机！</span></span><br><span class="line">状态：0 和 1</span><br><span class="line"><span class="meta">#</span><span class="bash">最早的程序员，穿孔卡带</span></span><br><span class="line">四则运算(加减乘除)</span><br><span class="line">0100 0000</span><br><span class="line">0100 1000</span><br><span class="line">0100 1000</span><br><span class="line">0100 1000</span><br></pre></td></tr></table></figure><p>这些复杂的机器语言，能简化吗？助记符！汇编语言！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加 ICN  编译器-&gt;  0100 0000</span><br><span class="line">减 DEC  编译器-&gt;  0100 1000</span><br><span class="line">乘 MUL  编译器-&gt;  0100 1000</span><br><span class="line">除 DIV  编译器-&gt;  0100 1000</span><br></pre></td></tr></table></figure><p>离程序的本质：有隔阂，汇编一般用于底层的编写，单片机</p><p><strong>C语言</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加 A+B  编译器-&gt;  0100 0000</span><br><span class="line">减 A-B  编译器-&gt;  0100 1000</span><br><span class="line">乘 A*B  编译器-&gt;  0100 1000</span><br><span class="line">除 A/B  编译器-&gt;  0100 1000</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4kbCcR"><img src="https://z3.ax1x.com/2021/09/14/4kbCcR.png" alt="4kbCcR.png"></a></p><p>使用工具：<a href="https://jokerdig.lanzoui.com/iIAgju0349g">VC6</a>  <a href="https://jokerdig.lanzoui.com/iMnICu0321g">OD</a></p><blockquote><p>下载密码：joker</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(6)</title>
      <link href="/2021/09/11/javaAAR1_6/"/>
      <url>/2021/09/11/javaAAR1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=16">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p><p>Java注解和反射(AAR)笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzoui.com/iJinhtvx43a">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/15IR6PohT1bZy8FdMVm4EwQ">下载地址</a> 提取码：0y6a</p></blockquote><h3 id="获取注解信息"><a href="#获取注解信息" class="headerlink" title="获取注解信息"></a>获取注解信息</h3><p><strong>反射操作注解</strong></p><ul><li>getAnnotations</li><li>getAnnotation</li></ul><p><strong>练习：ORM</strong></p><ul><li><p>了解什么是ORM</p><ul><li>Object relationship Mapping –&gt; 对象关系映射</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student1</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>id</th><th>name</th><th>age</th></tr></thead><tbody><tr><td>001</td><td>张三</td><td>22</td></tr><tr><td>002</td><td>李四</td><td>23</td></tr></tbody></table></li><li><p>类和表结构对应</p></li><li><p>属性和字段对应</p></li><li><p>对象和记录对应</p></li><li><p>要求：利用注解和反射完成类和表结构的银蛇关系</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/11 - 20:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//练习反射操作注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; c1 = Class.forName(<span class="string">&quot;com.jokerdig.reflection.Student1&quot;</span>);</span><br><span class="line">        <span class="comment">//通过反射获得注解</span></span><br><span class="line">        Annotation[] annotations = c1.getAnnotations();</span><br><span class="line">        <span class="keyword">for</span> (Annotation annotation : annotations) &#123;</span><br><span class="line">            System.out.println(annotation);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得注解value的值</span></span><br><span class="line">        Stu annotation = (Stu) c1.getAnnotation(Stu.class);</span><br><span class="line">        String value = annotation.value();</span><br><span class="line">        System.out.println(value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得类指定的注解</span></span><br><span class="line">        Field name = c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        FieldStu annotation1 = name.getAnnotation(FieldStu.class);</span><br><span class="line">        System.out.println(annotation1.colunName());</span><br><span class="line">        System.out.println(annotation1.type());</span><br><span class="line">        System.out.println(annotation1.length());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Stu(&quot;db_student&quot;)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student1</span></span>&#123;</span><br><span class="line">    <span class="meta">@FieldStu(colunName = &quot;db_id&quot;,type = &quot;int&quot;,length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="meta">@FieldStu(colunName = &quot;db_age&quot;,type = &quot;int&quot;,length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="meta">@FieldStu(colunName = &quot;db_name&quot;,type = &quot;varchar&quot;,length = 3)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student1</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student1&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类名的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span>  Stu&#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> FieldStu&#123;</span><br><span class="line">    <span class="function">String <span class="title">colunName</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">type</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(5)</title>
      <link href="/2021/09/10/javaAAR1_5/"/>
      <url>/2021/09/10/javaAAR1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=13">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p></blockquote><h3 id="动态创建对象执行方法"><a href="#动态创建对象执行方法" class="headerlink" title="动态创建对象执行方法"></a>动态创建对象执行方法</h3><p><strong>有了Class对象，能做什么：</strong></p><ul><li>创建类的对象：调用Class对象的newInstance()方法：<ul><li>类必须有一个无参数的构造器。</li><li>类的构造器的访问权限需要足够。</li></ul></li></ul><p>思考：难道没有无参的构造器就不能创建对象了吗？只要操作的时候明确的调用类中的构造器，并将参数传递进去之后，才可以实例化操作。</p><ul><li>步骤如下：<ul><li>通过Class类的<code>getDeclaredConstructor(Class...parameterTypes</code>取得本类的指定形参类型的构造器。</li><li>向构造器的形参中传递一个对象数组进去，里面包含了构造器中所需的各个参数。</li><li>通过Constructor实例化对象。</li></ul></li></ul><p><strong>调用指定的方法：</strong></p><p>​    通过反射，调用类中的方法，通过Method类完成。</p><ul><li><p>通过Class类的getMethod(String name,Class…parameterTypes)方法取得一个Method对象，并设置此方法操作时所需要的参数类型。</p></li><li><p>之后使用Object invoke(Object obj,Object[]args)进行调用，并向方法中传递要设置的obj对象的参数信息。</p><p><a href="https://imgtu.com/i/hvVNtO"><img src="https://z3.ax1x.com/2021/09/10/hvVNtO.png" alt="hvVNtO.png"></a></p></li></ul><p><strong>调用指定的方法：</strong></p><p>​    Object invoke(Object obj,Object… args)</p><ul><li>Object对应原方法的返回值，若原方法无返回值，此时返回null</li><li>若原方法为静态方法，此时形参Object obj可为null</li><li>若原方法形参列表为空，则Object[]args为null</li><li>若原方法声明为private，则需要在调用此invoke()方法前，显示调用方法对象的<code>setAccessible(true)</code>方法，将可访问private的方法</li></ul><p><strong>setAccessible</strong></p><ul><li><p>Method和Field、Constructor对象都有setAccessible()方法。</p></li><li><p>setAccessible作用是启动和禁用访问安全检查的开关。</p></li><li><p>参数值为true则指示反射的对象在使用时应该取消Java语言访问检查。</p><ul><li>提高反射的效率，如果代码中必须用反射，而该句代码需要频繁的被调用，那么请设置为true</li><li>使原本无法访问的私有乘员也可以访问</li></ul></li><li><p>参数值为false则指示反射的对象应该实施Java语言访问检查。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/10 - 19:06</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//动态的创建对象，通过反射</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Class c1 = Class.forName(<span class="string">&quot;com.jokerdig.reflection.User&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造一个对象</span></span><br><span class="line">        User user =(User) c1.newInstance();<span class="comment">//调用无参构造器(过时)</span></span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过构造器创建对象</span></span><br><span class="line">        Constructor constructor = c1.getDeclaredConstructor(String.class, String.class, <span class="keyword">int</span>.class);</span><br><span class="line">        User user1 =(User) constructor.newInstance(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;123&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        System.out.println(user1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射调用方法</span></span><br><span class="line">        User user3 =(User) c1.newInstance();<span class="comment">//调用无参构造器</span></span><br><span class="line">        <span class="comment">//通过反射获取方法</span></span><br><span class="line">        Method setName = c1.getDeclaredMethod(<span class="string">&quot;setName&quot;</span>, String.class);</span><br><span class="line">        <span class="comment">//invoke:激活</span></span><br><span class="line">        <span class="comment">//用法：(对象,&quot;方法的值&quot;)</span></span><br><span class="line">        setName.invoke(user3,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        System.out.println(user3.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射操作属性</span></span><br><span class="line">        User user4 =(User) c1.newInstance();<span class="comment">//调用无参构造器</span></span><br><span class="line">        Field name =c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">//关掉权限检测,来访问私有属性</span></span><br><span class="line">        name.setAccessible(<span class="keyword">true</span>);<span class="comment">//关闭检测,默认为false</span></span><br><span class="line">        name.set(user4,<span class="string">&quot;张三2&quot;</span>);</span><br><span class="line">        System.out.println(user4.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="性能对比分析"><a href="#性能对比分析" class="headerlink" title="性能对比分析"></a>性能对比分析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/10 - 19:40</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//分析性能问题</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//普通方式调用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            user.getName();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;普通方法执行10000次需要&quot;</span>+(endTime-startTime)+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//反射方式调用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, IllegalAccessException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        Class c1 = user.getClass();</span><br><span class="line">        Method getName = c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            getName.invoke(user,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;反射方法执行10000次需要&quot;</span>+(endTime-startTime)+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//放射方式调用，关闭检查</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, IllegalAccessException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        Class c1 = user.getClass();</span><br><span class="line">        Method getName = c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        getName.setAccessible(<span class="keyword">false</span>);<span class="comment">//关闭检测</span></span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">           getName.invoke(user,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;关闭检测反射方法执行10000次需要&quot;</span>+(endTime-startTime)+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException, IllegalAccessException, InvocationTargetException </span>&#123;</span><br><span class="line">        test1();</span><br><span class="line">        test2();</span><br><span class="line">        test3();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取泛型信息"><a href="#获取泛型信息" class="headerlink" title="获取泛型信息"></a>获取泛型信息</h3><p><strong>反射操作泛型：</strong></p><ul><li>Java采用泛型擦除的机制来引入泛型，Java中的泛型仅仅是给编译器javac使用的，确保数据的安全性和免去强制类型转换问题；但是，一旦编译完成，所有和泛型有关的类型全部擦除。</li><li>为了通过反射操作这些类型，Java新增了ParameterizedType，GenericArrayType，TypeVariable和WildcardType几种类型来代表不能被归一到Class类中的类型但是又和原始类型齐名的类型。</li></ul><ul><li><p>ParameterizedType：表示一种参数化类型，比如<code>Collection&lt;String&gt;</code></p></li><li><p>GenericArrayType：表示一种元素类型是参数化类型或者类型变量的数组类型</p></li><li><p>TypeVarable：是各种类型变量的公共父接口</p></li><li><p>WildcardType：代表一种通配符类型表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/10 - 19:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//通过反射获取泛型</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo09</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">(Map&lt;String,User&gt; map, List&lt;User&gt; list)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,User&gt; <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">        Method method = Demo09.class.getMethod(<span class="string">&quot;test1&quot;</span>, Map.class,List.class);</span><br><span class="line">        Type[] genericParameterTypes = method.getGenericParameterTypes();</span><br><span class="line">        <span class="keyword">for</span> (Type genericParameterType : genericParameterTypes) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot; &quot;</span>+genericParameterType);</span><br><span class="line">            <span class="keyword">if</span>(genericParameterType <span class="keyword">instanceof</span> ParameterizedType)&#123;</span><br><span class="line">             Type[] actual =((ParameterizedType) genericParameterType).getActualTypeArguments();</span><br><span class="line">                <span class="keyword">for</span> (Type type : actual) &#123;</span><br><span class="line">                    System.out.println(type);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        method = Demo09.class.getMethod(<span class="string">&quot;test2&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        Type  genericReturnType=method.getGenericReturnType();</span><br><span class="line">        <span class="keyword">if</span>(genericReturnType <span class="keyword">instanceof</span> ParameterizedType)&#123;</span><br><span class="line">            Type[] actualType =((ParameterizedType) genericReturnType).getActualTypeArguments();</span><br><span class="line">            <span class="keyword">for</span> (Type type : actualType) &#123;</span><br><span class="line">                System.out.println(type);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(4)</title>
      <link href="/2021/09/09/javaAAR1_4/"/>
      <url>/2021/09/09/javaAAR1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=10">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p></blockquote><h3 id="分析类初始化"><a href="#分析类初始化" class="headerlink" title="分析类初始化"></a>分析类初始化</h3><p> <strong>什么时候会发生类初始化：</strong></p><ul><li><p>类的主动引用(一定会发生类的初始化)</p><ul><li>当虚拟机启动，先初始化main方法所在的类</li><li>new一个类的对象</li><li>调用类的静态成员(除了final常量)和静态方法</li><li>使用<code>java.lang.reflect</code>包的方法对类进行反射调用</li><li>当初始化一个类，如果其父类没有被初始化，则先会初始化它的父类</li></ul></li><li><p>类的被动引用(不会发生类的初始化)</p><ul><li>当访问一个静态域时，只有真正声明这个域的类才会被初始化。如：当通过子类引用父类的静态变量，不会导致子类初始化。</li><li>通过数组定义类引用，不会触发此类的初始化</li><li>引用常量不会触发此类的初始化(常量链接阶段就存入调用类的常量池中了)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/9 - 17:34</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试类什么时候会初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">   <span class="keyword">static</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;main类被加载&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//主动调用</span></span><br><span class="line">         Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        <span class="comment">//反射会产生主动引用</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.jokerdig.reflection.Son&quot;</span>);</span><br><span class="line">        <span class="comment">//不会产生类的引用方法</span></span><br><span class="line">        System.out.println(Son.b);</span><br><span class="line">        Son[] array = <span class="keyword">new</span> Son[<span class="number">5</span>];</span><br><span class="line">        <span class="comment">//常量不会引起类初始化</span></span><br><span class="line">        System.out.println(Son.M);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类被加载&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类被加载&quot;</span>);</span><br><span class="line">        m = <span class="number">300</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m =<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> M=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h3><p><strong>类加载器的作用</strong></p><ul><li><p>类加载的作用：将class文件字节码内容加载到内存中，并将这些静态数据转换成方法区的运行时数据结构，然后再堆中生成一个代表这个类的<code>java.lang.Class</code>对象，作为方法区中类数据的访问入口。</p></li><li><p>类缓存：标准的JavaSE类加载器可以按要求查找类，但一旦某个类被加载到类加载器中，它将维持加载(缓存)一段时间。不过JVM垃圾回收机制可以回收这些Class对象。</p><p><a href="https://imgtu.com/i/hL4qLF"><img src="https://z3.ax1x.com/2021/09/09/hL4qLF.png" alt="hL4qLF.png"></a></p></li><li><p>类加载器作用时用来把类(class)装载进内存的。JVM规范定义了如下类型的类的加载器。</p><p><a href="https://imgtu.com/i/hL703R"><img src="https://z3.ax1x.com/2021/09/09/hL703R.md.png" alt="hL703R.md.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/9 - 18:14</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        ClassLoader systemC = ClassLoader.getSystemClassLoader();</span><br><span class="line">        System.out.println(systemC);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取系统类加载器的父类加载器-&gt;扩展类加载器</span></span><br><span class="line">        ClassLoader parent = systemC.getParent();</span><br><span class="line">        System.out.println(parent);</span><br><span class="line">        <span class="comment">//获取扩展类的父类加载器-&gt;根加载器(C/C++)</span></span><br><span class="line">        ClassLoader parent1 = parent.getParent();</span><br><span class="line">        System.out.println(parent1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试当前类是哪个加载器加载的</span></span><br><span class="line">        ClassLoader classLoader=Class.forName(<span class="string">&quot;com.jokerdig.reflection.Demo05&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试当JDK内部类是哪个加载器加载的</span></span><br><span class="line">        ClassLoader classLoader1=Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader1);</span><br><span class="line">        <span class="comment">//如何获得系统类加载器可以加载的路径</span></span><br><span class="line">        System.out.println(System.getProperty(<span class="string">&quot;java.class.path&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="获取类的运行时结构"><a href="#获取类的运行时结构" class="headerlink" title="获取类的运行时结构"></a>获取类的运行时结构</h3><p>通过反射获取运行时类的完整结构：</p><p>Filed、Method、Constructor、Superclass、Interface、Annotation</p><ul><li>实现的全部接口</li><li>所继承的父类</li><li>全部的构造器</li><li>全部的方法</li><li>全部的Field</li><li>注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.reflection.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/9 - 18:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//获得类的信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, NoSuchMethodException </span>&#123;</span><br><span class="line">        Class c1 = Class.forName(<span class="string">&quot;com.jokerdig.reflection.User&quot;</span>);</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        c1 = user.getClass();</span><br><span class="line">        <span class="comment">//获得类的名字</span></span><br><span class="line">        System.out.println(c1.getName());<span class="comment">//获得包名+类名</span></span><br><span class="line">        System.out.println(c1.getSimpleName());<span class="comment">//获得类名</span></span><br><span class="line">        <span class="comment">//获得类的属性</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------------&quot;</span>);</span><br><span class="line">        Field[] fields = c1.getFields();<span class="comment">//只能找到public</span></span><br><span class="line">        fields=c1.getDeclaredFields();<span class="comment">//找到所有的属性</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得指定属性</span></span><br><span class="line">        Field name = c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        <span class="comment">//获得类的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------------&quot;</span>);</span><br><span class="line">        Method[] methods = c1.getMethods();<span class="comment">//获得本类及其父类的全部public方法</span></span><br><span class="line">        <span class="keyword">for</span>(Method method :methods)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;正常的:&quot;</span>+method);</span><br><span class="line">        &#125;</span><br><span class="line">        methods = c1.getDeclaredMethods();<span class="comment">//获得本类的所有方法</span></span><br><span class="line">        <span class="keyword">for</span>(Method method :methods)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;getDeclaredMethods:&quot;</span>+method);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定方法</span></span><br><span class="line">        <span class="comment">//重载</span></span><br><span class="line">        Method getName = c1.getMethod(<span class="string">&quot;getName&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        Method setName = c1.getMethod(<span class="string">&quot;setName&quot;</span>, String.class);</span><br><span class="line">        System.out.println(getName);</span><br><span class="line">        System.out.println(setName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定的构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------------&quot;</span>);</span><br><span class="line">        Constructor[] constructors = c1.getConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor constructor:constructors)&#123;</span><br><span class="line">            System.out.println(constructor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        constructors = c1.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor constructor:constructors)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;D:&quot;</span>+constructor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定的构造器</span></span><br><span class="line">        Constructor declaredConstructors = c1.getDeclaredConstructor(String.class, String.class,<span class="keyword">int</span>.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;指定：&quot;</span>+declaredConstructors);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//User类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, String password, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>小结：</strong></p><ul><li>在实际的操作中，取得类的信息的操作代码，并不会经常开发。</li><li>一定要熟悉<code>java.lang.reflect</code>包的作用，反射机制。</li><li>如何取得实行、方法、构造器的名称，修饰符等。</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(3)</title>
      <link href="/2021/09/08/javaAAR1_3/"/>
      <url>/2021/09/08/javaAAR1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=7">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p></blockquote><h3 id="得到Class类的几种方式"><a href="#得到Class类的几种方式" class="headerlink" title="得到Class类的几种方式"></a>得到Class类的几种方式</h3><p><strong>Class类：</strong></p><p>对象照镜子后可以得到的信息：某个类的属性、方法和构造器、某个类到底实现了哪些接口。</p><p>对于每个类而言，JRE都为其保留一个不变的Class类型的对象。一个Class对象包含了特定某个结构(class/interface/enum/annotation/primitive type/void/[])的有关信息。</p><ul><li>Class本身也是一个类</li><li>Class对象只能由系统建立对象</li><li>一个加载的类在JVM中只会有一个Class实例</li><li>一个Class对象对应的时一个加载到JVM中的一个.class文件</li><li>每个类的实例都会记得自己是由哪个Class实例所生成</li><li>通过Class可以完整地得到一个类中的所有被加载的结构</li><li>Class类是Reflection的根源，针对任何你想动态加载、运行的类，唯有先获得相应的Class对象</li></ul><p><strong>Class类的常用方法：</strong></p><table><thead><tr><th>方法名</th><th>功能说明</th></tr></thead><tbody><tr><td>static ClassforName(String name)</td><td>返回指定类名name的Class对象</td></tr><tr><td>Object newInstance()</td><td>调用缺省构造函数，返回Class对象的一个实例</td></tr><tr><td>getName()</td><td>返回此Class对象所表示的实体(类，接口，数组类或void)的名称</td></tr><tr><td>Class getSuperClass()</td><td>返回当前Class对象的父类的Class对象</td></tr><tr><td>Class[] getinterfaces()</td><td>获取当前Class对象的接口</td></tr><tr><td>ClassLoader getClassLoader()</td><td>返回该类的类加载器</td></tr><tr><td>Constructor[] getConstructors()</td><td>返回一个包含某些Constructor对象的数组</td></tr><tr><td>Method getMothed(String name,Class.. T)</td><td>返回一个Method对象，此对象的形参类型为paramType</td></tr><tr><td>Field[] getDeclaredFields()</td><td>返回Field对象的一个数组</td></tr></tbody></table><p><strong>获取Class类的实例：</strong></p><p>若已知具体的类，通过类的class属性获取，该方法最为安全可靠，程序性能最高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class cla = Person.class;</span><br></pre></td></tr></table></figure><p>已知某个类的实例，调用该实例的getClass()方法获取Class对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class cla = Person.getClass();</span><br></pre></td></tr></table></figure><p>已知一个类的全类名，且该类在类路径下，可通过Class类的静态方法forName()获取，可能抛出<code>ClassNotFoundException</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class cla = Class.forName(<span class="string">&quot;demo01.Student&quot;</span>);</span><br></pre></td></tr></table></figure><p>内置基本数据类型可以直接用<code>类名.Type</code></p><p>还可以利用ClassLoader</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/8 - 13:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试Class类的创建方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Person person = <span class="keyword">new</span> Student();</span><br><span class="line">        System.out.println(<span class="string">&quot;这个人是：&quot;</span>+person.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//方法一：通过对象获得</span></span><br><span class="line">        Class cla1 = person.getClass();</span><br><span class="line">        System.out.println(cla1.hashCode());</span><br><span class="line">        <span class="comment">//方法二：forName获得</span></span><br><span class="line">        Class&lt;?&gt; cla2 = Class.forName(<span class="string">&quot;com.jokerdig.reflection.Student&quot;</span>);</span><br><span class="line">        System.out.println(cla2.hashCode());</span><br><span class="line">        <span class="comment">//方式三：通过类名.class获得</span></span><br><span class="line">        Class cla3 = Student.class;</span><br><span class="line">        System.out.println(cla3.hashCode());</span><br><span class="line">        <span class="comment">//方式四：基本内置类型的包装类都有一个Type属性</span></span><br><span class="line">        Class&lt;Integer&gt; cla4= Integer.TYPE;</span><br><span class="line">        System.out.println(cla4.hashCode());</span><br><span class="line">        <span class="comment">//获得父类类型</span></span><br><span class="line">        Class cla5 = cla1.getSuperclass();</span><br><span class="line">        System.out.println(cla5.hashCode());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=<span class="string">&quot;学生&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="所有类型的Class对象"><a href="#所有类型的Class对象" class="headerlink" title="所有类型的Class对象"></a>所有类型的Class对象</h3><ul><li>class：外部类，成员(成员内部类，静态内部类)，局部内部类，匿名内部类。</li><li>interface：接口</li><li>[]：数组</li><li>enum：美剧</li><li>annotation：注解@interface</li><li>primitive type：基本数据类型</li><li>void</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/8 - 14:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//所有类型的class</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class c1 = Object.class;<span class="comment">//类</span></span><br><span class="line">        Class c2 = Comparable.class;<span class="comment">//接口</span></span><br><span class="line">        Class c3 = String[].class;<span class="comment">//一维数组</span></span><br><span class="line">        Class c4 = <span class="keyword">int</span>[][].class;<span class="comment">//二位数组</span></span><br><span class="line">        Class c5 = Override.class;<span class="comment">//注解</span></span><br><span class="line">        Class c6 = ElementType.class;<span class="comment">//枚举</span></span><br><span class="line">        Class c7 = Integer.class;<span class="comment">//基本数据类型</span></span><br><span class="line">        Class c8 = <span class="keyword">void</span>.class;<span class="comment">//void</span></span><br><span class="line">        Class c9 = Class.class;<span class="comment">//Class</span></span><br><span class="line"></span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">        System.out.println(c4);</span><br><span class="line">        System.out.println(c5);</span><br><span class="line">        System.out.println(c6);</span><br><span class="line">        System.out.println(c7);</span><br><span class="line">        System.out.println(c8);</span><br><span class="line">        System.out.println(c9);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> []a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> []b = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="comment">//只要元素类型和维度一样，就是同一个Class</span></span><br><span class="line">        System.out.println(a.getClass().hashCode());</span><br><span class="line">        System.out.println(b.getClass().hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类加载内存分析"><a href="#类加载内存分析" class="headerlink" title="类加载内存分析"></a>类加载内存分析</h3><p><a href="https://imgtu.com/i/h74g2D"><img src="https://z3.ax1x.com/2021/09/08/h74g2D.png" alt="h74g2D.png"></a></p><p>当程序主动使用某个类时，如果该类还未被加载到内存中，则系统会通过如下三个步骤来对该类进行初始化。</p><p><a href="https://imgtu.com/i/h75PRU"><img src="https://z3.ax1x.com/2021/09/08/h75PRU.png" alt="h75PRU.png"></a></p><p><strong>类的加载与ClassLoader的理解：</strong></p><ul><li><p>加载：将class文件字节码内容加载到内存中，并将这些静态数据转换成方法区的运行时数据结构，然后生成一个代表这个类的<code>java.lang.Class</code>对象。</p></li><li><p>连接：将Java类的二进制代码合并到JVM的运行状态之中的过程。</p><ul><li>验证：确保加载的类信息符合JVM规范，没有安全方面的问题；</li><li>准备：正式未类变量(static)分配内存并设置类变量默认初始值的阶段，这些内存都将在方法区中进行分配；</li><li>解析：虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程;</li></ul></li><li><p>初始化：</p><ul><li><p>执行类构造器<clinit>()方法的过程。类构造器<clinit>()方法是由编译器自动收集类中所有类变量的复制动作和静态代码块中的语句合并产生的。(类构造器时构造类信息的，不是构造该类对象的构造器)。</p></li><li><p>当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先出发其父类的初始化。</p></li><li><p>虚拟机会保证一个类的<clinit>()方法在多线程环境中被正确加锁和同步。</p><p><a href="https://imgtu.com/i/h7HEUs"><img src="https://z3.ax1x.com/2021/09/08/h7HEUs.md.png" alt="h7HEUs.md.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.reflection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/8 - 14:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        A a = <span class="keyword">new</span> A();</span><br><span class="line">        System.out.println(A.m);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         1.加载到内存，会产生一个类对应class对象</span></span><br><span class="line"><span class="comment">         2.链接，连接结束后m=0</span></span><br><span class="line"><span class="comment">         3.初始化</span></span><br><span class="line"><span class="comment">           &lt;clinit&gt;()&#123;</span></span><br><span class="line"><span class="comment">                System.out.println(&quot;A类静态代码块初始化&quot;);</span></span><br><span class="line"><span class="comment">                m=300;</span></span><br><span class="line"><span class="comment">           &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类静态代码块初始化&quot;</span>);</span><br><span class="line">        m=<span class="number">300</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m=<span class="number">100</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类的无参构造初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(2)</title>
      <link href="/2021/09/07/javaAAR1_2/"/>
      <url>/2021/09/07/javaAAR1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=4">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p></blockquote><h3 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h3><ul><li><p>使用@interface自定义注解时，自动继承了<code>java.lang.annotation.Annotation</code>接口</p></li><li><p>分析：</p><ul><li>@interface用来声明一个注释，格式：public@interface注释名{定义内容}</li><li>其中的每一个方法实际上是声明了一个配置参数。</li><li>方法的名称就是参数的名称。</li><li>返回值类型就是参数的类型{返回值只能是基本类型,Class,String,enum}</li><li>可以通过default来声明参数的默认值。</li><li>如果只有一个参数成员，一般参数名为value</li><li>注解元素必须要有值，我们定义注解元素时，经常使用空字符串”0”作为默认值。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/7 - 16:34</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//自定义注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义了默认值就可不传参，否则不传参会报错</span></span><br><span class="line">    <span class="meta">@MyAnnotation1(name=&quot;自定义注解&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE,ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation1&#123;</span><br><span class="line">    <span class="comment">//注解的参数：参数类型+参数名()</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">age</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;<span class="comment">//默认值-1代表不存在</span></span><br><span class="line">    String[] schools() <span class="keyword">default</span>&#123;<span class="string">&quot;家里蹲大学&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE,ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation2&#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;<span class="comment">//value可以不传参</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="反射概述"><a href="#反射概述" class="headerlink" title="反射概述"></a>反射概述</h3><p><strong>静态和动态语言</strong></p><p>​    动态语言：</p><ul><li>是一类在运行时可以改变其结构的语言：例如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或时其他结构上的变化。通俗点说就是在运行时代码可以根据某些条件改变自身结构。</li><li>主要动态语言：Object-C，C#，JavaScript，PHP，Python等。</li></ul><p>​    静态语言：</p><ul><li>与动态语言相对应的，运行时结构不可变的语言就是静态语言。如Java，C，C++</li><li>Java不是动态语言，但Java可以称之为”准动态语言”。即Java有一定的动态性，我们可以利用反射机制获得类似动态语言的特性。Java的动态性让编程的时候更加灵活！</li></ul><p><strong>Java Reflection</strong></p><ul><li><p>Reflection(反射)是Java被视为动态语言的关键，反射机制允许程序在执行期间借助于Reflection API取得任何类的内部信息，并能直接操作任意对象的内部属性及方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class c = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>加载完类之后，在堆内存的方法区中就产生了一个Class类型的对象(一个类只有一个Class对象)，这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像一面镜子，通过这个镜子看到类的结构，所以我们形象的称之为：反射。</p><p><a href="https://imgtu.com/i/hoKx74"><img src="https://z3.ax1x.com/2021/09/07/hoKx74.md.png" alt="hoKx74.md.png"></a></p></li></ul><h3 id="获得反射对象"><a href="#获得反射对象" class="headerlink" title="获得反射对象"></a>获得反射对象</h3><p>​    <strong>Java反射机制提供的功能：</strong></p><ul><li>在运行时判断任意一个对象所属的类。</li><li>在运行时构造任意一个类的对象。</li><li>在运行时判断任意一个类所具有的成员变量和方法。</li><li>在运行时获取泛型信息。</li><li>在运行时调用任意一个对象的成员变量和方法。</li><li>在运行时处理注释。</li><li>生成动态代理。</li><li>……</li></ul><p>​    <strong>反射的优点：</strong></p><ul><li>可以实现动态创建对象和编译，体现出很大的灵活性。</li></ul><p>​    <strong>反射的缺点：</strong></p><ul><li>对性能有影响。使用反射基本上是一种解释操作，我们可以告诉JVM，我们希望做什么并且它满足我们的要求。这类操作总是慢于直接执行相同的操作。</li></ul><p>​    <strong>反射相关的主要API：</strong></p><ul><li>java.lang.Class：代表一个类</li><li>java.lang.reflect.Method：代表类的方法</li><li>java.lang.reflect.Field：代表类的成员变量</li><li>java.lang.reflect.Constructor：代表类的构造器</li><li>……</li></ul><p>​    <strong>Class类</strong></p><p>​    在Object类中定义了以下的方法，此方法将被所有子类继承</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> Class <span class="title">getClass</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><ul><li><p>以上的方法返回值的类型是一个Class类，此类是Java反射的源头，实际上所谓反射从程序的运行结果来看也很好理解，即：可以通过对象反射求出类的名称。</p><p><a href="https://imgtu.com/i/ho87h4"><img src="https://z3.ax1x.com/2021/09/07/ho87h4.png" alt="ho87h4.png"></a></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/7 - 17:07</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//什么叫反射</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//通过反射获取类的Class对象</span></span><br><span class="line">        Class c1 = Class.forName(<span class="string">&quot;com.jokerdig.demo.User&quot;</span>);</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        <span class="comment">//一个类在内存中只有一个Class对象</span></span><br><span class="line">        <span class="comment">//一个类被加载后，类的整个结构都会被封装在Class对象中</span></span><br><span class="line">        Class c2 = Class.forName(<span class="string">&quot;com.jokerdig.demo.User&quot;</span>);</span><br><span class="line">        System.out.println(c1.hashCode());</span><br><span class="line">        System.out.println(c2.hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实体类 pojo,entity</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaAAR】Java注解和反射(1)</title>
      <link href="/2021/09/06/javaAAR1_1/"/>
      <url>/2021/09/06/javaAAR1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java注解和反射讲解视频：<a href="https://www.bilibili.com/video/BV1p4411P7V3?p=1">【狂神说Java】注解和反射_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是注解"><a href="#什么是注解" class="headerlink" title="什么是注解"></a>什么是注解</h3><ul><li><p>Annotation是从JDK5.0开始引入的新技术</p></li><li><p>Annotation的作用：</p><ul><li>不是程序本身，可以对程序作出结束(这一点和注释(comment)没什么区别)</li><li><strong>可以被其他程序(如:编译器等)读取</strong></li></ul></li><li><p>Annotation的格式：</p><ul><li>注解是以”@注释名”在代码中存在的，还可以添加一些参数值，例如：@SuppressWarnings(value=”unchecked”)</li></ul></li><li><p>Annotation在哪里使用：</p><ul><li>可以附加在package,class,method,field等上面，相当于给它们添加了额外的辅助信息，可以通过反射机制编程实现对这些元数据的访问</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/6 - 21:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//什么是注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重写的注解</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h3><ul><li><p>@Override:定义在<code>java.lang.Override</code>中，此注解只适用于修辞手法，表似一个方法声明打算重写超类中的另一个方法声明。</p></li><li><p>@Deprecated:定义在<code>java.lang.Deprecated</code>中，此注释可以用于修辞方法，属性，类，表示不鼓励了程序员使用这样的元素，通常是因为它很危险或者有更好的选择。</p></li><li><p>@SuppressWarnings:定义在<code>java.lang.SuppressWarnings</code>中,用来抑制编译时的警告信息。</p></li><li><p>与前两个注释有所不同，你需要添加一个参数才能正确使用，这些参数都是已经定义好的：</p><ul><li>@SuppressWarnings(“all”)</li><li>@SuppressWarnings(“unchecked”)</li><li>@SupressWarnings(value={“unchecked”,”deprecation”})</li><li>…..</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/6 - 21:15</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;all&quot;)</span><span class="comment">//取消警告提示</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Override  重写的注释</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//过时的，已被淘汰的</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Deprecated&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        test();<span class="comment">//已过时，但也能用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h3><ul><li><p>元注解的作用就是负责注解其他注解，Java定义了4个标准的meta-nanotation类型，它们被用来提供对其他annotation类型作说明。</p></li><li><p>这些类型和它们所支持的类在<code>java.lang.annotation</code>包中可以找到(@Target,@Retention,@Documented,@Inherited)</p><ul><li><strong>@Target</strong>:用于描述注解的使用范围(即:被描述的注解可以用在什么地方)</li><li><strong>@Retention</strong>:表示需要在什么级别保存该注释信息，用于描述注解的生命周期<ul><li>(SOURCE&lt;CLASS&lt;RUNTIME)</li></ul></li><li>@Document:说明该注释将被包含在javadoc中</li><li>@Inherited:说明子类可以<strong>继承</strong>父类中的该注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/6 - 21:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试元注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个注释</span></span><br><span class="line"><span class="comment">//@Target 目标,表示注解能用在那些地方</span></span><br><span class="line"><span class="meta">@Target(value= &#123;ElementType.METHOD,ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="comment">//Retention 表示注解在什么地方还有效</span></span><br><span class="line"><span class="comment">//runtime&gt;class&gt;source</span></span><br><span class="line"><span class="meta">@Retention(value= RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="comment">//Documented  表示是否将我们的注解生成在Javadoc中</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="comment">//InHerited  子类可以继承父类的注解</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java注解和反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaNET】Java网路编程(4)</title>
      <link href="/2021/09/04/javaNET1_4/"/>
      <url>/2021/09/04/javaNET1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java网络编程实战讲解视频：<a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=10">【狂神说Java】网络编程实战讲解_哔哩哔哩_bilibili</a></p><p>Java网络编程(NET)笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzouw.com/ixwvmtlac8f">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1i87WzEIxY_m0UpzzEhbpug">下载地址</a> 提取码：jpvx</p></blockquote><h3 id="UDP聊天实现"><a href="#UDP聊天实现" class="headerlink" title="UDP聊天实现"></a>UDP聊天实现</h3><p><strong>循环发送消息：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 10:37</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpSenderDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//准备数据，控制台读取 System.in</span></span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环发送</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            String data=reader.readLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = data.getBytes();</span><br><span class="line">            DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(bytes,<span class="number">0</span>,bytes.length,<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;localhost&quot;</span>,<span class="number">6666</span>));</span><br><span class="line"></span><br><span class="line">            socket.send(packet);</span><br><span class="line">            <span class="keyword">if</span>(data.equals(<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>循环接收消息：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 10:37</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpServerDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">6666</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//准备接收包裹</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(bytes,<span class="number">0</span>,bytes.length);</span><br><span class="line">            socket.receive(packet);</span><br><span class="line">            <span class="comment">//断开</span></span><br><span class="line">            <span class="keyword">byte</span>[] data = packet.getData();</span><br><span class="line">            String s = <span class="keyword">new</span> String(data,<span class="number">0</span>, packet.getLength());<span class="comment">//packet.length()会无法停止</span></span><br><span class="line">            System.out.println(s);</span><br><span class="line">            <span class="keyword">if</span>(s.equals(<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="UDP多线程在线咨询"><a href="#UDP多线程在线咨询" class="headerlink" title="UDP多线程在线咨询"></a>UDP多线程在线咨询</h3><p><strong>在线咨询：</strong></p><p>两个人都可以是发送方，也都可以是接收方。</p><p><strong>发送端：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 12:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkSeed</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    DatagramSocket socket=<span class="keyword">null</span>;</span><br><span class="line">    BufferedReader reader=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fromPort;</span><br><span class="line">    <span class="keyword">private</span> String toIp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> toPort;</span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TalkSeed</span><span class="params">(<span class="keyword">int</span> fromPort, String toIp, <span class="keyword">int</span> toPort)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fromPort = fromPort;</span><br><span class="line">        <span class="keyword">this</span>.toIp = toIp;</span><br><span class="line">        <span class="keyword">this</span>.toPort = toPort;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> DatagramSocket(fromPort);</span><br><span class="line">            <span class="comment">//准备数据，控制台读取 System.in</span></span><br><span class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//循环发送</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            String data= <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                data = reader.readLine();</span><br><span class="line">                <span class="keyword">byte</span>[] bytes = data.getBytes();</span><br><span class="line">                DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(bytes,<span class="number">0</span>,bytes.length,<span class="keyword">new</span> InetSocketAddress(<span class="keyword">this</span>.toIp,<span class="keyword">this</span>.toPort));</span><br><span class="line">                socket.send(packet);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(data.equals(<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接收端：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 13:23</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkReceive</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    DatagramSocket socket=<span class="keyword">null</span>;</span><br><span class="line">    DatagramPacket packet=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> String fromMsg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TalkReceive</span><span class="params">(<span class="keyword">int</span> port,String fromMsg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">        <span class="keyword">this</span>.fromMsg = fromMsg;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket=<span class="keyword">new</span> DatagramSocket(port);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//准备接收包裹</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                packet = <span class="keyword">new</span> DatagramPacket(bytes,<span class="number">0</span>,bytes.length);</span><br><span class="line">                socket.receive(packet);</span><br><span class="line">                <span class="comment">//断开</span></span><br><span class="line">                <span class="keyword">byte</span>[] data = packet.getData();</span><br><span class="line">                String s = <span class="keyword">new</span> String(data,<span class="number">0</span>, packet.getLength());<span class="comment">//packet.length()会无法停止</span></span><br><span class="line">                System.out.println(fromMsg+<span class="string">&quot;发送：&quot;</span>+s);</span><br><span class="line">                <span class="keyword">if</span>(s.equals(<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>用户：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 13:35</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//用户</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkUser</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//开启两个线程</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkSeed(<span class="number">7777</span>,<span class="string">&quot;localhost&quot;</span>,<span class="number">9999</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkReceive(<span class="number">8888</span>,<span class="string">&quot;客户&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>客户：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.chat;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 13:36</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//客户</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkSeed(<span class="number">6666</span>,<span class="string">&quot;localhost&quot;</span>,<span class="number">8888</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkReceive(<span class="number">9999</span>,<span class="string">&quot;用户&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="UDP下载网络资源"><a href="#UDP下载网络资源" class="headerlink" title="UDP下载网络资源"></a>UDP下载网络资源</h3><p>URL：统一资源定位符，定位互联网某一资源。</p><p>DNS域名解析：<a href="http://www.jokerdig.com/">www.jokerdig.com</a></p><hr><p>协议：//ip地址：端口/项目名/资源</p><p><strong>URL方法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.url;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 13:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException </span>&#123;</span><br><span class="line">      URL url=  <span class="keyword">new</span> URL(<span class="string">&quot;https://localhost:8080/helloword/index.jsp?username=name&amp;password=123&quot;</span>);</span><br><span class="line">        System.out.println(url.getProtocol());<span class="comment">//协议</span></span><br><span class="line">        System.out.println(url.getHost());<span class="comment">//主机ip</span></span><br><span class="line">        System.out.println(url.getPort());<span class="comment">//端口</span></span><br><span class="line">        System.out.println(url.getPath());<span class="comment">//文件</span></span><br><span class="line">        System.out.println(url.getFile());<span class="comment">//全路径</span></span><br><span class="line">        System.out.println(url.getQuery());<span class="comment">//参数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>URL文件下载：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.url;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/4 - 14:05</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlFileDownload</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">      <span class="comment">//下载地址</span></span><br><span class="line">      URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://jokerdig.com/images/avatar.png&quot;</span>);</span><br><span class="line">      <span class="comment">//连接资源</span></span><br><span class="line">      HttpURLConnection http=(HttpURLConnection) url.openConnection();</span><br><span class="line">        InputStream inputStream = http.getInputStream();</span><br><span class="line">        FileOutputStream file = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;avatar.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len=inputStream.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            file.write(buffer,<span class="number">0</span>,len);<span class="comment">//写出数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        file.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        http.disconnect();<span class="comment">//断开</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java网路编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaNET】Java网路编程(3)</title>
      <link href="/2021/09/03/javaNET1_3/"/>
      <url>/2021/09/03/javaNET1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java网络编程实战讲解视频：<a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=7">【狂神说Java】网络编程实战讲解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="TCP文件上传实现"><a href="#TCP文件上传实现" class="headerlink" title="TCP文件上传实现"></a>TCP文件上传实现</h3><p><strong>文件上传</strong></p><p>客户端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/3 - 19:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//输出端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//创建一个Socket连接</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>), <span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//创建一个输出流</span></span><br><span class="line">        OutputStream out = socket.getOutputStream();</span><br><span class="line">        <span class="comment">//文件流</span></span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">&quot;OIP.jpg&quot;</span>));</span><br><span class="line">        <span class="comment">//写出文件</span></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len=fileInputStream.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通知服务器，已经传输完了</span></span><br><span class="line">        socket.shutdownOutput();<span class="comment">//传输完毕</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//确定服务器接收完毕，才能断开连接</span></span><br><span class="line">        InputStream inputStream = socket.getInputStream();</span><br><span class="line">        <span class="comment">//String byte[]</span></span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2014</span>];</span><br><span class="line">        <span class="keyword">int</span> len1;</span><br><span class="line">        <span class="keyword">while</span>((len1=inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            byteArrayOutputStream.write(bytes,<span class="number">0</span>,len1);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(byteArrayOutputStream.toString());</span><br><span class="line">        <span class="comment">//关闭资源</span></span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        out.close();</span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/2 - 19:33</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//服务端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpServerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteStream = <span class="keyword">null</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">null</span>;</span><br><span class="line">        Socket socket = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//我得有一个地址</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9988</span>);</span><br><span class="line">            <span class="comment">//等待客户端连接过来</span></span><br><span class="line">            socket = serverSocket.accept();</span><br><span class="line">            <span class="comment">//读取客户端消息</span></span><br><span class="line">            inputStream = socket.getInputStream();</span><br><span class="line">        <span class="comment">/*    int len;</span></span><br><span class="line"><span class="comment">            while((len=inputStream.read(buffer))!=1)&#123;</span></span><br><span class="line"><span class="comment">                String msg=  new String(buffer,0,len);</span></span><br><span class="line"><span class="comment">                System.out.println(msg);</span></span><br><span class="line"><span class="comment">                //这样中文进来会乱码</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">            <span class="comment">//管道流</span></span><br><span class="line">            byteStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(byteStream.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                <span class="keyword">if</span> (byteStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    byteStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (socket != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (serverSocket != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初识Tomcat"><a href="#初识Tomcat" class="headerlink" title="初识Tomcat"></a>初识Tomcat</h3><blockquote><p><a href="https://tomcat.apache.org/download-80.cgi#8.5.70">Tomcat下载</a></p></blockquote><p>服务端</p><ul><li>自定义S</li><li>Tomcat服务器</li></ul><p>客户端</p><ul><li>自定义C</li><li>浏览器B</li></ul><p>解决服务器运行乱码：</p><p>​    Tomcat安装目录&gt;conf&gt;logging文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将该处UTF-8改为GBK</span></span><br><span class="line"><span class="string">java.util.logging.ConsoleHandler.level</span> <span class="string">=</span> <span class="string">FINE</span></span><br><span class="line"><span class="string">java.util.logging.ConsoleHandler.formatter</span> <span class="string">=</span> <span class="string">org.apache.juli.OneLineFormatter</span></span><br><span class="line"><span class="string">java.util.logging.ConsoleHandler.encoding</span> <span class="string">=</span> <span class="string">GBK</span></span><br></pre></td></tr></table></figure><h3 id="UDP消息发送"><a href="#UDP消息发送" class="headerlink" title="UDP消息发送"></a>UDP消息发送</h3><p>发短信，不用连接，需要知道对方的地址。</p><p><strong>发送端：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/3 - 20:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//不需要连接服务器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpDemo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//建立一个socket</span></span><br><span class="line">        DatagramSocket datagramSocket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">        <span class="comment">//建个包</span></span><br><span class="line">        String manage=<span class="string">&quot;你好，服务器！&quot;</span>;</span><br><span class="line">        <span class="comment">//发送的地址</span></span><br><span class="line">        InetAddress localhost = InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> port =<span class="number">9090</span>;</span><br><span class="line">        <span class="comment">//数据 数据的长度起始，发送给谁</span></span><br><span class="line">        DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(manage.getBytes(),<span class="number">0</span>, manage.getBytes().length, localhost, port);</span><br><span class="line">        <span class="comment">//发送包</span></span><br><span class="line">        datagramSocket.send(packet);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        datagramSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接收端：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/3 - 20:08</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//还要等待客户端的连接</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpDemo3_1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//开放端口</span></span><br><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">9090</span>);</span><br><span class="line">        <span class="comment">//接收数据包</span></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line">        socket.receive(packet);<span class="comment">//阻塞数据</span></span><br><span class="line">        System.out.println(packet.getAddress().getHostAddress());</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(packet.getData(),<span class="number">0</span>,packet.getLength()));</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java网路编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaNET】Java网路编程(2)</title>
      <link href="/2021/09/02/javaNET1_2/"/>
      <url>/2021/09/02/javaNET1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java网络编程实战讲解视频：<a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=4">【狂神说Java】网络编程实战讲解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="端口Port"><a href="#端口Port" class="headerlink" title="端口Port"></a>端口Port</h3><p>端口表示计算机上的一个程序的进程：</p><ul><li><p>不同的进程有不同的端口号！用来区分软件。</p></li><li><p>规定0-65535</p></li><li><p>TCP,UDP：65535*2 tcp:80，udp:80，单个协议下，端口不能冲突</p></li><li><p>端口分类：</p><ul><li><p>公有端口 0-1023</p><ul><li>HTTP：80</li><li>HTTPS：443</li><li>FTP：21</li><li>Telent：23</li></ul></li><li><p>程序注册端口：1024-49151，分配用户或程序</p><ul><li>Tomcat：8080</li><li>MySQL：3360</li><li>Oracle：1521</li></ul></li><li><p>动态、私有：49152-65535</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">netstat</span> <span class="string">-ano</span> <span class="comment">#查看所有的端口</span></span><br><span class="line"><span class="string">netstat</span> <span class="string">-ano|findstr&quot;8080&quot;</span> <span class="comment">#查看指定端口</span></span><br><span class="line"><span class="string">tasklist|findstr&quot;端口号&quot;</span> <span class="comment">#查看指定端口的进程</span></span><br></pre></td></tr></table></figure><p>任务管理器：Ctrl+Shift+Esc</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/2 - 19:15</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        InetSocketAddress inetSocketAddress = <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8080</span>);</span><br><span class="line">        InetSocketAddress inetSocketAddress1 = <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;localhost&quot;</span>, <span class="number">8080</span>);</span><br><span class="line">        System.out.println(inetSocketAddress);</span><br><span class="line">        System.out.println(inetSocketAddress1);</span><br><span class="line"></span><br><span class="line">        System.out.println(inetSocketAddress.getAddress());<span class="comment">//地址</span></span><br><span class="line">        System.out.println(inetSocketAddress.getHostName());<span class="comment">//域名</span></span><br><span class="line">        System.out.println(inetSocketAddress.getPort());<span class="comment">//端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h3><p>协议：约定，就好比沟通语言的类型(普通话)</p><p><strong>网络通信协议：</strong>速率，传输码率，代码结构，传输控制…</p><p><strong>问题：</strong>非常的复杂</p><p>大事化小：分层</p><p>TCP/IP协议：</p><ul><li><p>TCP：用户传输协议</p></li><li><p>UDP：用户数据报协议</p></li><li><p>IP：网络互联协议</p></li></ul><p>TCP/UDP对比：</p><ul><li>TCP：打电话<ul><li>连接，稳定</li><li>三次握手，四次挥手</li><li>客户端、服务端</li><li>传输完成，释放连接，效率低</li></ul></li><li>UDP：发短信<ul><li>不连接，不稳定</li><li>客户端，服务端没有明确的界线</li><li>不管有没有准备好，都可以发给你</li><li>DDOS：洪水攻击(饱和攻击)</li></ul></li></ul><h3 id="TCP实现聊天"><a href="#TCP实现聊天" class="headerlink" title="TCP实现聊天"></a>TCP实现聊天</h3><p>客户端</p><ul><li><p>连接服务器Socket</p></li><li><p>发送消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/2 - 19:33</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//客户端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpClientDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">null</span>;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 要知到服务器的地址</span></span><br><span class="line">            InetAddress serverIP = InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">            <span class="comment">//端口号</span></span><br><span class="line">            <span class="keyword">int</span> port = <span class="number">9999</span>;</span><br><span class="line">            <span class="comment">//创建一个socket连接</span></span><br><span class="line">            socket = <span class="keyword">new</span> Socket(serverIP,port);</span><br><span class="line">            <span class="comment">//发送消息IO流</span></span><br><span class="line">            outputStream = socket.getOutputStream();</span><br><span class="line">            outputStream.write(<span class="string">&quot;Hello World send-&gt;&quot;</span>.getBytes());<span class="comment">//转换为字节</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                <span class="keyword">if</span>(outputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>服务器</p><ul><li><p>建立服务的端口ServerSocket</p></li><li><p>等待用户的连接 accept</p></li><li><p>接收用户消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/2 - 19:33</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//服务端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpServerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteStream = <span class="keyword">null</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">null</span>;</span><br><span class="line">        Socket socket = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//我得有一个地址</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9999</span>);</span><br><span class="line">            <span class="comment">//等待客户端连接过来</span></span><br><span class="line">            socket = serverSocket.accept();</span><br><span class="line">            <span class="comment">//读取客户端消息</span></span><br><span class="line">            inputStream = socket.getInputStream();</span><br><span class="line">        <span class="comment">/*    int len;</span></span><br><span class="line"><span class="comment">            while((len=inputStream.read(buffer))!=1)&#123;</span></span><br><span class="line"><span class="comment">                String msg=  new String(buffer,0,len);</span></span><br><span class="line"><span class="comment">                System.out.println(msg);</span></span><br><span class="line"><span class="comment">                //这样中文进来会乱码</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">            <span class="comment">//管道流</span></span><br><span class="line">            byteStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(byteStream.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                <span class="keyword">if</span> (byteStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    byteStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (socket != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (serverSocket != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java网路编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaNET】Java网路编程(1)</title>
      <link href="/2021/09/01/javaNET1_1/"/>
      <url>/2021/09/01/javaNET1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java网络编程实战讲解视频：<a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=1">【狂神说Java】网络编程实战讲解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是计算机网络"><a href="#什么是计算机网络" class="headerlink" title="什么是计算机网络"></a>什么是计算机网络</h3><ul><li><p>概述：</p><p>计算机网络是指将<a href="https://baike.baidu.com/item/%E5%9C%B0%E7%90%86">地理</a>位置不同的具有独立功能的多台<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>及其外部设备，通过通信线路连接起来，在<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/3997">网络操作系统</a>，<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/6579078">网络管理软件</a>及<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/4438611">网络通信协议</a>的管理和协调下，实现<a href="https://baike.baidu.com/item/%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB/233480">资源共享</a>和信息传递的计算机系统。*-百度百科*</p></li><li><p>网络编程目的：</p><p>无线电台，传播交流信息，数据交换，通信。</p></li><li><p>达到的效果：</p><ul><li>如何准确的定位网络上的一台主机 IP：端口，定位到计算机某个资源。</li><li>找到了这个主机，如何传输数据呢？</li></ul><p>Javaweb:   网页编程   B/S</p><p>Java网络编程: TCP/IP  C/S</p></li></ul><h3 id="网络通信的两个要素"><a href="#网络通信的两个要素" class="headerlink" title="网络通信的两个要素"></a>网络通信的两个要素</h3><p>如何实现网络的通信？</p><p><strong>通信双方的地址：</strong></p><ul><li>IP</li><li>端口号</li></ul><p><strong>规则：网络通信协议</strong></p><p>TCP/IP通信(OSI七层网络模型)</p><p><a href="https://imgtu.com/i/hBX4wd"><img src="https://z3.ax1x.com/2021/09/01/hBX4wd.md.gif" alt="hBX4wd.md.gif"></a></p><p><strong>传输层为本课程重点</strong></p><p>万物皆对象</p><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p>IP地址(InetAddress)</p><ul><li><p>定位唯一网络上的计算机</p></li><li><p>127.0.0.1：本机localhost</p></li><li><p>IP地址的分类</p><ul><li>IPv4/IPv6<ul><li><strong>IPv4：</strong>127.0.0.1,四个字节组成，0-255，42亿；30亿在北美，亚洲4亿(2001年就用尽)</li><li><strong>IPv6：</strong>fe80::10de:752a:458c:7cbd%28，128位，8个无符号整数。</li></ul></li><li>公网(互联网)和私网(局域网)<ul><li>ABCD地址:<a href="https://zhidao.baidu.com/question/53554208.html">IP地址的ABCD类</a></li><li>192.168.xx.xx，专门给某些组织内部使用</li></ul></li><li>域名：记忆IP问题<ul><li>IP：<a href="http://www.jokerdig.com/">www.jokerdig.com</a></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.netDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/9/1 - 22:09</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试ip</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//查询本地地址,127，0.0.1 / localhost/getLocalHost()</span></span><br><span class="line">            InetAddress byName = InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">           <span class="comment">//查询网络IP地址</span></span><br><span class="line">            InetAddress byName1 = InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line">            InetAddress byName2 = InetAddress.getByName(<span class="string">&quot;www.jokerdig.com&quot;</span>);</span><br><span class="line">           <span class="comment">//输出</span></span><br><span class="line">            System.out.println(byName);</span><br><span class="line">            System.out.println(byName1);</span><br><span class="line">            System.out.println(byName2);</span><br><span class="line">            <span class="comment">//常用方法</span></span><br><span class="line">            System.out.println(byName2.getCanonicalHostName());<span class="comment">//规范的名字</span></span><br><span class="line">            System.out.println(byName2.getHostAddress());<span class="comment">//ip</span></span><br><span class="line">            System.out.println(byName2.getHostName());<span class="comment">//域名，或自己电脑名</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java网路编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python】Python第三方模块安装</title>
      <link href="/2021/08/31/pythonPage/"/>
      <url>/2021/08/31/pythonPage/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言</p><p><a href="https://pypi.org/">PyPI · Python模块下载</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载和安装第三方模块，可用 Python 提供的 pip 命令实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install|uninstall|<span class="built_in">list</span> 模块名</span><br></pre></td></tr></table></figure><ul><li>install：用于安装第三方模块，当 pip 使用 install 作为参数时，后面的模块名不能省略。</li><li>uninstall；用于卸载已经安装的第三方模块，选择 uninstall 作为参数，后面的模块名也不能省略。</li><li>list：用于显示已经安装的第三方模块。</li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>以安装 numpy(用于进行科学计算) 模块为例，在命令行窗口中输入以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy</span><br></pre></td></tr></table></figure><p>执行此代码，它会在线自动安装 numpy 模块。</p><p><a href="https://imgtu.com/i/ha9mrQ"><img src="https://z3.ax1x.com/2021/08/31/ha9mrQ.md.png" alt="安装成功"></a></p><p>如果显示找不到pip命令，则要手动安装，即在cmd输入以下内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ensurepip</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/ha9nbj"><img src="https://z3.ax1x.com/2021/08/31/ha9nbj.md.png" alt="ha9nbj.md.png"></a></p><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><p>报错<code>SyntaxError: invalid syntax</code></p><p>解决办法：<a href="https://pip.pypa.io/en/stable/installation/">点文档 v21.2.4 (pypa.io)</a></p>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python第三方模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Java多线程】Java多线程(4)</title>
      <link href="/2021/08/23/javaMUL1_4/"/>
      <url>/2021/08/23/javaMUL1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java多线程讲解视频：<a href="https://www.bilibili.com/video/BV1V4411p7EF?p=22">【狂神说Java】多线程详解_哔哩哔哩_bilibili</a></p><p>Java多线程(Multithreading)笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzoui.com/inULLt1l3ze">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1hwMrZCipwe3tiZQRKs-ycQ">下载地址</a> 提取码：jbe6</p></blockquote><h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><ul><li><p>多个线程各自占有一些共享资源，并且互相等待其他线程占有的资源才能运行，而导致两个或者多个线程都在等待对方释放资源，都停止执行的情形。某一个同步块同时拥有<strong>两个以上对象的锁</strong>时，就可能会发生”死锁”的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.thread;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/23 - 10:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//死锁：多个线程互相抱着对方的资源，然后形成死锁</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadLock</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Makeup mk = <span class="keyword">new</span> Makeup(<span class="number">0</span>,<span class="string">&quot;灰姑娘&quot;</span>);</span><br><span class="line">        Makeup mk2 = <span class="keyword">new</span> Makeup(<span class="number">1</span>,<span class="string">&quot;白雪公主&quot;</span>);</span><br><span class="line"></span><br><span class="line">        mk.start();</span><br><span class="line">        mk2.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lipstick</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mirror</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化妆</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Makeup</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="comment">//static来保证需要的资源只有一份</span></span><br><span class="line">    <span class="keyword">static</span> Lipstick lipstic = <span class="keyword">new</span> Lipstick();</span><br><span class="line">    <span class="keyword">static</span> Mirror mirror = <span class="keyword">new</span> Mirror();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> choice;<span class="comment">//选择</span></span><br><span class="line">    String girlName;<span class="comment">//使用化妆的人</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Makeup</span><span class="params">(<span class="keyword">int</span> choice, String girlName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.choice = choice;</span><br><span class="line">        <span class="keyword">this</span>.girlName = girlName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//化妆</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            makeup();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//互相持有对方的锁</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(choice == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipstic)&#123;</span><br><span class="line">                System.out.println(<span class="keyword">this</span>.girlName+<span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror)&#123;</span><br><span class="line">                System.out.println(<span class="keyword">this</span>.girlName+<span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror)&#123;</span><br><span class="line">                System.out.println(<span class="keyword">this</span>.girlName+<span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (lipstic)&#123;</span><br><span class="line">                System.out.println(<span class="keyword">this</span>.girlName+<span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>产生死锁的四个必要条件：</p><ul><li>互斥条件：一个资源每次只能被一个进程使用。</li><li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li><li>不剥夺条件：进程已获得的资源，在未使用完之前，不能强行剥夺。</li><li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</li></ul></li></ul><p><em>上面列出了死锁的四个必要条件，我们只要想办法破其中的任意一个或多个条件就可以避免死锁发生。</em></p><h3 id="Lock锁"><a href="#Lock锁" class="headerlink" title="Lock锁"></a>Lock锁</h3><ul><li>从JDK5.0开始，Java提供了更强大的线程同步机制—通过显式定义同步锁对象实现同步。同步锁使用Lock对象充当。</li><li><code>java.util.concurrent.locks.Lock</code>接口时控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次之恶能有一个线程对Lock对象加锁，线程开始访共享资源之前应先获得Lock对象。</li><li><code>ReentrantLock</code>类实现了Lock，它拥有与<code>synchronized</code>相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是<code>ReentrantLock</code>，可以显式加锁，释放锁。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/23 - 10:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试Lock锁</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLock</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestLock2 tk = <span class="keyword">new</span> TestLock2();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(tk).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(tk).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(tk).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestLock2</span> <span class="keyword">implements</span>  <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tickeN = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//定义lock锁</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                lock.lock();<span class="comment">//加锁</span></span><br><span class="line">                <span class="keyword">if</span>(tickeN&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(tickeN--);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                lock.unlock();<span class="comment">//解锁</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>synchronized与Lock的对比：</strong></p><ul><li>Lock是显式锁(手动开启和关闭锁，别忘记关闭所)synochronized是隐式锁，出了作用域自动释放。</li><li>Lock只有代码块锁，synchronized有代码块锁和方法锁。</li><li>使用Lock锁，JVM将花费较少的时间来调度线程，性能更好。并且具有更好的扩展性(提供更多的子类)。</li><li>优先使用顺序：<ul><li>Lock&gt;同步代码块(已经进入了方法体，分配了相应资源)&gt;同步方法(在方法体之外)。</li></ul></li></ul><h3 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h3><p><strong>线程通信：</strong></p><ul><li><p>应用场景：生产者和消费者问题：</p><ul><li><p>假设仓库中只能存放一件产品，生产者将生产出来的产品放入仓库，消费者将仓库中产品取走消费。</p></li><li><p>如果仓库中没有产品，则生产者将产品放入仓库，否则停止生产并等待，直到仓库中的产品被消费者取走为止。</p></li><li><p>如果仓库中放有产品，则消费者可以将产品取走消费，否则停止消费并等待，直到仓库中再次放入产品为止。</p><p><a href="https://imgtu.com/i/h959eg"><img src="https://z3.ax1x.com/2021/08/23/h959eg.png" alt="h959eg.png"></a></p></li></ul></li><li><p>Java提供了几个方法解决线程之间的通信问题。</p><table><thead><tr><th>方法名</th><th>作用</th></tr></thead><tbody><tr><td>wait()</td><td>表示线程一直等待，直到其他线程通知，与sleep不同，会释放锁</td></tr><tr><td>wait(long timeout)</td><td>指定等待的毫秒数</td></tr><tr><td>notify()</td><td>唤醒一个处于等待状态的线程</td></tr><tr><td>notifyAll()</td><td>唤醒同一个对象上所有调用wait()方法的线程，优先级别高的线程优先调度</td></tr></tbody></table></li><li><p>注意：均为Object类的方法，都只能在同步方法或者同步代码块中使用，否则会抛出异常<code>IIIegaIMonitorStateException</code>。</p></li></ul><p><strong>线程通信-分析：</strong></p><p>​    这是一个线程同步问题，生产者和消费者共享同一个资源，并且生产者和消费者之间相互依赖，互为条件。</p><ul><li>对于生产者，没有生产产品之前，要通知消费者等待，而生产了产品之后，又需要马上通知消费者消费。</li><li>对于消费者，在消费之后，要通知生产者已经结束消费，需要生产新的产品以供消费。</li><li>在生产者消费者问题中，仅有synchronized是不够的：<ul><li>synchronized可阻止并发更新同一个共享资源，实现了同步。</li><li>synchronized不能用来实现不同线程之间的消息传递(通信)。</li></ul></li></ul><p><strong>解决方式1：</strong></p><p>​    并发协作模型”生产者/消费者模式”-&gt;管程法</p><ul><li><p>生产者：负责生产数据的模块(可能是方法，对象，线程，进程)；</p></li><li><p>消费者：负责处理数据的模块(可能是方法，对象，线程，进程)；</p></li><li><p>缓冲区：消费者不能直接使用生产者的数据，它们之间有个”缓冲区”；</p><p>生产者将生产好的数据放入缓冲区，消费者从缓冲区拿出数据。</p></li></ul><p><strong>解决方式2：</strong></p><ul><li>并发协作模型”生产者/消费者模式”-&gt;信号灯法</li></ul><h3 id="管程法"><a href="#管程法" class="headerlink" title="管程法"></a>管程法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.thread;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/23 - 12:11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试：生产者消费者模型-&gt;利用缓冲区解决：管程法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPC</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Syncontainer con = <span class="keyword">new</span> Syncontainer();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Productor(con).start();</span><br><span class="line">        <span class="keyword">new</span> Consumer(con).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生产者</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Productor</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Syncontainer con;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Productor</span><span class="params">(Syncontainer con)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.con = con;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            con.push(<span class="keyword">new</span> Chicken(i));</span><br><span class="line">            System.out.println(<span class="string">&quot;生产了&quot;</span>+i+<span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Syncontainer con;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(Syncontainer con)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.con = con;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;消费了-&gt;&quot;</span>+con.pop().id+<span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产品</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chicken</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;<span class="comment">//产品编号</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Chicken</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//缓冲区</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Syncontainer</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要一个容器大小</span></span><br><span class="line">    Chicken[] chickens = <span class="keyword">new</span> Chicken[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//生产者放入产品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span>  <span class="keyword">void</span> <span class="title">push</span><span class="params">(Chicken chicken)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果容器满了，就需要等待消费者消费</span></span><br><span class="line">        <span class="keyword">if</span> (count == chickens.length) &#123;</span><br><span class="line">            <span class="comment">//通知消费者消费，生产者等待</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有满，我们就放入产品</span></span><br><span class="line">        chickens[count] = chicken;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">//可以通知消费者消费</span></span><br><span class="line">        <span class="keyword">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//消费者消费产品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Chicken <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断能否消费</span></span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//等待生产</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//消费</span></span><br><span class="line">        count--;</span><br><span class="line">        Chicken chicken = chickens[count];</span><br><span class="line">        <span class="comment">//通知生产者生产</span></span><br><span class="line">        <span class="keyword">this</span>.notifyAll();</span><br><span class="line">        <span class="keyword">return</span> chicken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="信号灯法"><a href="#信号灯法" class="headerlink" title="信号灯法"></a>信号灯法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.thread;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/23 - 12:38</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试生产者消费者问题，信号灯法，标志位解决</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPC2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TV tv = <span class="keyword">new</span> TV();</span><br><span class="line">        <span class="keyword">new</span> Player(tv).start();</span><br><span class="line">        <span class="keyword">new</span> Watcher(tv).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生产者--&gt;演员</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    TV tv = <span class="keyword">new</span> TV();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Player</span><span class="params">(TV tv)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv = tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.tv.play(<span class="string">&quot;是首相正在热播&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.tv.play(<span class="string">&quot;宫崎骏电影轮播&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者--&gt;观众</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Watcher</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    TV tv = <span class="keyword">new</span> TV();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Watcher</span><span class="params">(TV tv)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv = tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            tv.watch();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产品--&gt;节目</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TV</span> </span>&#123;</span><br><span class="line">    <span class="comment">//演员表演，观众等地啊</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//观众观看，演员等待</span></span><br><span class="line">    String voice;<span class="comment">//表演节目</span></span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//表演</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(String voice)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;演员表演了：&quot;</span> + voice);</span><br><span class="line">        <span class="comment">//通知观众观看</span></span><br><span class="line">        <span class="keyword">this</span>.notifyAll();<span class="comment">//通知唤醒</span></span><br><span class="line">        <span class="keyword">this</span>.voice = voice;</span><br><span class="line">        <span class="keyword">this</span>.flag = !<span class="keyword">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//观看</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">watch</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;观众观看了：&quot;</span>+voice);</span><br><span class="line">        <span class="comment">//通知演员表演</span></span><br><span class="line">        <span class="keyword">this</span>.notifyAll();</span><br><span class="line">        <span class="keyword">this</span>.flag=!<span class="keyword">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h3><p><strong>使用线程池：</strong></p><ul><li>背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程，对性能影响很大。</li><li>思路：提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。</li><li>好处：<ul><li>提高响应速度(减少了创建新线程的时间)</li><li>降低资源消耗(重复利用线程池中线程，不需要每次都创建)</li><li>便于线程管理(…)<ul><li>corePoolSize：核心池的大小；</li><li>maximumPoolSize：最大线程数；</li><li>keepAliveTime：线程没有任务时最多保持多长时间后会终止；</li></ul></li></ul></li></ul><p><strong>线程池总结：</strong></p><ul><li>JDK5.0开始提供了线程池相关API：<code>ExecutorService</code>和<code>Executors</code></li><li>ExecutorService：真正的线程池接口。常见子类<code>ThreadPoolExecutor</code><ul><li><code>void execute(Runnable command)</code>：执行任务/命令，没有返回值，一般用来执行<code>Runnable</code>；</li><li><code>&lt;T&gt;Future&lt;T&gt;submit(Callable&lt;T&gt;task)</code>：执行任务，有返回值，一般用来执行<code>Callable</code>;</li><li><code>void shutdown()</code>：关闭连接池；</li></ul></li><li>Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/23 - 13:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadNew</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyThread1().start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread2()).start();</span><br><span class="line"></span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> FutureTask&lt;Integer&gt;(<span class="keyword">new</span> MyThread3());</span><br><span class="line">        <span class="keyword">new</span> Thread(futureTask).start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Integer integer =futureTask.get();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.继承Thread类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyThread&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.实现Runnable接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyThread2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.实现Callable接口</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread3</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyThread3&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Java多线程】Java多线程(3)</title>
      <link href="/2021/08/22/javaMUL1_3/"/>
      <url>/2021/08/22/javaMUL1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java多线程讲解视频：<a href="https://www.bilibili.com/video/BV1V4411p7EF?p=15">【狂神说Java】多线程详解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="观测线程状态"><a href="#观测线程状态" class="headerlink" title="观测线程状态"></a>观测线程状态</h3><p><strong>Thread State：</strong></p><ul><li>NEW</li><li>RUNNABLE</li><li>BLOCKED</li><li>WAITING</li><li>TIMED_WAITING</li><li>TERMINATED</li></ul><p><a href="https://imgtu.com/i/fz7eo9"><img src="https://z3.ax1x.com/2021/08/22/fz7eo9.png" alt="fz7eo9.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 10:45</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试线程状态</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestState1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;////////&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//观察状态</span></span><br><span class="line">        Thread.State state = thread.getState();</span><br><span class="line">        System.out.println(state);<span class="comment">//new</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//观察启动后</span></span><br><span class="line">        thread.start();</span><br><span class="line">        state=thread.getState();</span><br><span class="line">        System.out.println(state);<span class="comment">//Run</span></span><br><span class="line">        <span class="comment">//只要不中止就一直输出状态</span></span><br><span class="line">        <span class="keyword">while</span>(state!=Thread.State.TERMINATED)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            state= thread.getState();</span><br><span class="line">            System.out.println(state);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//死亡后的线程不能在启动</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线程的优先级"><a href="#线程的优先级" class="headerlink" title="线程的优先级"></a>线程的优先级</h3><ul><li><p>Java提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程，线程调度器按照优先级据欸的那个应该调度哪个线程来执行。</p></li><li><p>线程的优先级用数字表示，范围从1~10：</p><ul><li>Thread.MIN_PRIORITY = 1;</li><li>Thread.MAX_PRIORITY = 10;</li><li>Thread.NORM_PRIORITY = 5;</li></ul></li><li><p>使用以下方式改变或获取优先级：</p><ul><li>getPriority().setPriority(int xx);</li></ul></li><li><p>优先级的设定建议在start()调度之前。</p></li><li><p>优先级低只意味着获得调度概率低，并不是优先级低就不会被调用，一切看CUP速度；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 10:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试线程优先级</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPriority</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPriority</span> <span class="keyword">implements</span>  <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//主线程默认优先级</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;&quot;</span>+Thread.currentThread().getPriority());</span><br><span class="line">        MyPriority myPriority = <span class="keyword">new</span> MyPriority();</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(myPriority);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(myPriority);</span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(myPriority);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.setPriority(<span class="number">1</span>);</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;&quot;</span>+Thread.currentThread().getPriority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h3><ul><li><p>线程分为用户线程和守护(daemon)线程；</p></li><li><p>虚拟机必须确保用户线程执行完毕；</p></li><li><p>虚拟机不用等待守护线程执行完毕；</p></li><li><p>如：后台记录,操作日志,监控内存,垃圾回收等待等…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 11:07</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试守护线程</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDaemon</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        God god = <span class="keyword">new</span> God();</span><br><span class="line">        You you = <span class="keyword">new</span> You();</span><br><span class="line"></span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(god);</span><br><span class="line">        thread.setDaemon(<span class="keyword">true</span>);<span class="comment">//默认是false</span></span><br><span class="line"></span><br><span class="line">        thread.start();<span class="comment">//上帝守护线程</span></span><br><span class="line">        <span class="keyword">new</span> Thread(you).start();<span class="comment">//you启动</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//god</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">God</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;上帝保佑着你&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//you</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">36500</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你一生都开心的活着&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;-========goodbye! world========--&quot;</span>);<span class="comment">//hello world</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="线程同步机制"><a href="#线程同步机制" class="headerlink" title="线程同步机制"></a>线程同步机制</h3><ul><li><p>并发：同一个对象被多个线程同时操作；</p><p><a href="https://imgtu.com/i/fzqMzq"><img src="https://z3.ax1x.com/2021/08/22/fzqMzq.png" alt="fzqMzq.png"></a></p></li></ul><p><strong>线程同步：</strong></p><ul><li>生活中我们会遇到”同一个资源，多个人想使用”的问题，比如食堂排队，买票排队，一个个来；</li><li>处理多线程问题时，多个线程访问同一个对象，并且某些线程还想修改这个对象；这是我们就需要线程同步。</li><li>线程同步其实就是一种等待机制，多个需要同时访问此对象的线程进入这个<strong>对象的等待池</strong>形成队列，等待前面线程使用完毕，下一个线程再使用。</li></ul><p><strong>队列和锁：</strong></p><p><a href="https://imgtu.com/i/fzxT00"><img src="https://z3.ax1x.com/2021/08/22/fzxT00.png" alt="fzxT00.png"></a></p><p><strong>线程同步：</strong></p><ul><li>由于同一进程的多个线程共享同一块存储空间，在带来方便的同时，也带来了访问冲突问题，为了保证数据在方法中被访问的正确性，在访问时加入<strong>锁机制(synchronized)</strong>,当一个线程获得对象的排它锁，独占资源，其他线程必须等待，使用后释放锁即可，存在以下问题：<ul><li>一个线程持有锁会导致其他需要此锁的线程挂起；</li><li>在多线程竞争下，加锁，释放锁会导致比较多的上下文切换和调度延时，引起性能问题；</li><li>如果一个优先级高的线程等待一个优先级低的线程释放锁，会导致优先级倒置，引起性能问题；</li></ul></li></ul><h3 id="三大不安全案例"><a href="#三大不安全案例" class="headerlink" title="三大不安全案例"></a>三大不安全案例</h3><ul><li><p>多人同时买票：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:07</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//不安全的买票</span></span><br><span class="line">    <span class="comment">//线程不安全，有复数，有重复</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeBuyTicket</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BuyTicket buyTicket = <span class="keyword">new</span> BuyTicket();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;小王&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;小李&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;黄牛&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuyTicket</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                buy();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">buy</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否有票</span></span><br><span class="line">        <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟延时</span></span><br><span class="line">        Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;拿到&quot;</span>+ticketNums--);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>多人同时取钱：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.midi.Soundbank;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:15</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//不安全的取钱</span></span><br><span class="line">    <span class="comment">//两个人同事去银行取一张卡里的钱</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeBank</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//账户</span></span><br><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="number">100</span>,<span class="string">&quot;结婚份子钱&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Drawing you = <span class="keyword">new</span> Drawing(account,<span class="number">50</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        Drawing wife = <span class="keyword">new</span> Drawing(account,<span class="number">100</span>,<span class="string">&quot;wife&quot;</span>);</span><br><span class="line"></span><br><span class="line">        you.start();</span><br><span class="line">        wife.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> money;<span class="comment">//余额</span></span><br><span class="line">    String name;<span class="comment">//卡号</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Account</span><span class="params">(<span class="keyword">int</span> money, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行:模拟取款</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drawing</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Account account;<span class="comment">//账户</span></span><br><span class="line">    <span class="keyword">int</span> drawingMoney;<span class="comment">//取乐的钱</span></span><br><span class="line">    <span class="keyword">int</span> nowMoney;<span class="comment">//剩余的钱</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Drawing</span><span class="params">(Account account, <span class="keyword">int</span> drawingMoney, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.account = account;</span><br><span class="line">        <span class="keyword">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//判断有没钱</span></span><br><span class="line">        <span class="keyword">if</span>(account.money-drawingMoney&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;的钱不够了&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟延时</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;账户余额：&quot;</span>+account.money);</span><br><span class="line">        <span class="comment">//卡内余额</span></span><br><span class="line">        account.money=account.money-drawingMoney;</span><br><span class="line">        <span class="comment">//手里的钱</span></span><br><span class="line">        nowMoney = nowMoney+drawingMoney;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.getName()+<span class="string">&quot;手里的余额：&quot;</span>+nowMoney);</span><br><span class="line">        System.out.println(<span class="string">&quot;账户余额：&quot;</span>+account.money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输出数据丢失：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:34</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                list.add(Thread.currentThread().getName());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="同步方法及同步块"><a href="#同步方法及同步块" class="headerlink" title="同步方法及同步块"></a>同步方法及同步块</h3><p><strong>同步方法：</strong></p><ul><li><p>由于我们可以通过<code>private</code>关键字来保证数据对象只能被方法访问，所以我们只需要针对方法提出一套机制，这套机制就是<code>synchronized</code>关键字，它包括两种用法：<code>synchronized</code>方法和<code>synchronized</code>块；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同步方法：<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(<span class="keyword">int</span> args)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>synchronized</code>方法控制对”对象”的访问，每个对象对应一把锁，每个<code>synchronized</code>方法都必须获得调用该方法的对象的锁才能执行，否则线程会阻塞，方法一旦执行，就独占该锁，后面被阻塞的线程才能获得这个锁，继续执行；</p><p><strong>缺陷：</strong>若将一个大的方法声明为<code>synchronized</code>将会影响效率；</p></li></ul><p><strong>解决买票问题：</strong>  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:07</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//不安全的买票</span></span><br><span class="line">    <span class="comment">//线程不安全，有复数，有重复</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeBuyTicket</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BuyTicket buyTicket = <span class="keyword">new</span> BuyTicket();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;小王&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;小李&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(buyTicket,<span class="string">&quot;黄牛&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuyTicket</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                buy();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//synchronize 同步方法，锁的时this</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">buy</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否有票</span></span><br><span class="line">        <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟延时</span></span><br><span class="line">        Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;拿到&quot;</span>+ticketNums--);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>同步方法弊端：</strong></p><ul><li><p>方法里需要修改的内容才需要锁，锁太多浪费资源。</p><p><a href="https://imgtu.com/i/hSih5t"><img src="https://z3.ax1x.com/2021/08/22/hSih5t.png" alt="hSih5t.png"></a></p></li></ul><p><strong>同步块：</strong></p><ul><li>同步块：<code>synchronized(Obj)&#123;&#125;</code></li><li>Obj称之为<strong>同步监视器</strong><ul><li><strong>Obj</strong>可以是任何对象，但是推荐使用共享资源作为同步监视器；</li><li>同步方法中无需指定同步监视器，因为同步方法的同步监视器就是<code>this</code>，就是这个对象本身，或者是<code>class</code>[反射中讲解]</li></ul></li><li>同步监视器的执行过程：<ul><li>第一个线程访问，锁定同步监视器，执行其中代码；</li><li>第二个线程访问，发现同步监视器被锁定，无法访问；</li><li>第一个线程访问完毕，解锁同步监视器；</li><li>第二个线程访问，发现同步监视器没有锁，然后锁定并访问；</li></ul></li></ul><p><strong>解决取钱和集合丢失问题：</strong></p><ul><li><p>解决取钱问题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:15</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//不安全的取钱</span></span><br><span class="line">    <span class="comment">//两个人同事去银行取一张卡里的钱</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeBank</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//账户</span></span><br><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="number">100</span>,<span class="string">&quot;结婚份子钱&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Drawing you = <span class="keyword">new</span> Drawing(account,<span class="number">50</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        Drawing wife = <span class="keyword">new</span> Drawing(account,<span class="number">100</span>,<span class="string">&quot;wife&quot;</span>);</span><br><span class="line"></span><br><span class="line">        you.start();</span><br><span class="line">        wife.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> money;<span class="comment">//余额</span></span><br><span class="line">    String name;<span class="comment">//卡号</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Account</span><span class="params">(<span class="keyword">int</span> money, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行:模拟取款</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drawing</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Account account;<span class="comment">//账户</span></span><br><span class="line">    <span class="keyword">int</span> drawingMoney;<span class="comment">//取乐的钱</span></span><br><span class="line">    <span class="keyword">int</span> nowMoney;<span class="comment">//剩余的钱</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Drawing</span><span class="params">(Account account, <span class="keyword">int</span> drawingMoney, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.account = account;</span><br><span class="line">        <span class="keyword">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这种synchronized无法锁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用synchronized块,锁变化的量</span></span><br><span class="line">        <span class="keyword">synchronized</span> (account)&#123;</span><br><span class="line">            <span class="comment">//判断有没钱</span></span><br><span class="line">            <span class="keyword">if</span>(account.money-drawingMoney&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">&quot;的钱不够了&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//模拟延时</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;账户余额：&quot;</span>+account.money);</span><br><span class="line">            <span class="comment">//卡内余额</span></span><br><span class="line">            account.money=account.money-drawingMoney;</span><br><span class="line">            <span class="comment">//手里的钱</span></span><br><span class="line">            nowMoney = nowMoney+drawingMoney;</span><br><span class="line">            System.out.println(<span class="keyword">this</span>.getName()+<span class="string">&quot;手里的余额：&quot;</span>+nowMoney);</span><br><span class="line">            System.out.println(<span class="string">&quot;账户余额：&quot;</span>+account.money);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数据丢失问题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 12:34</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnsafeList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">              <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                  list.add(Thread.currentThread().getName());</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="ConpyOnWriteArrayList"><a href="#ConpyOnWriteArrayList" class="headerlink" title="ConpyOnWriteArrayList"></a>ConpyOnWriteArrayList</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/22 - 13:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试JUC安全类型的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJUC</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CopyOnWriteArrayList&lt;String&gt; clist = <span class="keyword">new</span> CopyOnWriteArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                clist.add(Thread.currentThread().getName());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(clist.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Java多线程】Java多线程(2)</title>
      <link href="/2021/08/21/javaMUL1_2/"/>
      <url>/2021/08/21/javaMUL1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java多线程讲解视频：<a href="https://www.bilibili.com/video/BV1V4411p7EF?p=8">【狂神说Java】多线程详解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="实现Callable接口-仅作了解"><a href="#实现Callable接口-仅作了解" class="headerlink" title="实现Callable接口(仅作了解)"></a>实现Callable接口(仅作了解)</h3><ol><li>实现Callable接口，需要返回值类型；</li><li>重写call方法，需要抛出异常；</li><li>创建目标对象；</li><li>创建执行服务：<code>ExecutorService service = Executors.newFixedThreadPool(创建线程数量);</code></li><li>提交执行：<code>Future&lt;Boolean&gt; result1 = service.submit(t1);</code></li><li>获取结果：<code>boolean r1 = result1.get();</code></li><li>关闭服务：<code>service.shutdownNow();</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jokerdig.demo1.TestThread2;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 11:18</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//线程创建方式三：实现Callable</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;<span class="comment">//网路地址</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//文件名</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestCallable</span><span class="params">(String url, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        WebDownloader webDownloader = <span class="keyword">new</span> WebDownloader();</span><br><span class="line">        webDownloader.downloader(url, name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件名为：&quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        TestCallable t1 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>, <span class="string">&quot;autor.png&quot;</span>);</span><br><span class="line">        TestCallable t2 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>, <span class="string">&quot;autor1.png&quot;</span>);</span><br><span class="line">        TestCallable t3 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>, <span class="string">&quot;autor2.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//  1. 创建执行服务：</span></span><br><span class="line">        ExecutorService service = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line">      <span class="comment">//  2. 提交执行：</span></span><br><span class="line">        Future&lt;Boolean&gt; result1 = service.submit(t1);</span><br><span class="line">        Future&lt;Boolean&gt; result2 = service.submit(t2);</span><br><span class="line">        Future&lt;Boolean&gt; result3 = service.submit(t3);</span><br><span class="line">      <span class="comment">//  3. 获取结果：</span></span><br><span class="line">        <span class="keyword">boolean</span> r1 = result1.get();</span><br><span class="line">        <span class="keyword">boolean</span> r2 = result2.get();</span><br><span class="line">        <span class="keyword">boolean</span> r3 = result3.get();</span><br><span class="line">       <span class="comment">// 4. 关闭服务：</span></span><br><span class="line">        service.shutdownNow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebDownloader</span></span>&#123;</span><br><span class="line">    <span class="comment">//下载方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloader</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常,downloader异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态代理模式"><a href="#静态代理模式" class="headerlink" title="静态代理模式"></a>静态代理模式</h3><p><strong>静态代理：(以结婚举例)</strong></p><ul><li>你：真实角色</li><li>婚庆公司：代理你，帮你处理结婚事务</li><li>结婚：实现结婚接口即可</li></ul><p><strong>总结：</strong></p><ul><li>真是对象和代理对象都要实现同一接口；</li><li>代理对象要代理真实角色；</li></ul><p><strong>好处：</strong></p><ul><li><p>代理对象可以做很多真实对象做不了的事情；</p></li><li><p>真实对象专注做自己的事情；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 11:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WeddingCompany weddingCompany = <span class="keyword">new</span> WeddingCompany(<span class="keyword">new</span> You());</span><br><span class="line">        weddingCompany.HappyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结婚接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//你实现结婚的接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="keyword">implements</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自己</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;小王开心的结婚&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//婚庆公司</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeddingCompany</span> <span class="keyword">implements</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">WeddingCompany</span><span class="params">(Marry target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//代理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        before();</span><br><span class="line">        <span class="keyword">this</span>.target.HappyMarry();</span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//结婚前</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//结婚后</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h3><ul><li><p>λ希腊字母表中排序第十一位的字母，英语名称为Lambda；</p></li><li><p>避免匿名内部类定义过多；</p></li><li><p>其实质属于函数式编程的概念；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(params) -&gt; expression[表达式]</span><br><span class="line">(params) -&gt; statement[语句]</span><br><span class="line">(params) -&gt; expression[表达式]</span><br></pre></td></tr></table></figure><p><code>a-&gt; System.out.println(&quot;it&#39;s is lambda&quot;+a);</code></p><p><code>new Thread(()-&gt;System.out.println(&quot;多线程学习&quot;)).start();</code></p></li><li><p>为什么要使用lambda表达式</p><ul><li>避免匿名内部类定义过到；</li><li>让代码看起来更简介；</li><li>去掉大量无意义代码，只留下核心的逻辑；</li></ul></li><li><p>也去你会说，我看了Lambda表达式，反而觉得更乱了，看不懂了。多用就能习惯了;</p></li></ul><ul><li><p>理解Functional Interface(函数式接口)是学习Java8 lambda表达式的关键所在;</p></li><li><p>函数时接口的定义：</p><ul><li><p>任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对于函数式接口，我们可以通过lambda表达式来创建该接口的对象;</p></li></ul></li><li><p>简化过程代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lambda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 12:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//lambda表达式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line">    <span class="comment">//3.静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Like2</span> <span class="keyword">implements</span> <span class="title">Likes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like lambda2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Likes like = <span class="keyword">new</span> Like();</span><br><span class="line">        like.lambda();</span><br><span class="line">        like = <span class="keyword">new</span> Like2();</span><br><span class="line">        like.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.局部内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Like3</span> <span class="keyword">implements</span> <span class="title">Likes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lambda3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用</span></span><br><span class="line">        <span class="keyword">new</span> Like3().lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.匿名内部类</span></span><br><span class="line">        like = <span class="keyword">new</span> Likes()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lambda4&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lambda();</span><br><span class="line">        <span class="comment">//6.用lambda简化</span></span><br><span class="line">        like = ()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like Lambda5&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lambda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.定义一个函数式接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Likes</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.实现类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">Likes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;I like lambda&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Lambda简化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lambda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 13:14</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//lambda表达式简化</span></span><br><span class="line">       ILove love =(<span class="keyword">int</span> a)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you&quot;</span>+a);</span><br><span class="line">        &#125;;</span><br><span class="line">        love.love(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//1.简化参数类型</span></span><br><span class="line">        love =(a)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you&quot;</span>+a);</span><br><span class="line">        &#125;;</span><br><span class="line">        love.love(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//2.简化括号</span></span><br><span class="line">        love = a -&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you&quot;</span>+a);</span><br><span class="line">        &#125;;</span><br><span class="line">        love.love(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//3.简化大括号</span></span><br><span class="line">        love = a -&gt; System.out.println(<span class="string">&quot;I love you&quot;</span>+a);;</span><br><span class="line">        love.love(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span>  <span class="title">ILove</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">love</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>总结：</strong></p><ul><li>lambda表达式只有一行代码的情况下才能简化成一行的形式，如果有多行，那么就用代码块包裹。</li><li>前提是接口位函数式接口。</li><li>多个参数也可以去掉参数类型，要去掉必须加括号。</li></ul><h3 id="线程停止"><a href="#线程停止" class="headerlink" title="线程停止"></a>线程停止</h3><p><strong>线程状态：</strong></p><p>​    <a href="https://imgtu.com/i/fv8A2j"><img src="https://z3.ax1x.com/2021/08/21/fv8A2j.png" alt="fv8A2j.png"></a></p><p>​    <a href="https://imgtu.com/i/fv85WQ"><img src="https://z3.ax1x.com/2021/08/21/fv85WQ.md.png" alt="fv85WQ.md.png"></a></p><p><strong>线程方法：</strong></p><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">setPriority(int newPriority)</td><td align="center">更改线程的优先级</td></tr><tr><td align="center">static void sleep(long millis)</td><td align="center">在指定的毫秒数内让当前正在执行的线程休眠</td></tr><tr><td align="center">void join()</td><td align="center">等待该线程终止</td></tr><tr><td align="center">static void yield()</td><td align="center">暂停当前正在执行的线程对象，并执行其他前程</td></tr><tr><td align="center">void interrupt()</td><td align="center">中断线程，尽量不使用该方法</td></tr><tr><td align="center">boolean isAlive()</td><td align="center">测试线程是否处于活动状态</td></tr></tbody></table><p><strong>停止线程：</strong></p><ul><li><p>不推荐使用JDK提懂得stop(),destroy()方法。(已废弃)</p></li><li><p>推荐线程自己停止下来。</p></li><li><p>建议使用一个标志位进行终止变量，当flag=false,则终止线程运行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 13:48</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试stop</span></span><br><span class="line">    <span class="comment">//1.建议线程正常停止</span></span><br><span class="line">    <span class="comment">//2.建议使用标志位</span></span><br><span class="line">    <span class="comment">//3.不要使用stop或者destroy等过时方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStop</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置标志位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run...Thread&quot;</span>+i++);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置一个公开的方法停止线程，转换标志位</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestStop testStop = <span class="keyword">new</span> TestStop();</span><br><span class="line">        <span class="keyword">new</span> Thread(testStop).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run&quot;</span>+i);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">900</span>)&#123;</span><br><span class="line">                testStop.stop();</span><br><span class="line">                System.out.println(i+<span class="string">&quot;停止线程&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="线程休眠sleep"><a href="#线程休眠sleep" class="headerlink" title="线程休眠sleep"></a>线程休眠sleep</h3><p><strong>线程休眠：</strong></p><ul><li>sleep(时间)指定当前线程阻塞的毫秒数；</li><li>sleep存在异常interruptedException；</li><li>sleep时间达到后线程进入就绪状态；</li><li>sleep可以模拟网络延时，倒计时等；</li><li>每一个对象都有一个锁，sleep不会释放锁；</li></ul><p><strong>模拟倒计时：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 14:02</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//模拟倒计时</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSleep2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//模拟倒计时</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tenDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印当前系统时间</span></span><br><span class="line">        Date startTime = <span class="keyword">new</span> Date(System.currentTimeMillis());<span class="comment">//获得当前时间</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                System.out.println(<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class="line">                startTime = <span class="keyword">new</span> Date(System.currentTimeMillis());<span class="comment">//更新时间</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//模拟倒计时</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tenDown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num =<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            System.out.println(num--);</span><br><span class="line">            <span class="keyword">if</span>(num&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;时间结束&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线程礼让yield"><a href="#线程礼让yield" class="headerlink" title="线程礼让yield"></a>线程礼让yield</h3><p><strong>线程礼让：</strong></p><ul><li><p>礼让线程，让当前正在执行的线程暂停，但不阻塞；</p></li><li><p>将线程从运行状态转为就绪状态；</p></li><li><p><strong>让CPU重新调度，礼让不一定成功！</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 14:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//礼让线程，不一定成功</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestYield</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyYield myYield = <span class="keyword">new</span> MyYield();</span><br><span class="line">        <span class="keyword">new</span> Thread(myYield,<span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(myYield,<span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyYield</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">        Thread.yield();<span class="comment">//礼让</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="线程强制执行join"><a href="#线程强制执行join" class="headerlink" title="线程强制执行join"></a>线程强制执行join</h3><ul><li><p>Join合并线程，待此线程执行完成后，再执行其他线程，其他线程阻塞；</p></li><li><p>可以想象成插队；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/21 - 14:23</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//测试Join方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJoin</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        TestJoin testJoin = <span class="keyword">new</span> TestJoin();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(testJoin);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">100</span>)&#123;</span><br><span class="line">               <span class="comment">//start放这里防止vip线程提前同普通线程一起启动</span></span><br><span class="line">                thread.start();</span><br><span class="line">                thread.join();<span class="comment">//插队</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;普通线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//插队</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程vip来了&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Java多线程】Java多线程(1)</title>
      <link href="/2021/08/20/javaMUL1_1/"/>
      <url>/2021/08/20/javaMUL1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java多线程讲解视频：<a href="https://www.bilibili.com/video/BV1V4411p7EF?p=1">【狂神说Java】多线程详解_哔哩哔哩_bilibili</a></p></blockquote><h3 id="多线程概述"><a href="#多线程概述" class="headerlink" title="多线程概述"></a>多线程概述</h3><p><strong>讲解大纲：</strong></p><ul><li>线程简介</li><li><strong>线程实现</strong></li><li>线程状态</li><li><strong>线程同步</strong></li><li>线程通信问题</li><li>高级主题</li></ul><h3 id="线程、进程、多线程"><a href="#线程、进程、多线程" class="headerlink" title="线程、进程、多线程"></a>线程、进程、多线程</h3><p><strong>多任务：</strong></p><ul><li>边吃饭边玩手机等，现实中太多这样同时做多件事情的例子了，看起来是多个人物都在做，其实本质上我们的大脑在同一时间依旧只做了一件事情。</li></ul><p><strong>多线程：</strong></p><ul><li>原来是一条路，慢慢因为车太多了，道路阻塞，效率极低。</li><li>为了提高使用的效率，能够充分利用道路，于是加了多个车道。</li><li>网络游戏，编程等等</li></ul><p><strong>普通方法调用和多线程：</strong></p><p><img src="https://z3.ax1x.com/2021/08/20/fXQ1c6.png" alt="fXQ1c6.png"></p><p><strong>程序、进程、线程：</strong></p><p><a href="https://imgtu.com/i/fXQ5vV"><img src="https://z3.ax1x.com/2021/08/20/fXQ5vV.png" alt="fXQ5vV.png"></a></p><p><strong>Process与Thread：</strong></p><ul><li>说起进程，就不得不说程序。程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个静态的概念。</li><li>而进程则是执行程序的一次执行过程，它是一个动态概念。是系统资源分配的单位。</li><li>通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程是CPU调度和执行的单位。</li><li>注意：很多多线程是模拟出来的，真正的多线程是指有多个CPU，即多核，如服务器。如果是模拟出来的多线程，即在一个CPU的情况下，在同一个时间点，CPU只能执行一个代码，因为切换的很快，所以就有同时执行的错觉。</li></ul><p><strong>本章核心概念：</strong></p><ul><li>线程就是独立的执行路径；</li><li>在程序运行时，即使没有自己创建线程，后台也会有多个线程，如主线程，gc线程；</li><li><code>main()</code>称之为主线程，为系统的入口，用于执行整个程序；</li><li>在一个进程中，如果开辟了多个线程，现成的运行由调度器安排调度，调度器是与操作系统紧密相关的，先后顺序是不能人为干预的;</li><li>对同一份资源操作时，会存在资源抢夺的问题，需要加入并发通知；</li><li>线程会带来额外的开销，如CPU调度事件，并发通知开销；</li><li>每个线程在自己的工作内存交互，内存控制不当会造成数据不一致。</li></ul><h3 id="继承Thread类"><a href="#继承Thread类" class="headerlink" title="继承Thread类"></a>继承Thread类</h3><p><strong>线程三种创建方式：</strong></p><p><a href="https://imgtu.com/i/fX80Ig"><img src="https://z3.ax1x.com/2021/08/20/fX80Ig.png" alt="fX80Ig.png"></a></p><p><strong>Thread类：(多查看JDK帮助文档)</strong></p><ul><li><p>自定义线程继承Thread类</p></li><li><p>重写<code>run()</code>方法，编写线程执行体</p></li><li><p>new当前类，直接调用<code>start()</code>方法启动线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/20 - 18:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//创建线程方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//run方法</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;在看代码&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//main方法</span></span><br><span class="line">        TestThread1 testThread1 = <span class="keyword">new</span> TestThread1();</span><br><span class="line">        <span class="comment">//调用start()方法i</span></span><br><span class="line">        testThread1.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;学习多线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>总结：</p><ul><li>注意，线程开启不一定立即执行，由CPU调度执行。</li></ul><h3 id="网图下载"><a href="#网图下载" class="headerlink" title="网图下载"></a>网图下载</h3><p><strong>下载图片：</strong></p><p><a href="https://imgtu.com/i/fXNsKA"><img src="https://z3.ax1x.com/2021/08/20/fXNsKA.png" alt="fXNsKA.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/20 - 18:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//练习Thread,实现多线程同步图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;<span class="comment">//网路地址</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//文件名</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestThread2</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下载图片线程执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        WebDownloader webDownloader = <span class="keyword">new</span> WebDownloader();</span><br><span class="line">        webDownloader.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件名为：&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread2 testThread2 = <span class="keyword">new</span> TestThread2(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>,<span class="string">&quot;autor.png&quot;</span>);</span><br><span class="line">        TestThread2 testThread2_1 = <span class="keyword">new</span> TestThread2(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>,<span class="string">&quot;autor1.png&quot;</span>);</span><br><span class="line">        TestThread2 testThread2_2 = <span class="keyword">new</span> TestThread2(<span class="string">&quot;https://cdn.jsdelivr.net/gh/JokerDaxiong/JokerDaxiong.github.io@main/images/avatar.png&quot;</span>,<span class="string">&quot;autor2.png&quot;</span>);</span><br><span class="line">        testThread2.start();</span><br><span class="line">        testThread2_1.start();</span><br><span class="line">        testThread2_2.start();</span><br><span class="line">        <span class="comment">//并不是按顺序依次下载,是同时执行</span></span><br><span class="line">        <span class="comment">/*下载顺序：</span></span><br><span class="line"><span class="comment">         下载文件名为：autor2.png</span></span><br><span class="line"><span class="comment">         下载文件名为：autor.png</span></span><br><span class="line"><span class="comment">         下载文件名为：autor1.png</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebDownloader</span></span>&#123;</span><br><span class="line">    <span class="comment">//下载方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloader</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常,downloader异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现Runnable接口"><a href="#实现Runnable接口" class="headerlink" title="实现Runnable接口"></a>实现Runnable接口</h3><ul><li><p>定义MyRunnable类实现Runnable接口</p></li><li><p>重写<code>run()</code>方法，编写线程执行体</p></li><li><p>创建线程对象，调用<code>start()</code>方法启动线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/20 - 19:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//创建线程方式2：实现runnable接口，重写run方法，执行线程丢入runnable接口实现类，调用start方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread3</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//重写run方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//run方法</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;在看代码&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//main方法</span></span><br><span class="line">        TestThread3 testThread3 = <span class="keyword">new</span> TestThread3();</span><br><span class="line">        <span class="comment">//创建线程对象，来开启start</span></span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(testThread3);</span><br><span class="line">        <span class="comment">//调用start()方法i</span></span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;学习多线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>小结：</strong></p><ul><li>继承Thread类<ul><li>子类继承Thread类具备多线程额能力；</li><li>启动线程：子类对象.<code>start()</code>;</li><li><strong>不建议使用：避免OOP单继承局限性；</strong></li></ul></li><li>实现Runnable接口<ul><li>实现接口Runnable具有多线程能力；</li><li>启动线程：传入目标对象+Thread对象.<code>start()</code>;</li><li><strong>推荐使用：避免单继承局限性，灵活方便，便于同一个对象被多个线程使用；</strong></li></ul></li></ul><h3 id="初始并发问题"><a href="#初始并发问题" class="headerlink" title="初始并发问题"></a>初始并发问题</h3><ul><li><p>买火车票；</p></li><li><p>发现问题：多个线程操作同一个资源，线程不安全，数据紊乱(并发问题)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/20 - 19:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//多个线程同时操作一个独享</span></span><br><span class="line">    <span class="comment">//买火车票例子</span></span><br><span class="line">    <span class="comment">//发现问题：多个线程操作同一个资源，线程不安全，数据紊乱(并发问题)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//票数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//没有票，退出</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">300</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot; 拿到了第&quot;</span>+ticketNums+<span class="string">&quot; 票&quot;</span>);</span><br><span class="line">            ticketNums--;<span class="comment">//售出票后减少</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread4 ticket = <span class="keyword">new</span> TestThread4();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">&quot;张三&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">&quot;李四&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="龟兔赛跑"><a href="#龟兔赛跑" class="headerlink" title="龟兔赛跑"></a>龟兔赛跑</h3><p><strong>龟兔赛跑-Race：</strong></p><ul><li>首先来个赛道距离，然后要离终点越来越近；</li><li>判断比赛是否结束；</li><li>打印出胜利者；</li><li>龟兔赛跑开始；</li><li>故事中是乌龟赢，兔子需要睡觉，我们来模拟兔子睡觉；</li><li>终于，乌龟赢得比赛；</li></ul><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.demo1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/20 - 19:51</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//模拟龟兔赛跑</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Race</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//胜利者</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//模拟兔子睡觉</span></span><br><span class="line">            <span class="keyword">if</span>(Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>) &amp;&amp; i%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//判断比赛是否结束</span></span><br><span class="line">                <span class="keyword">boolean</span> flag = gameOver(i);</span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;跑了&quot;</span>+i+<span class="string">&quot;步&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否完成比赛</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">gameOver</span><span class="params">(<span class="keyword">int</span> steps)</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断是否有胜利者</span></span><br><span class="line">        <span class="keyword">if</span>(winner!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;&#123;</span><br><span class="line">            <span class="keyword">if</span>(steps &gt;=<span class="number">100</span>)&#123;</span><br><span class="line">                winner = Thread.currentThread().getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;winner is&quot;</span>+winner);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Race race = <span class="keyword">new</span> Race();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">&quot;兔子&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">&quot;乌龟&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaGUI】JavaGUI入门到小游戏实战(4)</title>
      <link href="/2021/08/19/javaGUI1_4/"/>
      <url>/2021/08/19/javaGUI1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaGUI入门视频：<a href="https://www.bilibili.com/video/BV1DJ411B75F?p=21">【狂神说Java】GUI编程入门到游戏实战_哔哩哔哩_bilibili</a></p><p>JavaGUI笔记代码下载地址：</p><p>蓝奏云：<a href="https://jokerdig.lanzoui.com/iavjlsuqtha">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1noxtZITuZFAZDDrz0J1Weg">下载地址</a> 提取码：fxcj</p></blockquote><h3 id="贪吃蛇界面绘制"><a href="#贪吃蛇界面绘制" class="headerlink" title="贪吃蛇界面绘制"></a>贪吃蛇界面绘制</h3><ul><li><p>StartGame类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏主启动类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;贪吃蛇-jokerdig.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        frame.setResizable(<span class="keyword">false</span>);<span class="comment">//窗口大小不可变</span></span><br><span class="line">        frame.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">900</span>,<span class="number">725</span>);</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);<span class="comment">//显示界面</span></span><br><span class="line">        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); <span class="comment">//可关闭</span></span><br><span class="line">        <span class="comment">//内容在面板中</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> GamePanel());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>GmaePanel类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Data类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:45</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//数据中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</span><br><span class="line">    <span class="comment">//相对路径：xx.jpg</span></span><br><span class="line">    <span class="comment">//绝对路径：/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL headerURL = Data.class.getResource(<span class="string">&quot;static/header.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL upURL = Data.class.getResource(<span class="string">&quot;static/up.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL downURL = Data.class.getResource(<span class="string">&quot;static/down.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL leftURL = Data.class.getResource(<span class="string">&quot;static/left.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL rightURL = Data.class.getResource(<span class="string">&quot;static/right.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL bodyURL = Data.class.getResource(<span class="string">&quot;static/body.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> URL foodURL = Data.class.getResource(<span class="string">&quot;static/food.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon header = <span class="keyword">new</span> ImageIcon(headerURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon up = <span class="keyword">new</span> ImageIcon(upURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon down = <span class="keyword">new</span> ImageIcon(downURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon left = <span class="keyword">new</span> ImageIcon(leftURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon right = <span class="keyword">new</span> ImageIcon(rightURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon body = <span class="keyword">new</span> ImageIcon(bodyURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageIcon food = <span class="keyword">new</span> ImageIcon(foodURL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="绘制静态的小蛇"><a href="#绘制静态的小蛇" class="headerlink" title="绘制静态的小蛇"></a>绘制静态的小蛇</h3><ul><li><p>GamePanel类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//🐍长度</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeX = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">600</span>];<span class="comment">//蛇的X坐标</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeY = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">500</span>];<span class="comment">//蛇的Y坐标</span></span><br><span class="line">    <span class="comment">//方向</span></span><br><span class="line">    String direction;<span class="comment">//初始方向向右</span></span><br><span class="line">    <span class="comment">//游戏当前的状态:开始，停止</span></span><br><span class="line">    <span class="keyword">boolean</span> isStart = <span class="keyword">false</span>;<span class="comment">//默认不开始</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        length=<span class="number">3</span>;</span><br><span class="line">        snakeX[<span class="number">0</span>]=<span class="number">100</span>; snakeY[<span class="number">0</span>]=<span class="number">100</span>;<span class="comment">//头坐标</span></span><br><span class="line">        snakeX[<span class="number">1</span>]=<span class="number">75</span>; snakeY[<span class="number">1</span>]=<span class="number">100</span>;<span class="comment">//第一个身体坐标</span></span><br><span class="line">        snakeX[<span class="number">2</span>]=<span class="number">50</span>; snakeY[<span class="number">2</span>]=<span class="number">100</span>;<span class="comment">//第二个身体坐标</span></span><br><span class="line">        direction =<span class="string">&quot;R&quot;</span>;<span class="comment">//初始方向向右</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">//把小蛇画上去,通过方向来判断</span></span><br><span class="line">        <span class="keyword">if</span>(direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            Data.right.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//头初始化向右</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            Data.left.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向左</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            Data.up.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向上</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            Data.down.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//身体坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">            Data.body.paintIcon(<span class="keyword">this</span>,g,snakeX[i],snakeY[i]);<span class="comment">//身体坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span>(isStart==<span class="keyword">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">40</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="让小蛇动起来"><a href="#让小蛇动起来" class="headerlink" title="让小蛇动起来"></a>让小蛇动起来</h3><ul><li><p>GamePanel类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line">    <span class="comment">//实现 KeyListener 接口,重写接口方法</span></span><br><span class="line">    <span class="comment">//实现 ActionListener(定时器)接口,重写接口方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//🐍长度</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeX = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">600</span>];<span class="comment">//蛇的X坐标</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeY = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">500</span>];<span class="comment">//蛇的Y坐标</span></span><br><span class="line">    <span class="comment">//方向</span></span><br><span class="line">    String direction;<span class="comment">//初始方向向右</span></span><br><span class="line">    <span class="comment">//游戏当前的状态:开始，停止</span></span><br><span class="line">    <span class="keyword">boolean</span> isStart = <span class="keyword">false</span>;<span class="comment">//默认不开始</span></span><br><span class="line">    <span class="comment">//定时器,300ms = 1s执行一次</span></span><br><span class="line">    Timer timer=<span class="keyword">new</span> Timer(<span class="number">300</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">//获得焦点和键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获得键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//游戏开始</span></span><br><span class="line">        timer.start();<span class="comment">//定时器开启</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        length=<span class="number">3</span>;</span><br><span class="line">        snakeX[<span class="number">0</span>]=<span class="number">100</span>; snakeY[<span class="number">0</span>]=<span class="number">100</span>;<span class="comment">//头坐标</span></span><br><span class="line">        snakeX[<span class="number">1</span>]=<span class="number">75</span>; snakeY[<span class="number">1</span>]=<span class="number">100</span>;<span class="comment">//第一个身体坐标</span></span><br><span class="line">        snakeX[<span class="number">2</span>]=<span class="number">50</span>; snakeY[<span class="number">2</span>]=<span class="number">100</span>;<span class="comment">//第二个身体坐标</span></span><br><span class="line">        direction =<span class="string">&quot;R&quot;</span>;<span class="comment">//初始方向向右</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">//把小蛇画上去,通过方向来判断</span></span><br><span class="line">        <span class="keyword">if</span>(direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            Data.right.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//头初始化向右</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            Data.left.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向左</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            Data.up.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向上</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            Data.down.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//身体坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">            Data.body.paintIcon(<span class="keyword">this</span>,g,snakeX[i],snakeY[i]);<span class="comment">//身体坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span>(isStart==<span class="keyword">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">40</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//键盘监听事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> keyCode = e.getKeyCode();<span class="comment">//获得键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.VK_SPACE)&#123;</span><br><span class="line">            isStart = !isStart;<span class="comment">//取反</span></span><br><span class="line">            repaint();<span class="comment">//重新绘制</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定时器监听</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isStart)&#123;  <span class="comment">//如果游戏开始,就让小蛇动起来</span></span><br><span class="line">            <span class="comment">//右移</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">1</span>; i &gt;<span class="number">0</span> ; i--) &#123;</span><br><span class="line">                <span class="comment">//移动，后一截移动到前一截</span></span><br><span class="line">                snakeX[i]= snakeX[i-<span class="number">1</span>];</span><br><span class="line">                snakeY[i]= snakeY[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            snakeX[<span class="number">0</span>]=snakeX[<span class="number">0</span>]+<span class="number">25</span>;</span><br><span class="line">            <span class="comment">//边界判断</span></span><br><span class="line">            <span class="keyword">if</span>(snakeX[<span class="number">0</span>]&gt;<span class="number">850</span>)&#123;</span><br><span class="line">                snakeX[<span class="number">0</span>]=<span class="number">25</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            repaint();<span class="comment">//重绘</span></span><br><span class="line">        &#125;</span><br><span class="line">        timer.start();<span class="comment">//定时器开始</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="键盘控制小蛇移动"><a href="#键盘控制小蛇移动" class="headerlink" title="键盘控制小蛇移动"></a>键盘控制小蛇移动</h3><ul><li><p>GamePanel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line">    <span class="comment">//实现 KeyListener 接口,重写接口方法</span></span><br><span class="line">    <span class="comment">//实现 ActionListener(定时器)接口,重写接口方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//🐍长度</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeX = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">600</span>];<span class="comment">//蛇的X坐标</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeY = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">500</span>];<span class="comment">//蛇的Y坐标</span></span><br><span class="line">    <span class="comment">//方向</span></span><br><span class="line">    String direction;<span class="comment">//初始方向向右</span></span><br><span class="line">    <span class="comment">//游戏当前的状态:开始，停止</span></span><br><span class="line">    <span class="keyword">boolean</span> isStart = <span class="keyword">false</span>;<span class="comment">//默认不开始</span></span><br><span class="line">    <span class="comment">//定时器,300ms = 1s执行一次</span></span><br><span class="line">    Timer timer=<span class="keyword">new</span> Timer(<span class="number">300</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">//获得焦点和键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获得键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//游戏开始</span></span><br><span class="line">        timer.start();<span class="comment">//定时器开启</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        length=<span class="number">3</span>;</span><br><span class="line">        snakeX[<span class="number">0</span>]=<span class="number">100</span>; snakeY[<span class="number">0</span>]=<span class="number">100</span>;<span class="comment">//头坐标</span></span><br><span class="line">        snakeX[<span class="number">1</span>]=<span class="number">75</span>; snakeY[<span class="number">1</span>]=<span class="number">100</span>;<span class="comment">//第一个身体坐标</span></span><br><span class="line">        snakeX[<span class="number">2</span>]=<span class="number">50</span>; snakeY[<span class="number">2</span>]=<span class="number">100</span>;<span class="comment">//第二个身体坐标</span></span><br><span class="line">        direction =<span class="string">&quot;R&quot;</span>;<span class="comment">//初始方向向右</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">//把小蛇画上去,通过方向来判断</span></span><br><span class="line">        <span class="keyword">if</span>(direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            Data.right.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//头初始化向右</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            Data.left.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向左</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            Data.up.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向上</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            Data.down.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//身体坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">            Data.body.paintIcon(<span class="keyword">this</span>,g,snakeX[i],snakeY[i]);<span class="comment">//身体坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span>(isStart==<span class="keyword">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">40</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//键盘监听事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> keyCode = e.getKeyCode();<span class="comment">//获得键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.VK_SPACE)&#123;</span><br><span class="line">            isStart = !isStart;<span class="comment">//取反</span></span><br><span class="line">            repaint();<span class="comment">//重新绘制</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//控制小蛇上下左右移动,且小蛇不能直接回头</span></span><br><span class="line">        <span class="keyword">if</span>((keyCode == KeyEvent.VK_UP||keyCode == KeyEvent.VK_W)&amp;&amp;!direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;U&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_DOWN||keyCode == KeyEvent.VK_S)&amp;&amp;!direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;D&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_LEFT||keyCode == KeyEvent.VK_A)&amp;&amp;!direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;L&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_RIGHT||keyCode == KeyEvent.VK_D)&amp;&amp;!direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;R&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定时器监听</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isStart) &#123;  <span class="comment">//如果游戏开始,就让小蛇动起来</span></span><br><span class="line">            <span class="comment">//身体移动</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="comment">//移动，后一截移动到前一截</span></span><br><span class="line">                snakeX[i] = snakeX[i - <span class="number">1</span>];</span><br><span class="line">                snakeY[i] = snakeY[i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//头控制身体移动</span></span><br><span class="line">            <span class="keyword">if</span> (direction.equals(<span class="string">&quot;R&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &gt; <span class="number">850</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">25</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;L&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &lt; <span class="number">25</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">850</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;U&quot;</span>)) &#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &lt; <span class="number">75</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">650</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &gt; <span class="number">650</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">75</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            repaint();<span class="comment">//重绘</span></span><br><span class="line">        &#125;</span><br><span class="line">        timer.start();<span class="comment">//定时器开始</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="小蛇吃食物长大"><a href="#小蛇吃食物长大" class="headerlink" title="小蛇吃食物长大"></a>小蛇吃食物长大</h3><ul><li><p>GamePanel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line">    <span class="comment">//实现 KeyListener 接口,重写接口方法</span></span><br><span class="line">    <span class="comment">//实现 ActionListener(定时器)接口,重写接口方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//🐍长度</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeX = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">600</span>];<span class="comment">//蛇的X坐标</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeY = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">500</span>];<span class="comment">//蛇的Y坐标</span></span><br><span class="line">    <span class="comment">//方向</span></span><br><span class="line">    String direction;<span class="comment">//初始方向向右</span></span><br><span class="line">    <span class="comment">//食物的坐标</span></span><br><span class="line">    <span class="keyword">int</span> foodX;</span><br><span class="line">    <span class="keyword">int</span> foodY;</span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//游戏当前的状态:开始，停止</span></span><br><span class="line">    <span class="keyword">boolean</span> isStart = <span class="keyword">false</span>;<span class="comment">//默认不开始</span></span><br><span class="line">    <span class="comment">//定时器,200ms = 1s执行一次</span></span><br><span class="line">    Timer timer=<span class="keyword">new</span> Timer(<span class="number">200</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">//获得焦点和键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获得键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//游戏开始</span></span><br><span class="line">        timer.start();<span class="comment">//定时器开启</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        length=<span class="number">3</span>;</span><br><span class="line">        snakeX[<span class="number">0</span>]=<span class="number">100</span>; snakeY[<span class="number">0</span>]=<span class="number">100</span>;<span class="comment">//头坐标</span></span><br><span class="line">        snakeX[<span class="number">1</span>]=<span class="number">75</span>; snakeY[<span class="number">1</span>]=<span class="number">100</span>;<span class="comment">//第一个身体坐标</span></span><br><span class="line">        snakeX[<span class="number">2</span>]=<span class="number">50</span>; snakeY[<span class="number">2</span>]=<span class="number">100</span>;<span class="comment">//第二个身体坐标</span></span><br><span class="line">        direction =<span class="string">&quot;R&quot;</span>;<span class="comment">//初始方向向右</span></span><br><span class="line">        <span class="comment">//随机食物坐标</span></span><br><span class="line">        foodX=<span class="number">25</span>+<span class="number">25</span>*random.nextInt(<span class="number">34</span>);</span><br><span class="line">        foodY=<span class="number">75</span>+<span class="number">25</span>*random.nextInt(<span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">//把小蛇画上去,通过方向来判断</span></span><br><span class="line">        <span class="keyword">if</span>(direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            Data.right.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//头初始化向右</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            Data.left.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向左</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            Data.up.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向上</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            Data.down.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//身体坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">            Data.body.paintIcon(<span class="keyword">this</span>,g,snakeX[i],snakeY[i]);<span class="comment">//身体坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">        Data.food.paintIcon(<span class="keyword">this</span>,g,foodX,foodY);</span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span>(isStart==<span class="keyword">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">40</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//键盘监听事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> keyCode = e.getKeyCode();<span class="comment">//获得键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.VK_SPACE)&#123;</span><br><span class="line">            isStart = !isStart;<span class="comment">//取反</span></span><br><span class="line">            repaint();<span class="comment">//重新绘制</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//控制小蛇上下左右移动,且小蛇不能直接回头</span></span><br><span class="line">        <span class="keyword">if</span>((keyCode == KeyEvent.VK_UP||keyCode == KeyEvent.VK_W)&amp;&amp;!direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;U&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_DOWN||keyCode == KeyEvent.VK_S)&amp;&amp;!direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;D&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_LEFT||keyCode == KeyEvent.VK_A)&amp;&amp;!direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;L&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_RIGHT||keyCode == KeyEvent.VK_D)&amp;&amp;!direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;R&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定时器监听</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isStart) &#123;  <span class="comment">//如果游戏开始,就让小蛇动起来</span></span><br><span class="line">            <span class="comment">//身体移动</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="comment">//移动，后一截移动到前一截</span></span><br><span class="line">                snakeX[i] = snakeX[i - <span class="number">1</span>];</span><br><span class="line">                snakeY[i] = snakeY[i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//头控制身体移动</span></span><br><span class="line">            <span class="keyword">if</span> (direction.equals(<span class="string">&quot;R&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &gt; <span class="number">850</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">25</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;L&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &lt; <span class="number">25</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">850</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;U&quot;</span>)) &#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &lt; <span class="number">75</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">650</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &gt; <span class="number">650</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">75</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//吃食物</span></span><br><span class="line">            <span class="keyword">if</span>(snakeX[<span class="number">0</span>]==foodX &amp;&amp; snakeY[<span class="number">0</span>]==foodY)&#123;</span><br><span class="line">                length++;<span class="comment">//身体长度+1</span></span><br><span class="line">                <span class="comment">//再次随机生成食物</span></span><br><span class="line">                foodX=<span class="number">25</span>+<span class="number">25</span>*random.nextInt(<span class="number">34</span>);</span><br><span class="line">                foodY=<span class="number">75</span>+<span class="number">25</span>*random.nextInt(<span class="number">24</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            repaint();<span class="comment">//重绘</span></span><br><span class="line">        &#125;</span><br><span class="line">        timer.start();<span class="comment">//定时器开始</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="失败判定，积分系统"><a href="#失败判定，积分系统" class="headerlink" title="失败判定，积分系统"></a>失败判定，积分系统</h3><ul><li><p>GamePanel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/19 - 11:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//游戏面板</span></span><br><span class="line">    <span class="comment">//实现 KeyListener 接口,重写接口方法</span></span><br><span class="line">    <span class="comment">//实现 ActionListener(定时器)接口,重写接口方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GamePanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//🐍长度</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeX = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">600</span>];<span class="comment">//蛇的X坐标</span></span><br><span class="line">    <span class="keyword">int</span>[] snakeY = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">500</span>];<span class="comment">//蛇的Y坐标</span></span><br><span class="line">    <span class="comment">//方向</span></span><br><span class="line">    String direction;<span class="comment">//初始方向向右</span></span><br><span class="line">    <span class="comment">//食物的坐标</span></span><br><span class="line">    <span class="keyword">int</span> foodX;</span><br><span class="line">    <span class="keyword">int</span> foodY;</span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//游戏当前的状态:开始，停止</span></span><br><span class="line">    <span class="keyword">boolean</span> isStart = <span class="keyword">false</span>;<span class="comment">//默认不开始</span></span><br><span class="line">    <span class="comment">//失败判定</span></span><br><span class="line">    <span class="keyword">boolean</span> isFall = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//定时器,200ms = 1s执行一次</span></span><br><span class="line">    Timer timer=<span class="keyword">new</span> Timer(<span class="number">200</span>,<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//分数定义</span></span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">//获得焦点和键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获得键盘事件</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//游戏开始</span></span><br><span class="line">        timer.start();<span class="comment">//定时器开启</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        length=<span class="number">3</span>;</span><br><span class="line">        snakeX[<span class="number">0</span>]=<span class="number">100</span>; snakeY[<span class="number">0</span>]=<span class="number">100</span>;<span class="comment">//头坐标</span></span><br><span class="line">        snakeX[<span class="number">1</span>]=<span class="number">75</span>; snakeY[<span class="number">1</span>]=<span class="number">100</span>;<span class="comment">//第一个身体坐标</span></span><br><span class="line">        snakeX[<span class="number">2</span>]=<span class="number">50</span>; snakeY[<span class="number">2</span>]=<span class="number">100</span>;<span class="comment">//第二个身体坐标</span></span><br><span class="line">        direction =<span class="string">&quot;R&quot;</span>;<span class="comment">//初始方向向右</span></span><br><span class="line">        <span class="comment">//随机食物坐标</span></span><br><span class="line">        foodX=<span class="number">25</span>+<span class="number">25</span>*random.nextInt(<span class="number">34</span>);</span><br><span class="line">        foodY=<span class="number">75</span>+<span class="number">25</span>*random.nextInt(<span class="number">24</span>);</span><br><span class="line">        score=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板,游戏中所有东西都用这支画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paintComponent(g);<span class="comment">//清屏</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="keyword">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Data.header.paintIcon(<span class="keyword">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//头部广告</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">//积分绘制</span></span><br><span class="line">        g.setColor(Color.WHITE);</span><br><span class="line">        g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">18</span>));</span><br><span class="line">        g.drawString(<span class="string">&quot;长度 &quot;</span>+length,<span class="number">750</span>,<span class="number">35</span>);</span><br><span class="line">        g.drawString(<span class="string">&quot;分数 &quot;</span>+score,<span class="number">750</span>,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绘制食物</span></span><br><span class="line">        Data.food.paintIcon(<span class="keyword">this</span>,g,foodX,foodY);</span><br><span class="line">        <span class="comment">//把小蛇画上去,通过方向来判断</span></span><br><span class="line">        <span class="keyword">if</span>(direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            Data.right.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//头初始化向右</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            Data.left.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向左</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            Data.up.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向上</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            Data.down.paintIcon(<span class="keyword">this</span>,g,snakeX[<span class="number">0</span>],snakeY[<span class="number">0</span>]);<span class="comment">//方向向下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//绘制身体坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">            Data.body.paintIcon(<span class="keyword">this</span>,g,snakeX[i],snakeY[i]);<span class="comment">//身体坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span>(isStart==<span class="keyword">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">40</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//失败绘制</span></span><br><span class="line">        <span class="keyword">if</span>(isFall)&#123;</span><br><span class="line">            g.setColor(Color.RED);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.BOLD,<span class="number">60</span>));<span class="comment">//设置字体</span></span><br><span class="line">            g.drawString(<span class="string">&quot;GAME OVER&quot;</span>,<span class="number">280</span>,<span class="number">350</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//键盘监听事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> keyCode = e.getKeyCode();<span class="comment">//获得键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.VK_SPACE)&#123;</span><br><span class="line">          <span class="keyword">if</span>(isFall)&#123;</span><br><span class="line">              <span class="comment">//重新开始</span></span><br><span class="line">              isFall=<span class="keyword">false</span>;</span><br><span class="line">              init();</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              isStart = !isStart;<span class="comment">//取反</span></span><br><span class="line">          &#125;</span><br><span class="line">            repaint();<span class="comment">//重新绘制</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//控制小蛇上下左右移动,且小蛇不能直接回头</span></span><br><span class="line">        <span class="keyword">if</span>((keyCode == KeyEvent.VK_UP||keyCode == KeyEvent.VK_W)&amp;&amp;!direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;U&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_DOWN||keyCode == KeyEvent.VK_S)&amp;&amp;!direction.equals(<span class="string">&quot;U&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;D&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_LEFT||keyCode == KeyEvent.VK_A)&amp;&amp;!direction.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;L&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((keyCode == KeyEvent.VK_RIGHT||keyCode == KeyEvent.VK_D)&amp;&amp;!direction.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">            direction=<span class="string">&quot;R&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定时器监听</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isStart &amp;&amp; isFall==<span class="keyword">false</span>) &#123;  <span class="comment">//如果游戏开始,就让小蛇动起来</span></span><br><span class="line">            <span class="comment">//身体移动</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="comment">//移动，后一截移动到前一截</span></span><br><span class="line">                snakeX[i] = snakeX[i - <span class="number">1</span>];</span><br><span class="line">                snakeY[i] = snakeY[i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//头控制身体移动</span></span><br><span class="line">            <span class="keyword">if</span> (direction.equals(<span class="string">&quot;R&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &gt; <span class="number">850</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">25</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;L&quot;</span>)) &#123;</span><br><span class="line">                snakeX[<span class="number">0</span>] = snakeX[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeX[<span class="number">0</span>] &lt; <span class="number">25</span>) &#123;</span><br><span class="line">                    snakeX[<span class="number">0</span>] = <span class="number">850</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;U&quot;</span>)) &#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] - <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &lt; <span class="number">75</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">650</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">                snakeY[<span class="number">0</span>] = snakeY[<span class="number">0</span>] + <span class="number">25</span>;</span><br><span class="line">                <span class="comment">//边界判断</span></span><br><span class="line">                <span class="keyword">if</span> (snakeY[<span class="number">0</span>] &gt; <span class="number">650</span>) &#123;</span><br><span class="line">                    snakeY[<span class="number">0</span>] = <span class="number">75</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//吃食物</span></span><br><span class="line">            <span class="keyword">if</span>(snakeX[<span class="number">0</span>]==foodX &amp;&amp; snakeY[<span class="number">0</span>]==foodY)&#123;</span><br><span class="line">                length+=<span class="number">1</span>;<span class="comment">//身体长度增加</span></span><br><span class="line">                score+=<span class="number">10</span>;<span class="comment">//分数增加</span></span><br><span class="line">                <span class="comment">//再次随机生成食物</span></span><br><span class="line">                foodX=<span class="number">25</span>+<span class="number">25</span>*random.nextInt(<span class="number">34</span>);</span><br><span class="line">                foodY=<span class="number">75</span>+<span class="number">25</span>*random.nextInt(<span class="number">24</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//失败事件,撞到身体</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(snakeX[<span class="number">0</span>]==snakeX[i]&amp;&amp;snakeY[<span class="number">0</span>]==snakeY[i])&#123;</span><br><span class="line">                    isFall=<span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            repaint();<span class="comment">//重绘</span></span><br><span class="line">        &#125;</span><br><span class="line">        timer.start();<span class="comment">//定时器开始</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="GUI阶段回顾与总结"><a href="#GUI阶段回顾与总结" class="headerlink" title="GUI阶段回顾与总结"></a>GUI阶段回顾与总结</h3><p><strong>贪吃蛇实现思路：</strong></p><ul><li><p>定义数据</p></li><li><p>画到面板上</p></li><li><p>监听事件</p><ul><li>键盘监听 </li><li>事件监听</li></ul></li><li><p>生成jar文件</p><ul><li>在CMD中输入<code>jar cvf 生成名称.jar 文件夹名/.</code></li><li>保证所有.class和资源文件都在该文件夹内</li></ul></li><li><p>游戏效果图</p><p><a href="https://imgtu.com/i/fbgAZd"><img src="https://z3.ax1x.com/2021/08/19/fbgAZd.png" alt="fbgAZd.png"></a></p></li></ul><p><strong>总结：</strong></p><p>  <a href="https://imgtu.com/i/fblN28"><img src="https://z3.ax1x.com/2021/08/19/fblN28.png" alt="fblN28.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaGUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaGUI】JavaGUI入门到小游戏实战(3)</title>
      <link href="/2021/08/18/javaGUI1_3/"/>
      <url>/2021/08/18/javaGUI1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaGUI入门视频：<a href="https://www.bilibili.com/video/BV1DJ411B75F?p=14">【狂神说Java】GUI编程入门到游戏实战_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Swing和JFrame窗体"><a href="#Swing和JFrame窗体" class="headerlink" title="Swing和JFrame窗体"></a>Swing和JFrame窗体</h3><p><strong>窗口,面板：</strong></p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 9:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JFrameDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyJframe2().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyJframe2</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;这是Jlabel&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.add(label);</span><br><span class="line">        <span class="comment">//设置水平对齐</span></span><br><span class="line">        label.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得容器</span></span><br><span class="line">       Container container =<span class="keyword">this</span>.getContentPane();</span><br><span class="line">       container.setBackground(Color.pink);</span><br><span class="line">        <span class="comment">//关闭事件</span></span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标签居中：</p><p>​    <code>        label.setHorizontalAlignment(SwingConstants.CENTER);</code></p><h3 id="JDialog弹窗"><a href="#JDialog弹窗" class="headerlink" title="JDialog弹窗"></a>JDialog弹窗</h3><p><strong>JDialog：</strong></p><ul><li><p>用来被弹出，默认有关闭事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 10:09</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//主窗口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DialogDemo</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DialogDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setSize(<span class="number">600</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//JFrame 放东西 容器</span></span><br><span class="line">        Container container = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        <span class="comment">//绝对布局</span></span><br><span class="line">        container.setLayout(<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//按钮</span></span><br><span class="line">        JButton button = <span class="keyword">new</span> JButton(<span class="string">&quot;点击弹出对话框&quot;</span>);</span><br><span class="line">        button.setBounds(<span class="number">30</span>,<span class="number">30</span>,<span class="number">200</span>,<span class="number">50</span>);</span><br><span class="line">        container.add(button);</span><br><span class="line">        <span class="comment">//点击这个按钮，弹出弹窗</span></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//弹窗</span></span><br><span class="line">                <span class="keyword">new</span> MyDialogDemo();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> DialogDemo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//弹窗的窗口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDialogDemo</span> <span class="keyword">extends</span> <span class="title">JDialog</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDialogDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="comment">// 弹窗默认有关闭监听</span></span><br><span class="line">        <span class="comment">//  this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span></span><br><span class="line"></span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        con.setLayout(<span class="keyword">null</span>);</span><br><span class="line">        con.add(<span class="keyword">new</span> Label(<span class="string">&quot;这就是一个弹窗&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Icon、ImageIcon标签"><a href="#Icon、ImageIcon标签" class="headerlink" title="Icon、ImageIcon标签"></a>Icon、ImageIcon标签</h3><p><strong>label:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> JLabel(<span class="string">&quot;标题&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>图标Icon:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 10:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageIconDemo</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImageIconDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取图片地址</span></span><br><span class="line">        JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;imageIcon&quot;</span>);</span><br><span class="line">        URL url=ImageIconDemo.class.getResource(<span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ImageIcon imageIcon=<span class="keyword">new</span> ImageIcon(url);</span><br><span class="line">        label.setIcon(imageIcon);</span><br><span class="line">        label.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">        Container con = getContentPane();</span><br><span class="line">        con.add(label);</span><br><span class="line"></span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ImageIconDemo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文本域JScroll面板"><a href="#文本域JScroll面板" class="headerlink" title="文本域JScroll面板"></a>文本域JScroll面板</h3><p><strong>JPanel:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 11:11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JPanelDemo</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JPanelDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        con.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>));<span class="comment">//有间距</span></span><br><span class="line"></span><br><span class="line">        JPanel jp = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">        JPanel jp2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        JPanel jp3 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>));</span><br><span class="line">        jp.add(<span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>));</span><br><span class="line">        jp.add(<span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>));</span><br><span class="line">        jp.add(<span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>));</span><br><span class="line">        jp2.add(<span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>));</span><br><span class="line">        jp2.add(<span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>));</span><br><span class="line">        jp3.add(<span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>));</span><br><span class="line">        jp3.add(<span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>));</span><br><span class="line"></span><br><span class="line">        con.add(jp);</span><br><span class="line">        con.add(jp2);</span><br><span class="line">        con.add(jp3);</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> JPanelDemo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JScrollPanel:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 11:16</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JScrollDemo</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JScrollDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文本域</span></span><br><span class="line">        JTextArea textarea = <span class="keyword">new</span> JTextArea(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">        textarea.setText(<span class="string">&quot;文本域&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Scroll面板</span></span><br><span class="line">        JScrollPane jScrollPane = <span class="keyword">new</span> JScrollPane(textarea);</span><br><span class="line">        con.add(jScrollPane);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> JScrollDemo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片按钮、单选框、多选框"><a href="#图片按钮、单选框、多选框" class="headerlink" title="图片按钮、单选框、多选框"></a>图片按钮、单选框、多选框</h3><ul><li><p>图片按钮</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 11:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JButtonDemo1</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JButtonDemo1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        <span class="comment">//将图片变为图标</span></span><br><span class="line">        URL url = JButtonDemo1.class.getResource(<span class="string">&quot;133.jpg&quot;</span>);</span><br><span class="line">        Icon icon = <span class="keyword">new</span> ImageIcon(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把这个图标放在按钮</span></span><br><span class="line">        JButton button = <span class="keyword">new</span> JButton();</span><br><span class="line">        button.setIcon(icon);</span><br><span class="line">        button.setToolTipText(<span class="string">&quot;图片按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line">        con.add(button);</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">1001</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span>  JButtonDemo1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>单选按钮(需要分组ButtonGroup)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 11:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JButtonDemo2</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JButtonDemo2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        <span class="comment">//将图片变为图标</span></span><br><span class="line">        URL url = JButtonDemo1.class.getResource(<span class="string">&quot;133.jpg&quot;</span>);</span><br><span class="line">        Icon icon = <span class="keyword">new</span> ImageIcon(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//单选框</span></span><br><span class="line">        JRadioButton jRadioButton1 = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;JRadioButton1&quot;</span>);</span><br><span class="line">        JRadioButton jRadioButton2 = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;JRadioButton1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//由于单选框只能选择一个，分组</span></span><br><span class="line">        ButtonGroup group =  <span class="keyword">new</span> ButtonGroup();</span><br><span class="line">        group.add(jRadioButton1);</span><br><span class="line">        group.add(jRadioButton2);</span><br><span class="line">        con.add(jRadioButton1,BorderLayout.NORTH);</span><br><span class="line">        con.add(jRadioButton2,BorderLayout.SOUTH);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">1001</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span>  JButtonDemo2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>复选按钮</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 11:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JButtonDemo3</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JButtonDemo3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        <span class="comment">//将图片变为图标</span></span><br><span class="line">        URL url = JButtonDemo1.class.getResource(<span class="string">&quot;133.jpg&quot;</span>);</span><br><span class="line">        Icon icon = <span class="keyword">new</span> ImageIcon(url);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//多选框</span></span><br><span class="line">        JCheckBox jCheckBox1 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;Chebox1&quot;</span>);</span><br><span class="line">        JCheckBox jCheckBox2 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;Chebox1&quot;</span>);</span><br><span class="line">        JCheckBox jCheckBox3 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;Chebox1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        con.add(jCheckBox1,BorderLayout.NORTH);</span><br><span class="line">        con.add(jCheckBox2,BorderLayout.CENTER);</span><br><span class="line">        con.add(jCheckBox3,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">1001</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> JButtonDemo3();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="下拉框、列表框"><a href="#下拉框、列表框" class="headerlink" title="下拉框、列表框"></a>下拉框、列表框</h3><ul><li><p>下拉框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 12:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboxDemo1</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ComboxDemo1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">        <span class="comment">//下拉框</span></span><br><span class="line">        JComboBox jComboBox = <span class="keyword">new</span> JComboBox();</span><br><span class="line"></span><br><span class="line">        jComboBox.addItem(<span class="keyword">null</span>);</span><br><span class="line">        jComboBox.addItem(<span class="string">&quot;正字热映&quot;</span>);</span><br><span class="line">        jComboBox.addItem(<span class="string">&quot;即将下架&quot;</span>);</span><br><span class="line">        jComboBox.addItem(<span class="string">&quot;已下架&quot;</span>);</span><br><span class="line">        con.add(jComboBox);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ComboxDemo1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>列表框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 12:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboxDemo2</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ComboxDemo2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//列表框</span></span><br><span class="line">        String[]arge = &#123;<span class="string">&quot;1：&quot;</span>,<span class="string">&quot;2：&quot;</span>,<span class="string">&quot;3：&quot;</span>&#125;;</span><br><span class="line">        JList jList = <span class="keyword">new</span> JList(arge);</span><br><span class="line">        con.add(jList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ComboxDemo2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>应用场景：</strong></p><ul><li>选择地区，或一些单个选项。</li><li>列表用来展示信息，一般是动态扩容。</li></ul><h3 id="文本框、密码框、文本域"><a href="#文本框、密码框、文本域" class="headerlink" title="文本框、密码框、文本域"></a>文本框、密码框、文本域</h3><ul><li><p>文本框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 12:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextDemo1</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextDemo1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文本框</span></span><br><span class="line">        JTextField text1 = <span class="keyword">new</span> JTextField(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        JTextField text2 = <span class="keyword">new</span> JTextField(<span class="string">&quot;world&quot;</span>);</span><br><span class="line"></span><br><span class="line">        con.add(text1,BorderLayout.NORTH);</span><br><span class="line">        con.add(text2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> TextDemo1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>密码框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 12:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextDemo2</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextDemo2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//密码框</span></span><br><span class="line">        JPasswordField text1 = <span class="keyword">new</span> JPasswordField(<span class="string">&quot;输入密码&quot;</span>);</span><br><span class="line"></span><br><span class="line">        JPasswordField text2 = <span class="keyword">new</span> JPasswordField(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        <span class="comment">//也可以自定义隐藏样式,默认是·</span></span><br><span class="line">        text2.setEchoChar(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        con.add(text1,BorderLayout.NORTH);</span><br><span class="line">        con.add(text2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> TextDemo2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文本域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/18 - 12:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextDemo3</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextDemo3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Container con = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文本域</span></span><br><span class="line">        JTextArea text1 = <span class="keyword">new</span> JTextArea(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        text1.setText(<span class="string">&quot;文本域&quot;</span>);</span><br><span class="line">        <span class="comment">//通过面板显示</span></span><br><span class="line">        JScrollPane jScrollPane = <span class="keyword">new</span> JScrollPane(text1);</span><br><span class="line">        con.add(jScrollPane);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> TextDemo3();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaGUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaGUI】JavaGUI入门到小游戏实战(2)</title>
      <link href="/2021/08/17/javaGUI1_2/"/>
      <url>/2021/08/17/javaGUI1_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaGUI入门视频：<a href="https://www.bilibili.com/video/BV1DJ411B75F?p=7">【狂神说Java】GUI编程入门到游戏实战_哔哩哔哩_bilibili</a></p></blockquote><h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><ul><li><p>当某个事情发生的时候，干什么？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 21:14</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestActionEvent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//按下按钮，触发事件</span></span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame();</span><br><span class="line">        Button button = <span class="keyword">new</span> Button();</span><br><span class="line">        <span class="comment">//因为，addActionListener()需要一个ActionListener,我们需要构造ActionListener</span></span><br><span class="line">        MyActionListener myActionListener = <span class="keyword">new</span> MyActionListener();</span><br><span class="line">        button.addActionListener(myActionListener);</span><br><span class="line"></span><br><span class="line">        frame.add(button,BorderLayout.CENTER);</span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        windowClose(frame);<span class="comment">//关闭窗口</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭窗口</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">windowClose</span><span class="params">(Frame frame)</span></span>&#123;</span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//关闭窗口</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按钮事件监听</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyActionListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 重写方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;按钮点击事件&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>让两个按钮共用一个事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 21:25</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestActionEventTwo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//两个按钮实现同一个监听</span></span><br><span class="line">        <span class="comment">//开始   停止</span></span><br><span class="line">        Frame frame =<span class="keyword">new</span> Frame(<span class="string">&quot;开始-停止&quot;</span>);</span><br><span class="line">        Button button1 = <span class="keyword">new</span> Button(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        Button button2 = <span class="keyword">new</span> Button(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可以显示的定义触发会返回的命令</span></span><br><span class="line">        button2.setActionCommand(<span class="string">&quot;定义事件&quot;</span>);</span><br><span class="line"></span><br><span class="line">        MyMonitor myMonitor = <span class="keyword">new</span> MyMonitor();</span><br><span class="line">        button1.addActionListener(myMonitor);</span><br><span class="line">        button2.addActionListener(myMonitor);</span><br><span class="line"></span><br><span class="line">        frame.add(button1,BorderLayout.NORTH);</span><br><span class="line">        frame.add(button2,BorderLayout.SOUTH);</span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMonitor</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        System.out.println(<span class="string">&quot;按钮被点击了:msg&quot;</span>+e.getActionCommand());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="输入框事件监听"><a href="#输入框事件监听" class="headerlink" title="输入框事件监听"></a>输入框事件监听</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 21:39</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestText01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//启动</span></span><br><span class="line">        <span class="keyword">new</span> MyFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        TextField textField = <span class="keyword">new</span> TextField();</span><br><span class="line">        add(textField);</span><br><span class="line">        <span class="comment">//监听这个文本框输入的文字</span></span><br><span class="line">        MyActionListener2 maction = <span class="keyword">new</span> MyActionListener2();</span><br><span class="line">        textField.addActionListener(maction);</span><br><span class="line">        <span class="comment">//设置替换编码</span></span><br><span class="line">        textField.setEchoChar(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        pack();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyActionListener2</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得一些资源</span></span><br><span class="line">       TextField text1=(TextField) e.getSource();</span><br><span class="line">       text1.getText();<span class="comment">//获得输入框文本</span></span><br><span class="line">        System.out.println(text1.getText());</span><br><span class="line">        text1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="简易计算器、回顾组合内部类"><a href="#简易计算器、回顾组合内部类" class="headerlink" title="简易计算器、回顾组合内部类"></a>简易计算器、回顾组合内部类</h3><ul><li><p>opp原则：组合大于继承</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="comment">//A用B功能，把B私有进来，降低耦合</span></span><br><span class="line">    <span class="keyword">private</span> B b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>制作简易计算器：</strong></p><ul><li><p>示例图：</p><p><a href="https://imgtu.com/i/f5xHIO"><img src="https://z3.ax1x.com/2021/08/17/f5xHIO.md.png" alt="f5xHIO.md.png"></a></p></li><li><p>效果图</p><p><a href="https://imgtu.com/i/fIPxyQ"><img src="https://z3.ax1x.com/2021/08/17/fIPxyQ.png" alt="fIPxyQ.png"></a></p></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 21:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//简易计算器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestClac</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//启动</span></span><br><span class="line">        <span class="keyword">new</span> Calculator().loadFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    TextField text1,text2,text3;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Frame f=<span class="keyword">new</span> Frame(<span class="string">&quot;简易计算器&quot;</span>);</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        text1 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        text2 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        text3 = <span class="keyword">new</span> TextField(<span class="number">20</span>);<span class="comment">//字符数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1 个按钮</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="comment">//按钮监听事件</span></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> MyCalculatorListener(<span class="keyword">this</span>));</span><br><span class="line">        <span class="comment">//1 个标签</span></span><br><span class="line">        Label label = <span class="keyword">new</span> Label(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        f.setLayout(<span class="keyword">new</span> FlowLayout());<span class="comment">//流式布局</span></span><br><span class="line"></span><br><span class="line">        f.add(text1);</span><br><span class="line">        f.add(label);</span><br><span class="line">        f.add(text2);</span><br><span class="line">        f.add(button);</span><br><span class="line">        f.add(text3);</span><br><span class="line">        f.pack();<span class="comment">//自适应</span></span><br><span class="line">        f.setVisible(<span class="keyword">true</span>);<span class="comment">//显示布局</span></span><br><span class="line">        closeWindow(f);<span class="comment">//关闭窗口</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//关闭窗口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeWindow</span><span class="params">(Frame frame)</span></span>&#123;</span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//关闭</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCalculatorListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*用构造器获取三个变量</span></span><br><span class="line"><span class="comment">      private  TextField text1,text2,text3;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//获取计算器对象,在一个类中组合另一个类</span></span><br><span class="line">    Calculator cal = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyCalculatorListener</span><span class="params">(Calculator cal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cal = cal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获得加数和被加数</span></span><br><span class="line">        <span class="keyword">int</span> t1=Integer.parseInt(cal.text1.getText());</span><br><span class="line">        <span class="keyword">int</span> t2=Integer.parseInt(cal.text2.getText());</span><br><span class="line">        <span class="comment">//2.把值运算后放入第三个框</span></span><br><span class="line">        cal.text3.setText(<span class="string">&quot;&quot;</span>+(t1+t2));</span><br><span class="line">        <span class="comment">//3.清楚前两个框</span></span><br><span class="line">        cal.text1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        cal.text2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>内部类优势：</strong></p><ul><li><p>更好的包装</p></li><li><p>更畅通的访问外部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 21:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//简易计算器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestClac</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//启动</span></span><br><span class="line">        <span class="keyword">new</span> Calculator().loadFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    TextField text1,text2,text3;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Frame f=<span class="keyword">new</span> Frame(<span class="string">&quot;简易计算器&quot;</span>);</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        text1 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        text2 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        text3 = <span class="keyword">new</span> TextField(<span class="number">20</span>);<span class="comment">//字符数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1 个按钮</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="comment">//按钮监听事件</span></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> MyCalculatorListener());</span><br><span class="line">        <span class="comment">//1 个标签</span></span><br><span class="line">        Label label = <span class="keyword">new</span> Label(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        f.setLayout(<span class="keyword">new</span> FlowLayout());<span class="comment">//流式布局</span></span><br><span class="line"></span><br><span class="line">        f.add(text1);</span><br><span class="line">        f.add(label);</span><br><span class="line">        f.add(text2);</span><br><span class="line">        f.add(button);</span><br><span class="line">        f.add(text3);</span><br><span class="line">        f.pack();<span class="comment">//自适应</span></span><br><span class="line">        f.setVisible(<span class="keyword">true</span>);<span class="comment">//显示布局</span></span><br><span class="line">        closeWindow(f);<span class="comment">//关闭窗口</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭窗口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeWindow</span><span class="params">(Frame frame)</span></span>&#123;</span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//关闭</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//监听器类</span></span><br><span class="line">    <span class="comment">//使用内部类简化代码</span></span><br><span class="line">   <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCalculatorListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//1.获得加数和被加数</span></span><br><span class="line">            <span class="keyword">int</span> t1=Integer.parseInt(text1.getText());</span><br><span class="line">            <span class="keyword">int</span> t2=Integer.parseInt(text2.getText());</span><br><span class="line">            <span class="comment">//2.把值运算后放入第三个框</span></span><br><span class="line">            text3.setText(<span class="string">&quot;&quot;</span>+(t1+t2));</span><br><span class="line">            <span class="comment">//3.清楚前两个框</span></span><br><span class="line">            text1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            text2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="画笔Paint"><a href="#画笔Paint" class="headerlink" title="画笔Paint"></a>画笔Paint</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 22:45</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPaint</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyPaint().loadFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//画笔类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPaint</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setBounds(<span class="number">200</span>,<span class="number">200</span>,<span class="number">600</span>,<span class="number">500</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//画笔</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">       <span class="comment">//画笔需要颜色，可以绘画</span></span><br><span class="line">        g.setColor(Color.red);</span><br><span class="line">        g.drawOval(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        g.setColor(Color.green);</span><br><span class="line">        g.fillRect(<span class="number">200</span>,<span class="number">200</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="comment">//养成习惯，画笔用完，还原到最初哟啊色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="鼠标监听事件、模拟画图工具"><a href="#鼠标监听事件、模拟画图工具" class="headerlink" title="鼠标监听事件、模拟画图工具"></a>鼠标监听事件、模拟画图工具</h3><p><strong>目的：想要实现鼠标绘画:</strong></p><ul><li><p>流程图</p><p><a href="https://imgtu.com/i/fIuuvt"><img src="https://z3.ax1x.com/2021/08/17/fIuuvt.png" alt="fIuuvt.png"></a></p></li><li><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 23:06</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMouseListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyFrame(<span class="string">&quot;画图&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自己的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建ArrayList</span></span><br><span class="line">    ArrayList points;</span><br><span class="line">    <span class="comment">//绘画需要监听鼠标位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(title);</span><br><span class="line">        setBounds(<span class="number">200</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用数组存放鼠标的点</span></span><br><span class="line">       points = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//鼠标监听器，正对这个窗口</span></span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MyMouseListener());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="comment">//画画需要监听鼠标,使用迭代器输出点Iterator</span></span><br><span class="line">        Iterator iterator = points.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            Point point = (Point)iterator.next();</span><br><span class="line">            g.setColor(Color.BLACK);</span><br><span class="line">            g.fillOval(point.x,point.y,<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加一个点到界面</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addPoint</span><span class="params">(Point point)</span></span>&#123;</span><br><span class="line">        points.add(point);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//适配器模式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMouseListener</span> <span class="keyword">extends</span> <span class="title">MouseAdapter</span></span>&#123;</span><br><span class="line">        <span class="comment">//鼠标 按下 弹起 按住不放</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//按压</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">           MyFrame frame=(MyFrame)e.getSource();</span><br><span class="line">           <span class="comment">//点击产生一个点,获取鼠标坐标画下点</span></span><br><span class="line">            frame.addPoint(<span class="keyword">new</span> Point(e.getX(),e.getY()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//每次点击重画一次</span></span><br><span class="line">            frame.repaint();<span class="comment">//刷新</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="窗口监听事件"><a href="#窗口监听事件" class="headerlink" title="窗口监听事件"></a>窗口监听事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 23:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestWindow</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> windowFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">windowFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">windowFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setBackground(Color.BLUE);</span><br><span class="line">        setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">       <span class="comment">// addWindowListener(new MyWindowListener());</span></span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">        <span class="keyword">this</span>.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;windowClosing&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                windowFrame f = (windowFrame) e.getSource();</span><br><span class="line">                f.setTitle(<span class="string">&quot;被激活了&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;windowActivated&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//继承实现类，来避免实现接口重写太多方法</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyWindowListener</span> <span class="keyword">extends</span> <span class="title">WindowAdapter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">           <span class="comment">//隐藏窗口</span></span><br><span class="line">            setVisible(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//关闭窗口</span></span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="键盘监听事件"><a href="#键盘监听事件" class="headerlink" title="键盘监听事件"></a>键盘监听事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/17 - 23:43</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//键盘</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestKeyboardListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> keyFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">keyFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">keyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setBounds(<span class="number">1</span>,<span class="number">2</span>,<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">new</span> KeyAdapter() &#123;</span><br><span class="line">          <span class="comment">//键盘按压</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//获得键盘按下的键</span></span><br><span class="line">                <span class="keyword">int</span> keycode = e.getKeyCode();</span><br><span class="line">                System.out.println(keycode);</span><br><span class="line">                <span class="comment">//不需要可以去记录，使用VK_XX</span></span><br><span class="line">                <span class="keyword">if</span>(keycode==KeyEvent.VK_UP)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;你按下了上键&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaGUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaGUI】JavaGUI入门到小游戏实战(1)</title>
      <link href="/2021/08/16/javaGUI1_1/"/>
      <url>/2021/08/16/javaGUI1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费JavaGUI入门视频：<a href="https://www.bilibili.com/video/BV1DJ411B75F?p=1">【狂神说Java】GUI编程入门到游戏实战_哔哩哔哩_bilibili</a></p></blockquote><h3 id="GUI编程简介"><a href="#GUI编程简介" class="headerlink" title="GUI编程简介"></a>GUI编程简介</h3><p><strong>该怎么学？</strong></p><ul><li>这是什么？</li><li>它怎么玩？</li><li>该如何去使用</li></ul><p><strong>组件</strong>：</p><ul><li>窗口</li><li>弹窗</li><li>面板</li><li>文本框</li><li>列表框</li><li>按钮</li><li>图片</li><li>监听事件</li><li>鼠标</li><li>键盘事件</li></ul><p><strong>简介：</strong></p><ul><li><p>GUI的核心技术：Swing AWT,因为界面不美观，需要jre环境。</p></li><li><p>为什么我们要学习：</p><ul><li>写出一些想要的小工具。</li><li>工作时候可能需要维护swing，但概率很小</li><li><strong>了解MVC架构，了解监听！</strong></li></ul></li></ul><h3 id="AWT介绍"><a href="#AWT介绍" class="headerlink" title="AWT介绍"></a>AWT介绍</h3><p><strong>AWT:</strong></p><ol><li>Awt介绍：包含了很多类和接口！GUI</li><li>元素：窗口，按钮，文本框。</li><li>java.awt包</li></ol><p><strong>组件和容器:</strong></p><p><a href="https://imgtu.com/i/fWKnne"><img src="https://z3.ax1x.com/2021/08/16/fWKnne.png" alt="fWKnne.png"></a></p><h3 id="第一个Frame窗口"><a href="#第一个Frame窗口" class="headerlink" title="第一个Frame窗口"></a>第一个Frame窗口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//GUI的第一个界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Frame</span></span><br><span class="line">        Frame frame=<span class="keyword">new</span> Frame(<span class="string">&quot;我的第一个Java图像界面窗口&quot;</span>);</span><br><span class="line">        <span class="comment">//需要设置可见性</span></span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//设置窗口大小</span></span><br><span class="line">        frame.setSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">        <span class="comment">//设置背景颜色</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> Color(<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>));</span><br><span class="line">        <span class="comment">//弹出初始位置</span></span><br><span class="line">        frame.setLocation(<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="comment">//设置大小固定</span></span><br><span class="line">        frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>尝试封装:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//窗口封装</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFrame1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//展示多个窗口</span></span><br><span class="line">        <span class="keyword">new</span> MyFrame(<span class="number">300</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>, Color.BLUE);</span><br><span class="line">        <span class="keyword">new</span> MyFrame(<span class="number">600</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>, Color.YELLOW);</span><br><span class="line">        <span class="keyword">new</span> MyFrame(<span class="number">300</span>,<span class="number">600</span>,<span class="number">300</span>,<span class="number">400</span>, Color.BLACK);</span><br><span class="line">        <span class="keyword">new</span> MyFrame(<span class="number">600</span>,<span class="number">600</span>,<span class="number">300</span>,<span class="number">400</span>, Color.PINK);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//窗口类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> id=<span class="number">0</span>;<span class="comment">//可能有多个窗口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w,<span class="keyword">int</span> h,Color color)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">&quot;MyFrame&quot;</span>+(++id));</span><br><span class="line">        setBackground(color);</span><br><span class="line">        setBounds(x,y,w,h);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题：发现窗口无法关闭</strong></p><h3 id="Panel面板讲解"><a href="#Panel面板讲解" class="headerlink" title="Panel面板讲解"></a>Panel面板讲解</h3><p><strong>解决窗口无法关闭：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:21</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//panel面板</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPanel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame();</span><br><span class="line">        <span class="comment">//布局概念</span></span><br><span class="line">       Panel panel= <span class="keyword">new</span> Panel();</span><br><span class="line">        <span class="comment">//设置布局</span></span><br><span class="line">        frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//坐标</span></span><br><span class="line">        frame.setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">500</span>);</span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> Color(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        <span class="comment">//panel设置坐标小对于frame</span></span><br><span class="line">        panel.setBounds(<span class="number">50</span>,<span class="number">60</span>,<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">        panel.setBackground(<span class="keyword">new</span> Color(<span class="number">149</span>, <span class="number">57</span>, <span class="number">57</span>));</span><br><span class="line">        <span class="comment">//添加面板</span></span><br><span class="line">        frame.add(panel);</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//监听事件 关闭窗口</span></span><br><span class="line">        <span class="comment">//适配器模式</span></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">              <span class="comment">//结束程序</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三种布局管理器"><a href="#三种布局管理器" class="headerlink" title="三种布局管理器"></a>三种布局管理器</h3><ul><li><p>流式布局</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:36</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//流式布局</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFlowLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame();</span><br><span class="line">        <span class="comment">//组件按钮</span></span><br><span class="line">        Button button1 = <span class="keyword">new</span> Button(<span class="string">&quot;button1&quot;</span>);</span><br><span class="line">        Button button2 = <span class="keyword">new</span> Button(<span class="string">&quot;button2&quot;</span>);</span><br><span class="line">        Button button3 = <span class="keyword">new</span> Button(<span class="string">&quot;button3&quot;</span>);</span><br><span class="line">        <span class="comment">//设置流式布局</span></span><br><span class="line">        <span class="comment">//frame.setLayout(new FlowLayout());</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line"></span><br><span class="line">        frame.setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加按钮</span></span><br><span class="line">        frame.add(button1);</span><br><span class="line">        frame.add(button2);</span><br><span class="line">        frame.add(button3);</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>东南西北中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:42</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//东西南北中布局</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestBorderLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame(<span class="string">&quot;东西南北中布局&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Button east = <span class="keyword">new</span> Button(<span class="string">&quot;East&quot;</span>);</span><br><span class="line">        Button west = <span class="keyword">new</span> Button(<span class="string">&quot;West&quot;</span>);</span><br><span class="line">        Button south = <span class="keyword">new</span> Button(<span class="string">&quot;South&quot;</span>);</span><br><span class="line">        Button north = <span class="keyword">new</span> Button(<span class="string">&quot;North&quot;</span>);</span><br><span class="line">        Button center = <span class="keyword">new</span> Button(<span class="string">&quot;Center&quot;</span>);</span><br><span class="line"></span><br><span class="line">        frame.add(east,BorderLayout.EAST);</span><br><span class="line">        frame.add(west,BorderLayout.WEST);</span><br><span class="line">        frame.add(south,BorderLayout.SOUTH);</span><br><span class="line">        frame.add(north,BorderLayout.NORTH);</span><br><span class="line">        frame.add(center,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        frame.setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>表格布局</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:47</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//表格布局</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestGridLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame(<span class="string">&quot;表格布局&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Button btn1 = <span class="keyword">new</span> Button(<span class="string">&quot;btn1&quot;</span>);</span><br><span class="line">        Button btn2 = <span class="keyword">new</span> Button(<span class="string">&quot;btn2&quot;</span>);</span><br><span class="line">        Button btn3 = <span class="keyword">new</span> Button(<span class="string">&quot;btn3&quot;</span>);</span><br><span class="line">        Button btn4= <span class="keyword">new</span> Button(<span class="string">&quot;btn4&quot;</span>);</span><br><span class="line">        Button btn5 = <span class="keyword">new</span> Button(<span class="string">&quot;btn5&quot;</span>);</span><br><span class="line">        Button btn6 = <span class="keyword">new</span> Button(<span class="string">&quot;btn6&quot;</span>);</span><br><span class="line"></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">        frame.add(btn1);</span><br><span class="line">        frame.add(btn2);</span><br><span class="line">        frame.add(btn3);</span><br><span class="line">        frame.add(btn4);</span><br><span class="line">        frame.add(btn5);</span><br><span class="line">        frame.add(btn6);</span><br><span class="line"></span><br><span class="line">        frame.pack();<span class="comment">//java函数，自动最优</span></span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习讲解及总结"><a href="#练习讲解及总结" class="headerlink" title="练习讲解及总结"></a>练习讲解及总结</h3><p><strong>练习：</strong></p><p><a href="https://imgtu.com/i/fWcKts"><img src="https://z3.ax1x.com/2021/08/16/fWcKts.png" alt="fWcKts.png"></a></p><p><strong>效果：</strong></p><p>  <img src="https://z3.ax1x.com/2021/08/16/fWcA6f.png" alt="fWcA6f.png"></p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.lesson1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/16 - 16:54</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//总布局</span></span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame(<span class="string">&quot;练习&quot;</span>);</span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">        frame.setSize(<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        frame.setLocation(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> Color(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//4个面板</span></span><br><span class="line">        Panel p1 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">        Panel p2 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">        Panel p3 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">        Panel p4 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一个面板</span></span><br><span class="line">        p1.add(<span class="keyword">new</span> Button(<span class="string">&quot;East-1&quot;</span>),BorderLayout.EAST);</span><br><span class="line">        p1.add(<span class="keyword">new</span> Button(<span class="string">&quot;West-2&quot;</span>),BorderLayout.WEST);</span><br><span class="line">        <span class="comment">//第二个面板</span></span><br><span class="line">        p2.add(<span class="keyword">new</span> Button(<span class="string">&quot;2-btn-1&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> Button(<span class="string">&quot;2-btn-2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//p2放到p1中间</span></span><br><span class="line">        p1.add(p2,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第三个面板</span></span><br><span class="line">        p3.add(<span class="keyword">new</span> Button(<span class="string">&quot;East-3&quot;</span>),BorderLayout.EAST);</span><br><span class="line">        p3.add(<span class="keyword">new</span> Button(<span class="string">&quot;West-4&quot;</span>),BorderLayout.WEST);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第四个面板</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            p4.add(<span class="keyword">new</span> Button(<span class="string">&quot;for-&quot;</span>+i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//p4放到p3中</span></span><br><span class="line">        p3.add(p4,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将面板放入frame</span></span><br><span class="line">        frame.add(p1);</span><br><span class="line">        frame.add(p3,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//结束监听</span></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//结束</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><ul><li><p>Frame是一个顶级窗口。</p></li><li><p>Panel无法单独显示，必须添加到某个容器中。</p></li><li><p>布局管理器：</p><ul><li>流式布局(FlowLayout)</li><li>东西南北中(BorderLayout)</li><li>表格布局(GridLayout)</li></ul></li><li><p>大小，定位，背景颜色，可见性，监听。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaGUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】JavaSE总结</title>
      <link href="/2021/08/16/javaSE2_3/"/>
      <url>/2021/08/16/javaSE2_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV1MJ411v7tJ">【狂神说Java】JavaSE阶段回顾总结_哔哩哔哩_bilibili</a></p><p>JavaSE基础笔记代码下载地址：</p><p>蓝奏云：<a href="https://wwa.lanzoui.com/itg1ssnyz9e">下载地址</a> 密码：joker</p><p>百度云：<a href="https://pan.baidu.com/s/1-b01f52gS_KP6SClOD1P_A">下载地址</a> 提取码：g4lx</p></blockquote><h3 id="JavaSE总结"><a href="#JavaSE总结" class="headerlink" title="JavaSE总结"></a>JavaSE总结</h3><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202203211608621.png" alt="20200511165024440"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java异常</title>
      <link href="/2021/08/15/javaSE1_8/"/>
      <url>/2021/08/15/javaSE1_8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=76">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Error和Exception"><a href="#Error和Exception" class="headerlink" title="Error和Exception"></a>Error和Exception</h3><p><strong>什么是异常：</strong></p><ul><li>实际工作中，遇到的情况不可能是非常完美的。比如：你写的某个模块，用户输入不一定符合你的要求，你的程序要打开某个文件，这个文件可能不存在或者文件格式不对，你要读取数据库的数据，数据可能是空的等。我们的程序再跑着，内存或硬盘可能就满了…</li><li>软件程序在运行过程中，非常可能遇到刚刚提到这些异常问题，我们叫异常(Exception)，意思是例外。这些，例外情况，或者叫异常，怎么让我们写的程序做出合理的处理。而不至于程序崩溃。</li></ul><ul><li>异常指程序运行中出现的不期而至的各种状况，如：文件找不到，网络连接失败，非法参数等。</li><li>异常发生在程序运行期间，它影响了正常的程序执行流程。</li></ul><p><strong>异常体系结构：</strong></p><ul><li><p>Java把异常当作对象来处理，并定义一个基类<code>java.lang.Throwable</code>作为所有异常的超类。</p></li><li><p>在Java API中已经定义了许多异常类，这些异常类分为两大类，错误<strong>Error</strong>和异常<strong>Exception</strong>。</p><p><a href="https://imgtu.com/i/fcxA4P"><img src="https://z3.ax1x.com/2021/08/15/fcxA4P.png" alt="fcxA4P.png"></a></p></li></ul><p><strong>Error：</strong></p><ul><li>Error类对象由Java虚拟机生成并抛出，大多数错误与代码编写者所执行的操作无关。</li><li>Java虚拟机运行错误(Virtual MachineError)，当JVM不再继续执行操作所需的内存资源时，将出现<code>OutOfMemoryError</code>。这些异常发生时，Java虚拟机(JVM)一般会选择线程终止。</li><li>还有发生在虚拟机试图执行应用是，如类定义错误(NoClassDefFoundError)、连接错误(LinkageError)。这些错误时不可查的，因为它们在应用程序的控制和处理能力之外，而且绝大多数时程序运行时不允许出现的状况。</li></ul><p><strong>Exception：</strong></p><ul><li>在Exception分支中有一个重要的子类RuntimeException(运行时异常)。</li><li>ArrayIndexOutOfBoundsException(数组下标越界)</li><li>NullPointerException(空指针异常)</li><li>ArithmeticException(算数异常)</li><li>MissingResourceException(丢失资源)</li><li>ClassNoFoundException(找不到类)等异常，这些异常是不检查异常，程序中可以选择捕获处理，也可以不处理。</li><li>这些异常一般时由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生。</li><li>Error和Exception的区别：Error通常是灾难性的致命的错误，是程序无法控制和处理的，当出现这些异常时，Java虚拟机(JVM)一般会选择终止线程；Exception通常情况下是可以被程序处理的，并且在程序中应该尽可能的去处理这些异常。</li></ul><h3 id="捕获和抛出异常"><a href="#捕获和抛出异常" class="headerlink" title="捕获和抛出异常"></a>捕获和抛出异常</h3><p><strong>异常处理机制：</strong></p><ul><li>抛出异常</li><li>捕获异常</li></ul><ul><li><p>异常处理五个关键字：</p><ul><li>try,catch,finally,throw,throws</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.opp.demo08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/15 - 15:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//捕获异常</span></span><br><span class="line">        <span class="comment">//finally不是必须的</span></span><br><span class="line">        <span class="comment">//捕获多个异常，从小到大</span></span><br><span class="line">        <span class="comment">//快捷键 Ctrl+Alt+T</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(a/b);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ArithmeticException e)&#123; <span class="comment">//catch里为想要捕获的异常最高为Throwable</span></span><br><span class="line">            System.out.println(<span class="string">&quot;程序异常，变量b不能为0&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;finally&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> Test().test(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;抛出异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//抛出异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException();<span class="comment">//主动抛出异常，一般在方法中使用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义异常及小结"><a href="#自定义异常及小结" class="headerlink" title="自定义异常及小结"></a>自定义异常及小结</h3><p><strong>自定义异常：</strong></p><ul><li>使用Java内置的异常类可以描述在编程时出现的大部分异常情况。除此之外，用户还可以自定义异常。用户自定义异常类，只需要继承Exception类即可。</li><li>在程序中使用自定义异常类，大体可分为以下几个步骤：<ul><li>创建自定义异常类。</li><li>在方法中通过throw关键字抛出异常对象。</li><li>如果在当前抛出异常的方法中处理异常，可以使用try-catch语句捕获并处理；否则在方法的声明处通过throws关键字指明要抛出给方法调用者的异常，继续进行下一步操作。</li><li>在出现异常方法的调用者中捕获并处理异常。</li></ul></li></ul><p><strong>实际应用中的总结：</strong></p><ul><li><p>处理运行时异常，采用逻辑去合理规避同时辅助<code>try-catch</code>处理。</p></li><li><p>在多重catch块后面，可以加一个catch(Exception)来处理可能会被遗漏的异常。</p></li><li><p>对于不确定的代码，也可以加上<code>try-catch</code>，处理潜在的异常。</p></li><li><p>尽量去处理异常，切忌只是简单地调用<code>printStackTrace()</code>去打印输出。</p></li><li><p>具体如何处理异常，要根据不同的业务需求和异常类型去决定。</p></li><li><p>尽量添加finally语句块去释放占用的资源。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MyException</span></span><br><span class="line"><span class="comment">//自定义异常</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//传递数字&gt;10 抛出异常</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> detail;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.detail = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//toString ： 异常打印</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyException：&quot;</span> + detail;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Test类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            test(<span class="number">11</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyException e) &#123;</span><br><span class="line">           <span class="comment">// e.printStackTrace();</span></span><br><span class="line">            <span class="comment">//增加一些处理异常的代码</span></span><br><span class="line">            System.out.println(<span class="string">&quot;MyException=&gt;&quot;</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可能会有异常的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="keyword">throws</span> MyException</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;传递的参数：&quot;</span>+a);</span><br><span class="line">      <span class="keyword">if</span>(a&gt;<span class="number">10</span>)&#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> MyException(a);<span class="comment">//抛出</span></span><br><span class="line">      &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;正常&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java面向对象(下)</title>
      <link href="/2021/08/15/javaSE1_7/"/>
      <url>/2021/08/15/javaSE1_7/</url>
      
        <content type="html"><![CDATA[<p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=71">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p><h3 id="什么时多态"><a href="#什么时多态" class="headerlink" title="什么时多态"></a>什么时多态</h3><ul><li>即同一方法可以根据发送对象的不同而采用多种不同的行为方式。</li><li>一个对象的实际类型是正确的，但可以指向对象的引用的类型有很多。</li></ul><ul><li>多态存在的条件：<ul><li>有继承关系</li><li>子类重写父类方法</li><li>父类引用指向子类对象</li></ul></li></ul><ul><li><p>多态注意：</p><ul><li>多态是方法的多态，属性没有多态性。</li><li>父类和子类，有联系，强转类型转换异常<code>ClassCastException</code></li><li>存在条件：继承关系，方法需要重写，父类引用指向子类对象。</li></ul></li><li><p>重写注意：</p><ul><li>static 方法，属于类，不属于实例，无法重写。</li><li>final 一般修饰常量，无法重写。</li><li>private为私有，无法重写。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//student类</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;eat&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//person类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一个对象的实际类型是确定的</span></span><br><span class="line">        <span class="comment">//new Student();</span></span><br><span class="line">        <span class="comment">//new Person();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//可以只想的引用类型就不确定了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//子类能调用的方法都是自己的或者继承父类的</span></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        <span class="comment">//person父类性，可以指向子类，但不能调用子类独有的方法</span></span><br><span class="line">        Person s2 = <span class="keyword">new</span> Student();</span><br><span class="line">        Object s3 = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        s2.run();<span class="comment">//子类重写父类的方法，执行子类的方法</span></span><br><span class="line">        s1.run();</span><br><span class="line"></span><br><span class="line">        s1.eat();</span><br><span class="line">        <span class="comment">//s2.eat();</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="instanceof和类型转换"><a href="#instanceof和类型转换" class="headerlink" title="instanceof和类型转换"></a>instanceof和类型转换</h3><ul><li><p>instanceof关系</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//instandeof</span></span><br><span class="line">       Object object = <span class="keyword">new</span> Student();</span><br><span class="line">       <span class="comment">//能否编译通过主要看X与Y有无父子关系</span></span><br><span class="line">      <span class="comment">// System.out.println(X instanceof Y);</span></span><br><span class="line">  </span><br><span class="line">       System.out.println(object <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">       System.out.println(object <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">       System.out.println(object <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">       System.out.println(object <span class="keyword">instanceof</span> Teacher);<span class="comment">//false</span></span><br><span class="line">       System.out.println(object <span class="keyword">instanceof</span> String);<span class="comment">//false</span></span><br><span class="line">  </span><br><span class="line">       Person perosn = <span class="keyword">new</span> Person();</span><br><span class="line">       System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">       System.out.println(perosn <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">       System.out.println(perosn <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">       System.out.println(perosn <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">       System.out.println(perosn <span class="keyword">instanceof</span> Teacher);<span class="comment">//false</span></span><br><span class="line">    <span class="comment">// System.out.println(perosn instanceof String);//编译报错</span></span><br><span class="line">  </span><br><span class="line">       Student student = <span class="keyword">new</span> Student();</span><br><span class="line">       System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">       System.out.println(student <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">       System.out.println(student <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">       System.out.println(student <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">      <span class="comment">// System.out.println(student instanceof Teacher);//编译报错</span></span><br><span class="line">      <span class="comment">// System.out.println(student instanceof String);//编译报错</span></span><br></pre></td></tr></table></figure></li><li><p>类型转换</p><ul><li>父类引用指向子类的对象。</li><li>把子类转换位父类，向上转型。</li><li>把父类转换为子类，向下转型，强制转化。</li><li>方便方法的调用，减少重复的代码。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//类型之间的转换  父  子</span></span><br><span class="line">    <span class="comment">//高                   低</span></span><br><span class="line">    Person student = <span class="keyword">new</span> Student();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//student将这个对象转换为Student类型，我们就可以使用Student类型</span></span><br><span class="line">  </span><br><span class="line">    ((Student)student).go();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//子类转化为父类，可能丢失自己本来的方法</span></span><br><span class="line">    Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line">    student1.go();</span><br><span class="line">    Person perosn = student1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="static关键字详解"><a href="#static关键字详解" class="headerlink" title="static关键字详解"></a>static关键字详解</h3><ul><li><p>匿名代码块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">//匿名代码块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>静态代码块,只执行一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">    <span class="comment">//静态代码块，只执行一次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>静态导入包：<code>import static java.lang.Math.random;</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Student</span></span><br><span class="line">/<span class="keyword">static</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> age;<span class="comment">//静态变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> score;<span class="comment">//非静态变量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">go</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>&#123;</span><br><span class="line">        Student sq = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        System.out.println(Student.age);</span><br><span class="line">        System.out.println(sq.age);</span><br><span class="line">        System.out.println(sq.score);</span><br><span class="line"></span><br><span class="line">        Student.go();<span class="comment">//直接调用静态方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Person</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//匿名代码块</span></span><br><span class="line">        System.out.println(<span class="string">&quot;匿名代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//静态代码块,只执行一次</span></span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//构造方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>&#123;</span><br><span class="line">        Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line">        Person person1 = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Test类</span></span><br><span class="line"><span class="keyword">package</span> com.opp.demo03;</span><br><span class="line"><span class="comment">//静态导入包</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.PI;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/15 - 13:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(random());</span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><ul><li><code>abstract</code>修饰符可以用来修饰方法也可以修饰类，如果修饰方法，那么该方法就是抽象方法；如果修饰类，那么该类就是抽象类。</li><li>抽象类中可以没有抽象方法，但是有抽象方法的类一定要声明为抽象类。</li></ul><ul><li>抽象类，不能使用new关键字来创建对象，他是用来让子类继承的。</li><li>抽象方法，只有方法的声明，没有方法的实现，它是用来让子类实现的。</li></ul><ul><li><p>子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类。</p></li><li><p>思考： 抽象方法存在构造器吗？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//abstact 抽象类  extends 单继承(接口可以多继承)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line">    <span class="comment">//约束，有人帮我们实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 不能new这个抽象类，只能考子类去实现它：约束。</span></span><br><span class="line">    <span class="comment">// 2. 抽象类中可以写普通方法</span></span><br><span class="line">    <span class="comment">// 3. 抽象方法必须在抽象类中</span></span><br><span class="line">    <span class="comment">//抽象的抽象：约束</span></span><br><span class="line">    <span class="comment">//思考： 抽象方法存在构造器吗？</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test类</span></span><br><span class="line"><span class="comment">//抽象类的所有方法，继承了它的子类，都必须要实现它的方法，除非子类也是抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Action</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="接口的定义与实现"><a href="#接口的定义与实现" class="headerlink" title="接口的定义与实现"></a>接口的定义与实现</h3><ul><li>普通类：只有具体实现</li><li>抽象类：具体实现和规范(抽象方法)都有。</li><li>接口：只有规范。</li></ul><ul><li><p>接口就是规范，定义的是一组规则，体现了现实世界中”如果你是…则必须能…”的思想(例如：如果你是车，则必须能跑)</p></li><li><p>接口的本质是七月，就像人类社会的法律一样。制定好后大家都遵守。</p></li><li><p>OO的精髓，是对对象的抽象，最能体现这一点的就是接口。为什么我们讨论设计模式都只针对具备了抽象能力的语言(如：C++,Java,C#等)，就是因为设计模式所研究的，实际上就是如何合理的去抽象。</p></li><li><p><strong>声明类的关键字是<code>class</code>，声明接口的关键字是<code>interface</code></strong></p></li><li><p>接口的作用：</p><ul><li>约束</li><li>定义一些方法，让不同的人实现</li><li>public abstract</li><li>public static final</li><li>接口不能被实例化，接口中没有构造方法</li><li>implements可以实现多个接口</li><li>必须要重写接口中方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserService接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//接口中所有对象都是抽象的 修饰符默认public</span></span><br><span class="line">    <span class="comment">//接口中定义的是常量，一般不会这样定义</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(String name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(String age)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//TimeService接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TimeService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">time</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用接口实现多继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span>,<span class="title">TimeService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(String age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">time</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="N种内部类"><a href="#N种内部类" class="headerlink" title="N种内部类"></a>N种内部类</h3><ul><li>内部类就是在一个类的内部再定义一个类，比如，A类中定义一个B类，那么B类相对A类来说就称为内部类，而A类相对B类来说就是外部类。</li></ul><ul><li><p>成员内部类</p></li><li><p>静态内部类</p></li><li><p>局部内部类</p></li><li><p>匿名内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;外部类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//全员内部类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内部类&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得外部类的私有属性</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getId</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//局部内部类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//没有名字初始化类,不用将实例保存到变量中</span></span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">        <span class="keyword">new</span> Apple().eat();</span><br><span class="line"></span><br><span class="line">       UserService us = <span class="keyword">new</span> UserService()&#123;</span><br><span class="line">            <span class="comment">//重写方法</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一个java类中可以有多个class类，但只能有一个public的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//匿名内部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Application类main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Outer out = <span class="keyword">new</span> Outer();</span><br><span class="line">        <span class="comment">//通过这个外部类来实例化内部类</span></span><br><span class="line">        Outer.Inner inner =out.<span class="function">new <span class="title">Inner</span><span class="params">()</span></span>;</span><br><span class="line">        inner.in();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java面向对象(上)</title>
      <link href="/2021/08/14/javaSE1_6/"/>
      <url>/2021/08/14/javaSE1_6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=60">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h3><ul><li>面向过程思想：<ul><li>步骤清晰简单，第一步，第二布…</li><li>面对过程适合处理一些较为简单的问题。</li></ul></li><li>面向对象思想：<ul><li>物以类聚，分类的思维模式，思考问题首先会解决问题需要哪些分类，然后对这些分类进行单独思考。最后，才对某个分类下的细节进行面向过程的思索。</li><li>面向对象适合处理复杂的问题，适合处理需要多人协作的问题!</li></ul></li><li><strong>对于描述复杂的事物，为了从宏观上把握、从整体上合理分析，我们需要使用面向对象的思路来分析整个系统。但是，具体到微观操作，任然需要面向过程的思路去处理。</strong></li></ul><ul><li><p>面向对象编程(Object-Oriented Programming,OOP)</p></li><li><p>面向对象编程的本质就是：<strong>以类的方式组织代码，以对象的组织(封装)数据。</strong></p></li><li><p>抽象</p></li><li><p>三大特性：</p><ul><li><strong>封装</strong></li><li><strong>继承</strong></li><li><strong>多态</strong></li></ul></li><li><p>从认知论角度考虑是先有对象后有类。对象，是具体的事物。类，是抽象的，是对对象的抽象。</p></li><li><p>从代码运行角度考虑是现有类后又对象。类是对象的模板。</p></li></ul><h3 id="回顾方法的定义"><a href="#回顾方法的定义" class="headerlink" title="回顾方法的定义"></a>回顾方法的定义</h3><ul><li><p>方法的定义：</p><ul><li>修饰符</li><li>返回类型</li><li>break和return的区别</li><li>方法名</li><li>参数列表</li><li>异常抛出</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    修饰符 返回值类型 方法名(...)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a&gt;b?a:b; <span class="comment">//三元运算符</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//抛出异常</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFile</span><span class="params">(String file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="回顾方法的调用"><a href="#回顾方法的调用" class="headerlink" title="回顾方法的调用"></a>回顾方法的调用</h3><ul><li><p>方法的调用：</p><ul><li>静态方法</li><li>非静态方法</li><li>形参和实参</li><li>值传递和引用传递</li><li>this关键字</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/14 - 18:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态方法 static</span></span><br><span class="line">    <span class="comment">//非静态</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//  Student student = new Student();</span></span><br><span class="line">     <span class="comment">//  student.say();</span></span><br><span class="line">      <span class="keyword">int</span> a= add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">      System.out.println(a);</span><br><span class="line">      <span class="comment">//值传递</span></span><br><span class="line">      <span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">      System.out.println(b);<span class="comment">//1</span></span><br><span class="line">      Demo02.change(b);</span><br><span class="line">      System.out.println(b);<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//引用传递</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        System.out.println(person.name);<span class="comment">//null</span></span><br><span class="line">        Demo02.change(person);</span><br><span class="line">        System.out.println(person.name);<span class="comment">//引用传递值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//static和类一起加载</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//b();</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//类实例化之后才存在</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//形参</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//传递值,返回值为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        b=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(Person person)</span></span>&#123;</span><br><span class="line">        <span class="comment">//person是一个对象，修改类Person类里的全局变量name</span></span><br><span class="line">        person.name=<span class="string">&quot;引用传递值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义了一个Person类，有一个属性 name</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    String name;<span class="comment">//null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="类与对象的创建"><a href="#类与对象的创建" class="headerlink" title="类与对象的创建"></a>类与对象的创建</h3><p><strong>类与对象的关系：</strong></p><ul><li>类是一种抽象的数据类型，它是对某一类事物整体描述/定义，但是并不能代表某一个具体的事物。<ul><li>动物、植物、手机、电脑….</li><li>Person类、Pet类、Car类等，这些类都是用来描述/定义某一类具体的事物应该具备的特点和行为。</li></ul></li><li>对象是抽象概念的具体实例<ul><li>张三就是人的一个具体实例，张三家里的旺财就是狗的一个具体实例。</li><li>能够体现出特点，展现出功能的是具体的实例，而不是一个抽象的概念。</li></ul></li></ul><p><strong>创建与初始化对象：</strong></p><ul><li><p><strong>使用new关键字创建对象</strong></p></li><li><p>使用new关键字创建的时候，除了分配内存空间之外，还会给创建好的对象进项默认的初始化以及对类中构造器的调用。</p></li><li><p>类中的构造器也称为构造方法，实在进行创建对象的时候必须要调用的。并且构造器有以下两个特点：</p><ul><li>必须和类的名字相同</li><li>必须没有返回类型，也不能写void</li></ul></li><li><p><strong>构造器必须要掌握</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Application类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//类：抽象的，实例化new</span></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        student.name=<span class="string">&quot;小明&quot;</span>;</span><br><span class="line">        student.age=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(student.name);</span><br><span class="line">        System.out.println(student.age);</span><br><span class="line"></span><br><span class="line">        student1.name=<span class="string">&quot;小红&quot;</span>;</span><br><span class="line">        student1.age=<span class="number">9</span>;</span><br><span class="line">        System.out.println(student1.name);</span><br><span class="line">        System.out.println(student1.age);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Student类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性：字段</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name+<span class="string">&quot;在学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学生上课偷偷说话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="构造器详解"><a href="#构造器详解" class="headerlink" title="构造器详解"></a>构造器详解</h3><ul><li><p>构造器</p><ul><li>和类名相同</li><li>没有返回值</li></ul></li><li><p>作用：</p><ul><li>new 本质在调用构造方法</li><li>初始画对象的值</li></ul></li><li><p>注意：</p><ul><li>定义有参构造后，如果想用无参，显示的定义一个无参构造</li></ul></li><li><p>实例化初始值：</p><ul><li>使用new关键字，本质是在调用构造器</li><li>用来初始化值</li><li>alt+ins(insert) 生成构造器快捷键</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个类即使什么都不写，也会存在一个方法，为构造器</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//实例化初始值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Persons</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">// this.name = &quot;构造器测试名字&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造  一旦定义有参构造，无参构造就必须显示定义</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Persons</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//实例化对象</span></span><br><span class="line">       <span class="comment">// Persons person = new Persons();</span></span><br><span class="line">        Persons person = <span class="keyword">new</span> Persons(<span class="string">&quot;有参构造&quot;</span>);</span><br><span class="line">        System.out.println(person.name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建对象内存分析"><a href="#创建对象内存分析" class="headerlink" title="创建对象内存分析"></a>创建对象内存分析</h3><ul><li><p>创建对象内存简单分析</p><p><a href="https://imgtu.com/i/f612kt"><img src="https://z3.ax1x.com/2021/08/14/f612kt.png" alt="f612kt.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pet类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pet</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;叫了一声&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pet dog = <span class="keyword">new</span> Pet();</span><br><span class="line">        dog.name=<span class="string">&quot;二狗&quot;</span>;</span><br><span class="line">        dog.age = <span class="number">3</span>;</span><br><span class="line">        dog.shout();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="简单小结类与对象"><a href="#简单小结类与对象" class="headerlink" title="简单小结类与对象"></a>简单小结类与对象</h3><ul><li>类与对象：<ul><li>类是一个模板：抽象，对象是一个具体的实例。</li></ul></li><li>方法：<ul><li>定义，调用</li></ul></li><li>对应的引用：<ul><li>引用类型：基本类型</li><li>对象是通过引用来操作的：栈 -&gt; 堆</li></ul></li><li>属性：字段Field  成员变量<ul><li>默认初始化：<ul><li>数字：0  0.0</li><li>char：u0000</li><li>boolean：false</li><li>引用：null</li></ul></li><li>修饰符：属性类型 属性名 =属性值</li></ul></li><li>对象的创建和使用<ul><li>必须使用new关键字创建对象，构造器 </li><li>对象的属性</li><li>对象的方法</li></ul></li><li>类：<ul><li>静态的属性</li><li>动态的方法</li></ul></li></ul><h3 id="封装详解"><a href="#封装详解" class="headerlink" title="封装详解"></a>封装详解</h3><ul><li><p>该露的露，该藏的藏</p><ul><li>我们程序设计要追求”<strong>高内聚，低耦合</strong>“。高内聚就是类的内部数据操作细节自己完成，不允许外部干涉；低耦合：仅暴露少量的方法给外部使用。</li></ul></li><li><p>封装（数据的隐藏）</p><ul><li>通常，应该禁止直接访问一个对象中数据的实际表示，而通过操作接口来访问，这称谓信息隐藏。</li></ul></li><li><p>记住这句话：<strong>属性私有，get/set</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//private 私有</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     封装的优势：</span></span><br><span class="line"><span class="comment">     1. 提高程序的安全性，保护数据</span></span><br><span class="line"><span class="comment">     2. 隐藏代码的实现细节</span></span><br><span class="line"><span class="comment">     3. 同意接口</span></span><br><span class="line"><span class="comment">     4. 系统可维护性增加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//名字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;    <span class="comment">//学号</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> set;  <span class="comment">//性别</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//get/set方法</span></span><br><span class="line">    <span class="comment">//get获取这个数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Students st = <span class="keyword">new</span> Students();</span><br><span class="line">        st.setName(<span class="string">&quot;通过set赋值name&quot;</span>);</span><br><span class="line">        System.out.println(st.getName());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="什么是继承"><a href="#什么是继承" class="headerlink" title="什么是继承"></a>什么是继承</h3><ul><li>继承的本质是对某一批类的抽象，从而实现对像是世界更好的建模。</li><li><code>extands</code>的意思是”扩展”。子类是父类的扩展。</li><li>Java中类只有单继承，没有多继承！</li></ul><ul><li>继承是类和类之前的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等</li><li>继承关系的两个类，一个为子类(派生类)，一个为父类(基类)。子类继承父类，使用关键字<code>extends</code>来表示。</li><li>子类和父类之间，从意义上将应该具有”is a”的关系。</li></ul><ul><li><p>object类(每个类都默认继承)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承</span></span><br><span class="line">     Person01 per = <span class="keyword">new</span> Person01();</span><br><span class="line">     <span class="comment">//name是persons中定义的</span></span><br><span class="line">     <span class="comment">// 当person01继承persons时也可使用其中公共的方法等</span></span><br><span class="line">     per.name=<span class="string">&quot;222&quot;</span>;</span><br><span class="line">     System.out.println(per.name);</span><br><span class="line">     <span class="comment">//Java中所有的类都默认继承Object</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="super详解"><a href="#super详解" class="headerlink" title="super详解"></a>super详解</h3><ul><li><p>super </p><ul><li>super调用父类的构造方法，必须在构造方法的第一个。</li><li>super必须出现在子类的方法或构造方法中。</li><li>super和this不能同时调用构造方法。</li></ul></li><li><p>this</p><ul><li>代表的对象不同，this调用本对象，super调用父类的应用。</li><li>this没有继承也可以用，super只能在继承条件才可以使用。</li><li>  <code>this();</code>本类的构造，<code>super();</code>父类的构造。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person01</span> <span class="keyword">extends</span> <span class="title">Persons</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name1=<span class="string">&quot;子类super&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(String name1)</span></span>&#123;</span><br><span class="line">        System.out.println(name1);<span class="comment">//传输的值</span></span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name1);<span class="comment">//当前类的值</span></span><br><span class="line">        System.out.println(<span class="keyword">super</span>.name1);<span class="comment">//父类的值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类print方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法也可访问</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        print();</span><br><span class="line">        <span class="keyword">this</span>.print();</span><br><span class="line">        <span class="keyword">super</span>.print();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">//隐藏代码：调用了父类的无参构造</span></span><br><span class="line">        <span class="keyword">super</span>();<span class="comment">//这里默认隐藏了，必须在第一行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;person01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//main</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//super</span></span><br><span class="line">        Person01 per = <span class="keyword">new</span> Person01();</span><br><span class="line">        per.test(<span class="string">&quot;main测试super&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="方法的重写"><a href="#方法的重写" class="headerlink" title="方法的重写"></a>方法的重写</h3><ul><li><p>重写需要有继承关系，子类重写父类的方法。</p></li><li><p>重写要求：</p><ul><li>方法名必须相同。</li><li>参数列表必须相同</li><li>修饰服：范围可扩大但不能缩小。(public&gt;protected&gt;default&gt;private)</li><li>抛出的异常：范围可以被缩小但不能扩大。</li></ul></li><li><p>重写子类的方法必须和父类一致，方法体不同。</p></li><li><p>重写原因：</p><ul><li>父类的功能，子类不一定需要或不能满足子类需求。</li><li>Alt+Ins ：override</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//A类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A-&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//B类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="comment">//重写都是方法的重写</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B-&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//方法重写</span></span><br><span class="line">        A a = <span class="keyword">new</span> A();</span><br><span class="line">        a.test();</span><br><span class="line">        <span class="comment">//有继承关系后，父类的引用指向了子类</span></span><br><span class="line">        B b = <span class="keyword">new</span> A();</span><br><span class="line">        b.test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java数组</title>
      <link href="/2021/08/13/javaSE1_5/"/>
      <url>/2021/08/13/javaSE1_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=51">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h3><ul><li>数组是相同类型数据的有序集合。</li><li>数组描述的是相同类型的若干个数据，按照一定的先后次序排列组合而成。</li><li>其中，每一个数据称作一个数组元素，每个数组元素可以通过一个下标来访问它们。</li></ul><h3 id="数组的声明和创建"><a href="#数组的声明和创建" class="headerlink" title="数组的声明和创建"></a>数组的声明和创建</h3><ul><li><p>首先必须声明数组变量，才能在程序中使用数组。下面是声明数组变量的语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar;  <span class="comment">//首选的方法</span></span><br><span class="line">dataType arrayRefVar[];  <span class="comment">//效果相同，但不是首选方法</span></span><br></pre></td></tr></table></figure></li><li><p>Java语言使用new操作符来创建数组，语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> dataType[arraySize];</span><br></pre></td></tr></table></figure></li><li><p>数组的元素是通过索引访问的，数组索引从0开始。</p></li><li><p>获取数组长度：<code>arrays.length</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line">       <span class="keyword">int</span> [] array;<span class="comment">//定义</span></span><br><span class="line">  </span><br><span class="line">       array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line">  </span><br><span class="line">       array[<span class="number">0</span>]=<span class="number">12</span>;</span><br><span class="line">       array[<span class="number">1</span>]=<span class="number">11</span>;</span><br><span class="line">       array[<span class="number">2</span>]=<span class="number">13</span>;</span><br><span class="line">       array[<span class="number">3</span>]=<span class="number">21</span>;</span><br><span class="line">       array[<span class="number">4</span>]=<span class="number">22</span>;</span><br><span class="line">       array[<span class="number">5</span>]=<span class="number">11</span>;</span><br><span class="line">       System.out.println(array[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure></li></ul><h3 id="三种初始化及内存分析"><a href="#三种初始化及内存分析" class="headerlink" title="三种初始化及内存分析"></a>三种初始化及内存分析</h3><p><strong>内存分析：</strong></p><ul><li><p>Java内存分析：</p><p><a href="https://imgtu.com/i/fDacXF"><img src="https://z3.ax1x.com/2021/08/13/fDacXF.png" alt="fDacXF.png"></a></p></li><li><p>写代码画图分析内存</p><p><a href="https://imgtu.com/i/fDDcdg"><img src="https://z3.ax1x.com/2021/08/13/fDDcdg.md.png" alt="fDDcdg.md.png"></a></p></li></ul><p><strong>三种初始化：</strong></p><ul><li><p>静态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[]a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">Man[] mans = &#123;<span class="keyword">new</span> Man(<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">new</span> Man(<span class="number">2</span>,<span class="number">2</span>)&#125;;</span><br></pre></td></tr></table></figure></li><li><p>动态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">2</span>;</span><br></pre></td></tr></table></figure></li><li><p>数组的默认初始化：</p><ul><li>数组是引用类型，它的元素相当于类的实例变量，因此数组一经分配空间，其中的每个元素也被按照实例变量同样的方式被隐式初始化。</li></ul></li></ul><h3 id="下表越界及小结"><a href="#下表越界及小结" class="headerlink" title="下表越界及小结"></a>下表越界及小结</h3><p><strong>数组的四个基本特点：</strong></p><ul><li>其长度是确定的。数组一旦被创建，它的大小就是不可改变的。</li><li>其元素必须是相同类型，不允许出现混合类型。</li><li>数组中的元素可以是任何数组类型，包括基本类型和引用类型。</li><li>数组变量为引用类型，数组也可以看成是对象，数组中的每个元素相当于该对象的成员变量。数组本身就是对象，Java中对象是在堆中的，因此数组无论保存原始类型还是其他对象类型，<strong>数组对象本身是在堆中的</strong>。</li></ul><p><strong>数组边界：</strong></p><ul><li><p>下标的合法区间：[0,length-1],如果越界就会报错；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[]a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    System.out.println(a[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong><code>ArrayIndexOutOfBoundsException</code>:数组下标越界异常！</strong></p></li><li><p>小结：</p><ul><li>数组是相同数据类型(数组类型可以为任意类型)的有序集合。</li><li>数组也是对象。数组元素相当于对象的成员变量。</li><li>数组长度是确定的、不可变的。如果越界，则报异常：<code>ArrayIndexOutofBounds</code></li></ul></li></ul><h3 id="数组的使用"><a href="#数组的使用" class="headerlink" title="数组的使用"></a>数组的使用</h3><ul><li><p>普通循环遍历数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[]arrays = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">//打印全部数组元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">            System.out.println(arrays[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算所有元素的和</span></span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">            sum+=arrays[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和：&quot;</span>+sum);</span><br><span class="line">        <span class="comment">//查找最大元素</span></span><br><span class="line">        <span class="keyword">int</span> max = arrays[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arrays[i]&gt;max)&#123;</span><br><span class="line">                max=arrays[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大数：&quot;</span>+max);</span><br></pre></td></tr></table></figure></li><li><p>For-Each循环</p></li><li><p>数组作方法入参</p></li><li><p>数组作返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[]arrays = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//增强for循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> array : arrays) &#123;</span><br><span class="line">        System.out.println(array);</span><br><span class="line">    &#125;</span><br><span class="line">    printArray(arrays);</span><br><span class="line">    System.out.println(<span class="string">&quot;=============&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span>[] arrayR=reverse(arrays);</span><br><span class="line">    printArray(arrayR);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印数组元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[]arrays)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">        System.out.println(arrays[i]+<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//反转数组</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] reverse(<span class="keyword">int</span>[]arrays)&#123;</span><br><span class="line">    <span class="keyword">int</span>[]arrayR = <span class="keyword">new</span> <span class="keyword">int</span>[arrays.length];</span><br><span class="line">    <span class="comment">//一个for循环定义两个变量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>,j = arrayR.length-<span class="number">1</span>; i &lt;arrays.length ; i++,j--) &#123;</span><br><span class="line">       arrayR[j]=arrays[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arrayR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="二位数组"><a href="#二位数组" class="headerlink" title="二位数组"></a>二位数组</h3><ul><li><p>多维数组可以看成是数组的数组，比如二位数组就是一个特殊的一维数组，其每一个元素都是一个一维数组。</p></li><li><p>二位数组</p><p><code>int a[][] = new int [2][5];</code></p></li><li><p>解析：二位数组a可以看成一个两行三列的数组。</p></li><li><p>思考：多维数组的使用？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二维数组使用</span></span><br><span class="line">       <span class="keyword">int</span>[][] array = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array[i].length; j++) &#123;</span><br><span class="line">               System.out.println(array[i][j]);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Arrays类讲解"><a href="#Arrays类讲解" class="headerlink" title="Arrays类讲解"></a>Arrays类讲解</h3><ul><li><p>数组的工具类<code>java.util.Arrays</code></p></li><li><p>用于数组对象本身并没有什么方法可以供我们调用，但API中提供了一个工具类Arrays供我们使用，从而可以对数据对象进行一些基本的操作。</p></li><li><p>查看JDK帮助文档。</p></li><li><p>Arrays类中的方法都是static修饰的静态方法，在使用的时候可以直接使用类名进行调用，而”不用”对象来调用(不用!=不能)。</p></li><li><p>具有以下常用功能：</p><ul><li>给数组赋值：通过fill方法。</li><li>对数组排序：通过sort方法，按升序。</li><li>比较数组：通过equals方法比较数组中元素值是否相等。</li><li>查找数组元素：通过<code>binarySearch</code>方法能对排序好的数组进行二分查找法操作。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> []a=&#123;<span class="number">12312</span>,<span class="number">451241</span>,<span class="number">3</span>,<span class="number">422</span>,<span class="number">3</span>,<span class="number">66</span>,<span class="number">12312</span>,<span class="number">534534</span>,<span class="number">98</span>&#125;;</span><br><span class="line">       <span class="comment">//打印数组元素Arrays.toString()</span></span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        System.out.println(<span class="string">&quot;=============================================&quot;</span>);</span><br><span class="line">        printArray(a);<span class="comment">//调用方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组排序  Arrays.sort() 升序</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================================&quot;</span>);</span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组填充  Arrays.fill</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================================&quot;</span>);</span><br><span class="line">        Arrays.fill(a,<span class="number">0</span>);</span><br><span class="line">        Arrays.fill(a,<span class="number">2</span>,<span class="number">5</span>,<span class="number">66</span>);<span class="comment">//2~5之间被66填充</span></span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//自定义Arrays.toString()打印数组方法</span></span><br><span class="line">    <span class="comment">//不要重复造轮子</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[]arr)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; arr.length;i++) &#123;</span><br><span class="line">             <span class="keyword">if</span>(i==arr.length-<span class="number">1</span>)&#123;</span><br><span class="line">                 System.out.print(arr[i]+<span class="string">&quot;]\n&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">                 System.out.print(<span class="string">&quot;[&quot;</span>+arr[i]+<span class="string">&quot;, &quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 System.out.print(arr[i]+<span class="string">&quot;, &quot;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><ul><li><p>冒泡排序无疑是最为出名的排序算法之一，总共有八大排序。</p><p><a href="https://imgtu.com/i/frWj2D"><img src="https://z3.ax1x.com/2021/08/13/frWj2D.gif" alt="frWj2D.gif"></a></p></li><li><p>冒泡的代码还是相当简单的，两层训话你，外层冒泡轮数，里层依次比较，几乎人尽皆知。</p></li><li><p>我们看到嵌套循环，应该立马就可以得出这个算法的<strong>时间的复杂度为O(n^2)。</strong></p></li><li><p><strong>思考：如何优化？</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span>[] a=&#123;<span class="number">3</span>,<span class="number">42</span>,<span class="number">6</span>,<span class="number">56</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">4</span>,<span class="number">32</span>,<span class="number">9</span>&#125;;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">int</span> []sort=sort(a);</span><br><span class="line">       System.out.println(Arrays.toString(sort));</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">       <span class="comment">//冒泡排序</span></span><br><span class="line">       <span class="comment">//1.比较数组中两个相领的元素，第二个比第一个大，就交换位置</span></span><br><span class="line">       <span class="comment">//2.每次比较都会产生一个最大或者最小的数字</span></span><br><span class="line">       <span class="comment">//3.下一轮则可以少一次排序，依次循环</span></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sort(<span class="keyword">int</span>[]array)&#123;</span><br><span class="line">       <span class="comment">//临时变量</span></span><br><span class="line">       <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">       <span class="comment">//外层循环</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">           <span class="comment">//内层循环，如果第一个比第二个大，则交换位置</span></span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-<span class="number">1</span>-i; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span>(array[j+<span class="number">1</span>]&lt;array[j])&#123;</span><br><span class="line">                   temp=array[j];</span><br><span class="line">                   array[j]=array[j+<span class="number">1</span>];</span><br><span class="line">                   array[j+<span class="number">1</span>]=temp;</span><br><span class="line">                   flag=<span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//简单优化，减少不必要的循环</span></span><br><span class="line">           <span class="keyword">if</span>(flag==<span class="keyword">false</span>)&#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> array;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h3><ul><li><p>需求：编写五子棋游戏中，有存盘退出和续上盘的功能。</p><p><a href="https://imgtu.com/i/frDbUe"><img src="https://z3.ax1x.com/2021/08/13/frDbUe.png" alt="frDbUe.png"></a></p></li><li><p>分析问题：因为该二位数组的很多值默认为0，因此记录了很多没有意义的数据。</p></li><li><p>解决：稀疏数组。</p></li></ul><p><strong>稀疏数组介绍：</strong></p><ul><li><p>当一个数组中大部分元素为0，或者为同一值的数组时，可以使用稀疏数组来保存该数组。</p></li><li><p>稀疏数组的处理方式时：</p><ul><li>记录数组一共有几行几列，有多少个不同值。</li><li>把具有不同值的元素和行列及值记录在一个小规模的数组中，从而缩小程序的规模。</li></ul></li><li><p>如下图：左边是原始数组，右边是稀疏数组。</p><p><a href="https://imgtu.com/i/fryq5F"><img src="https://z3.ax1x.com/2021/08/13/fryq5F.png" alt="fryq5F.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//创一个二位数组11*11  0：没旗子 1：黑棋 2：白棋</span></span><br><span class="line">       <span class="keyword">int</span> [][] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">       array1[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">       array1[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">2</span>;</span><br><span class="line">       <span class="comment">//输出原始数组</span></span><br><span class="line">       System.out.println(<span class="string">&quot;输出原始数组&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : array1) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">               System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//转换为稀疏数组</span></span><br><span class="line">       <span class="comment">//1.获取有效值个数</span></span><br><span class="line">       <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span>(array1[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                   sum++;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;有效值的个数：&quot;</span>+sum);</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//2. 创建一个稀疏数组</span></span><br><span class="line">       <span class="keyword">int</span>[][] array2= <span class="keyword">new</span> <span class="keyword">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">  </span><br><span class="line">       array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">       array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">       array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//遍历二维数组，将非零的值存入稀疏数组</span></span><br><span class="line">       <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array1[i].length; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span>(array1[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                   count++;</span><br><span class="line">                   array2[count][<span class="number">0</span>]=i;</span><br><span class="line">                   array2[count][<span class="number">1</span>]=j;</span><br><span class="line">                   array2[count][<span class="number">2</span>]=array1[i][j];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;输出稀疏数组&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">           System.out.println(array2[i][<span class="number">0</span>]+<span class="string">&quot;\t&quot;</span>+</span><br><span class="line">                   array2[i][<span class="number">1</span>]+<span class="string">&quot;\t&quot;</span>+</span><br><span class="line">                   array2[i][<span class="number">2</span>]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;======================&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;还原&quot;</span>);</span><br><span class="line">       <span class="comment">//1.读取稀疏数组</span></span><br><span class="line">       <span class="keyword">int</span>[][] array3 = <span class="keyword">new</span> <span class="keyword">int</span> [array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">       <span class="comment">//2. 给其中的元素还原值</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">           array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]]=array2[i][<span class="number">2</span>];</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//输出原始数组</span></span><br><span class="line">       System.out.println(<span class="string">&quot;输出原始数组&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : array3) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">               System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java方法</title>
      <link href="/2021/08/12/javaSE1_4/"/>
      <url>/2021/08/12/javaSE1_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=45">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h3><ul><li><p><code>System.out.println()</code>,那么它是什么呢？</p></li><li><p>Java方法是语句的集合，它们在一起执行一个功能</p><ul><li>方法是解决一类问题的步骤的有序组合</li><li>方法包含于类或对象中</li><li>方法在程序中被创建，在其他地方被引用</li></ul></li><li><p>设计方法的原则：方法的本意是功能块，就是实现某个功能的语句块的集合。我们设计方法的时候，最好保持方法的原子性，<strong>就是一个方法只完成1个功能，这样利于我们后期的扩展。</strong></p></li><li><p>回顾：方法的命名规则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//      int sum=  add(1,2);</span></span><br><span class="line"><span class="comment">//        System.out.println(sum);</span></span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//练习2：用while或for循环输出1~1000之间能被5整除的数，并且每行输出3个</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i%(<span class="number">5</span>*<span class="number">3</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();<span class="comment">//换行</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><p><strong>方法的定义：</strong></p><ul><li><p>Java的方法类似于其他语言的函数，<strong>是一段用来完成特定功能的代码片段</strong>，一般情况下，定义一个方法包含以下语法：</p></li><li><p>方法包含一个方法头和一个方法体，下面是一个方法的所有部分:</p><ul><li>修饰符：修饰符是可选的，告诉编译如何调用该方阿飞，定义了该方法的访问类型。</li><li>返回值类型：方法可能会有返回值，<code>returnValueType</code>是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。这种情况下，<code>returnValueType</code>是关键字<code>void</code></li><li>方法名：是方法的实际名称，方法名和参数表共同构成方法签名。</li><li>参数类型：参数像是一个占位符。当方法被调用时，传递值给参数，这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。<ul><li>形式参数：在方法被调用时用于接收外界输入的数据。</li><li>实参：调用方法时实际传给方法的数据。</li></ul></li><li>方法体：方法体包含具体的语句，定义该方法的功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰服 返回值类型 参数名(参数类型 参数名)&#123;</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>练习：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = max(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//比大小</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> number1,<span class="keyword">int</span> number2)</span></span>&#123;</span><br><span class="line">       <span class="keyword">int</span> result =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(number1&gt;number2)&#123;</span><br><span class="line">            result = number1;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(number1&lt;number2)&#123;</span><br><span class="line">            result= number2;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;二者相等&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>方法调用：</strong></p><ul><li><p>调用方法：对象名.方法名(实参列表)。</p></li><li><p>Java支持两种调用方法的方式，根据方法是否返回值来选择。</p></li><li><p>当方法返回一个值的时候，方法调用通常被当作一个值，例如：</p><p><code>int larger = max(30,40);</code></p></li><li><p>如果方法返回值时<code>void</code>,方法调用一定时一条语句。</p><p><code>System.out.println(&quot;Hello World&quot;);</code></p></li><li><p>拓展：值传递(Java)和引用传递</p></li></ul><h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h3><ul><li><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数。</p></li><li><p>方法重载的规则：</p><ul><li>方法名称必须相同</li><li>参数列表必须不同(个数不同、或类型不同、参数排列顺序不同等）</li><li>方法的返回类型可以相同也可以不同</li><li>仅仅返回类型不同不足以称谓方法的重载</li></ul></li><li><p>实现理论：</p><ul><li>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//int max = max(20,30);</span></span><br><span class="line">    <span class="keyword">double</span> max = max(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">    System.out.println(max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//比大小</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">double</span> number1,<span class="keyword">double</span> number2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> result =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(number1&gt;number2)&#123;</span><br><span class="line">        result = number1;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(number1&lt;number2)&#123;</span><br><span class="line">        result= number2;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;二者相等&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//比大小</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> number1,<span class="keyword">int</span> number2)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> result =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(number1&gt;number2)&#123;</span><br><span class="line">        result = number1;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(number1&lt;number2)&#123;</span><br><span class="line">        result= number2;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;二者相等&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="命令行传递参数"><a href="#命令行传递参数" class="headerlink" title="命令行传递参数"></a>命令行传递参数</h3><ul><li><p>有时候你希望运行一个程序的时候再传递给它消息。这要靠传递命令行参数给main()实现。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandLine</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []ages)</span></span>&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]:&quot;</span>+args[i]);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><ul><li><p>JDK 1.5开始，Java支持传递同类型的可变参数给一个方法。</p></li><li><p>再方法声明中，再指定参数类型后加一个省略号(…)。</p></li><li><p>一个方法中只能指定一个可变参数，它必须时方法的最后一个参数。任何普通的参数必须在它之前声明。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMax</span><span class="params">(<span class="keyword">double</span>... numbers)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(numbers.length ==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;No argument passed&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> result = numbers[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;numbers.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers[i]&gt;result)&#123;</span><br><span class="line">            result = numbers[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;The max value is&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="递归讲解"><a href="#递归讲解" class="headerlink" title="递归讲解"></a>递归讲解</h3><ul><li>A方法调用B方法，我们很容易理解。</li><li>递归就是：A方法调用A方法。就是自己调用自己。</li></ul><ul><li>利用递归可以用简单的程序来解决一些复杂的问题。它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少程序的代码量。递归的能力在于用有限的语句来定义对象的无线集合。</li></ul><ul><li><p>递归结构包括两个部分：</p><ul><li>递归头：什么时候部调用自身方法。如果没有头，将陷入死循环。</li><li>递归体：什么时候需要调用自身方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//5!  阶乘</span></span><br><span class="line">        System.out.println(f(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="拓展作业："><a href="#拓展作业：" class="headerlink" title="拓展作业："></a>拓展作业：</h3><ul><li>写一个计算器，要求实现加减乘除功能，并且能够循环接收新的数据，通过用户交互实现。</li></ul><ul><li><p>思路：</p><ul><li>写4方法：加减乘除</li><li>利用循环+switch进行用户交互</li><li>传递需要操作的两个数</li><li>输出结果</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简易计算器</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入第一个数字&quot;</span>);</span><br><span class="line">       <span class="keyword">int</span> oneN = scanner.nextInt();</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入第二个数字&quot;</span>);</span><br><span class="line">       <span class="keyword">int</span> twoN = scanner.nextInt();</span><br><span class="line">       System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;1.加&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;2.减&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;3.乘&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;4.除&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;输入数字选择计算方式&quot;</span>);</span><br><span class="line">       <span class="keyword">int</span> put = scanner.nextInt();</span><br><span class="line">       <span class="keyword">if</span>(put==<span class="number">1</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;和为：&quot;</span>+(oneN+twoN));</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(put==<span class="number">2</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;差为：&quot;</span>+(oneN-twoN));</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(put==<span class="number">3</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;积为：&quot;</span>+(oneN*twoN));</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(put==<span class="number">4</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;商为：&quot;</span>+(oneN/twoN));</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;输入不合法&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java流控制</title>
      <link href="/2021/08/11/javaSE1_3/"/>
      <url>/2021/08/11/javaSE1_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=33">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="用户交互Scanner"><a href="#用户交互Scanner" class="headerlink" title="用户交互Scanner"></a>用户交互Scanner</h3><p><strong>Scanner对象：</strong></p><ul><li><p>之前学习基本语法中我们并没有实现程序和人的交互，但是Java给我们提供了这样一个工具类，我们可以获取用户的输入，java.util.Scanner是Java5的新特征，可以通过Scanner类来获取用户的输入。</p></li><li><p>基本语法：</p><p><code>Scanner scanner = new Scanner(System.in);</code></p></li><li><p>通过Scanner类的next()与nextLine()方法获取输入的字符串，再读取前我们一般需要使用hasNext()与hasNextLine()判断是否还有输入的数据。</p></li></ul><ul><li><strong>next():</strong><ul><li>1、一定要读取到有效字符后才可以结束输入。</li><li>2、对输入有效字符之前遇到的空白，next()方法会自动将其去掉。</li><li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li><strong>next()不能得到带有空格的字符串</strong>。</li></ul></li></ul><ul><li><p><strong>nextLine():</strong></p><ul><li>1、以Enter为结束符，也就是说nextLine()方法返回的是输入回车之前的所有字符。</li><li>2、可以获得空白内容。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 14:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;使用next方式接收：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">        <span class="comment">//hasNextLine 为判断接收的内容是否有下一行</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="comment">//使用next接收</span></span><br><span class="line">            String str = scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出内容：&quot;</span>+str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用完关闭io流</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Scanner进阶使用"><a href="#Scanner进阶使用" class="headerlink" title="Scanner进阶使用"></a>Scanner进阶使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 15:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从键盘接收数据</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">0.0f</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            i=scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;整数数据：&quot;</span>+i);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是整数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入小数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextFloat())&#123;</span><br><span class="line">            f=scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;小数数据：&quot;</span>+f);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是小数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 15:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//我们可以输入多个数字，并求其综合与平均数，每输入一个数字用回车确认，通过输入非数字结束输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);</span><br><span class="line">        <span class="comment">//和</span></span><br><span class="line">        <span class="keyword">double</span> sum =<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//计算输入了多少数字</span></span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//通过循环判断你是否还有输入，并再里面对每一次进行求和</span></span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNextDouble())&#123;</span><br><span class="line">            <span class="keyword">double</span> x = scanner.nextDouble();</span><br><span class="line">            m++;<span class="comment">//m=++m  m=m+1</span></span><br><span class="line">            sum = sum+x;</span><br><span class="line">            System.out.println(<span class="string">&quot;你输入第&quot;</span>+m+<span class="string">&quot;个数据，结果sum为&quot;</span>+sum);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(m+<span class="string">&quot;个数的和为&quot;</span>+sum);</span><br><span class="line">        System.out.println(m+<span class="string">&quot;个数的平均值是&quot;</span>+(sum / m));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h3><ul><li>Java的基本结构就是顺序结构，除非特别指明，否则就按照顺序一句一句执行。</li><li>顺序结构是最简单的算法结构。</li></ul><ul><li>语句与语句之间，框与框之间是按从上到下的顺序进行的，它是有若干依次执行的处理步骤组成的，<strong>它是任何一个算法都离不开的一种基本算法结构。</strong></li></ul><h3 id="if选择结构"><a href="#if选择结构" class="headerlink" title="if选择结构"></a>if选择结构</h3><ul><li><p>if单选择结构</p><ul><li>我们很多时候都要去判断一个东西是否可行，然后我们才会去执行，这样一个过程在程序中用if语句来表示。</li></ul><ul><li><p><strong>语法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式为true将执行的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>练习：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 16:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入内容：&quot;</span>);</span><br><span class="line">        String s = scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//equals:判断你字符传是否相等</span></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;Hello&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;相等&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;不等&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>if双选择结构</p><ul><li><p>某公司要收购一款软件，成功了，给人支付100w，失败了，自己研发。这样的需求用一个if就搞不定了，我们需要有两个判断，需要一个双选择结构if-else</p></li><li><p><strong>语法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式值为true</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式值为false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>练习：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 16:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//考试分数大于60就及格，小于60就不及格</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>if多选择结构</p><ul><li><p>我们发现刚才代码不符合实际，真是情况可能存在ABCD，存在区间多级判断，比如90-100就是A，80-90就是B等等，生活中我们需要一个多选择结构来处理这类问题。</p></li><li><p><strong>语法:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式1值为true,执行代码</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式2值为true,执行代码</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">3</span>)&#123;</span><br><span class="line">     <span class="comment">//如果布尔表达式3值为true,执行代码</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式都不为true,执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>练习：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 16:47</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//考试分数大于60就及格，小于60就不及格</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜满分&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">100</span> &amp;&amp; score &gt;=<span class="number">90</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;A级&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">90</span> &amp;&amp; score &gt;=<span class="number">80</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;B级&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">80</span> &amp;&amp; score &gt;=<span class="number">70</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;C级&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">70</span> &amp;&amp; score &gt;=<span class="number">60</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;D级&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">60</span> &amp;&amp; score &gt;=<span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;成绩不合法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>嵌套的if结构</p><ul><li><p>使用嵌套的if…else…语句是合法的，也就是说你可以在另一个if或者else if语句中使用if或者else if语句，可以像if语句一样嵌套else if..else</p></li><li><p><strong>语法:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="comment">//如果不二表达式 1的值为true执行代码</span></span><br><span class="line">    <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="comment">//如果布尔表达式 2的值为true执行代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>思考？我们需要寻找一个数，在1~100之间</p></li></ul></li></ul><h3 id="Switch选择结构"><a href="#Switch选择结构" class="headerlink" title="Switch选择结构"></a>Switch选择结构</h3><ul><li><p>多选择结构还有一个实现方式就是switch case语句。</p></li><li><p>switch case语句判断哪一个变量与一系列值中某个值是否相等，每个值称为一个分支。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression)&#123;</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">//语句</span></span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//可选</span></span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">//语句</span></span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//可选</span></span><br><span class="line">    <span class="comment">//你个一有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">//可选</span></span><br><span class="line">        <span class="comment">//语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>switch语句中的变量类型可以是：</p><ul><li>byte、short、int或者char</li><li>从JavaSE 7开始</li><li>switch支持字符串String类型了</li><li>同时case标签必须为字符串常量或字面量</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 17:12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//switch练习</span></span><br><span class="line">       <span class="comment">// char grade = &#x27;A&#x27;;</span></span><br><span class="line">        String grade =<span class="string">&quot;A&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩等级：&quot;</span>);</span><br><span class="line">        grade=scanner.next();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反编译  java----class(字节码文件) ----反编译(IDEA)方法：直接把class文件放到IDEA项目</span></span><br><span class="line">        <span class="keyword">switch</span>(grade)&#123;<span class="comment">//这里String类型通过.hashCode找到相应的数字编码</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;B&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;一般&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;D&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;再接再厉&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;挂科&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;未知等级&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="While循环详解"><a href="#While循环详解" class="headerlink" title="While循环详解"></a>While循环详解</h3><ul><li><p>while循环</p><ul><li><p>while是最基本的循环，它的结构为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//循环内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>只要布尔表达式为true，循环就会一直执行下去。</p></li><li><p>我们大多数情况会让循环停下来的，需要一个让表达式失效的方式来结束循环。</p></li><li><p>少部分情况需要循环一直执行，比如服务器的请求响应监听等。</p></li><li><p>循环条件一直为ture就会造成无限循环(死循环)，我们正常的业务编程中应该尽量避免死循环，会影响程序性能或者造成程序卡死奔溃。</p></li><li><p>思考：计算1+2+3+…+100=?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">            sum=sum+i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br></pre></td></tr></table></figure></li><li><p>练习：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出1~100</span></span><br><span class="line">       <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>(i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">           i++;</span><br><span class="line">           System.out.println(i);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="DoWhile循环"><a href="#DoWhile循环" class="headerlink" title="DoWhile循环"></a>DoWhile循环</h3><ul><li><p>对于while语句而言，如果不满足条件，则不能进入循环，但有时候我们需要即使不满足条件，叶子很少执行一次。</p></li><li><p>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">//代码语句</span></span><br><span class="line">&#125;<span class="keyword">while</span>(布尔表达式)</span><br></pre></td></tr></table></figure></li><li><p>while和do-while的区别：</p><ul><li>while先判断后执行，dowhile是先执行判断。</li><li>do…while总是保证循环体会被至少执行一次，这是他们的主要差别。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> a =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(a&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(a&lt;<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="For循环详解"><a href="#For循环详解" class="headerlink" title="For循环详解"></a>For循环详解</h3><ul><li><p>虽然所有循环结构都可以用while或者do…while表示，但Java提供了另一种语句for循环，使一些循环结构变得更加简单。</p></li><li><p>for循环语句是支持迭代的一种通用结构，是最有效、最灵活的循环结构。</p></li><li><p>for循环执行的次数是在执行前就确定的，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化;布尔表达式;更新)&#123;</span><br><span class="line">    <span class="comment">//代码语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>练习：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;<span class="comment">//初始化条件</span></span><br><span class="line">  </span><br><span class="line">       <span class="keyword">while</span>(a&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">           System.out.println(a);</span><br><span class="line">           a+=<span class="number">2</span>;<span class="comment">//迭代</span></span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;while循环结束&quot;</span>);</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">           System.out.println(i);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//100.for</span></span><br><span class="line">       System.out.println(<span class="string">&quot;for循环结束&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>练习1：计算0~100之间的奇数和偶数的和。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//练习1 计算0~100之间的奇数和偶数的和</span></span><br><span class="line">      <span class="keyword">int</span> oddSum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> evenSum =<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">              oddSum+=i;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              evenSum+=i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;奇数的和&quot;</span>+oddSum);</span><br><span class="line">      System.out.println(<span class="string">&quot;偶数的和&quot;</span>+evenSum);</span><br></pre></td></tr></table></figure></li><li><p>练习2：用while或for循环输出1~1000之间能被5整除的数，并且每行输出3个。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//练习2：用while或for循环输出1~1000之间能被5整除的数，并且每行输出3个</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">               System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(i%(<span class="number">5</span>*<span class="number">3</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">               System.out.println();<span class="comment">//换行</span></span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p>练习3：打印九九乘法表</p></li></ul><h3 id="打印九九乘法表"><a href="#打印九九乘法表" class="headerlink" title="打印九九乘法表"></a>打印九九乘法表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印九九乘法表</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= j; i++) &#123;</span><br><span class="line">               System.out.print(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+(j*i)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h3><ul><li><p>Java5引入了一种主要用于数组或集合的增强型for循环。</p></li><li><p>Java增强for循环语法格式如下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句：表达式)&#123;</span><br><span class="line">    <span class="comment">//代码句子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>声明语句：声明新的局部变量，该变形量的类型必须和数组元素的类型匹配，其作用域限定在循环语句块，其值与此时数组元素的值相等。</p></li><li><p>表达式：表达式是要访问的数组名，或者是返回值的数组的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> [] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//遍历数组的元素</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> x:numbers)&#123;</span><br><span class="line">          System.out.println(x);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="break、continue、goto"><a href="#break、continue、goto" class="headerlink" title="break、continue、goto"></a>break、continue、goto</h3><ul><li>break在任何循环语句的主体部分，均可用break控制循环的流程。break用于强行退出循环，不执行循环中剩余的语句。(break语句也在switch语句中使用)</li><li>continue用在循环语句中，主要用来终止某次循环过程，即跳过循环体中尚未执行的语句，接着进行下一次是否执行循环的判定。</li></ul><ul><li><p><strong>关于goto关键字</strong></p><ul><li>goto关键字很早就在程序设计语言中出现，尽管goto仍是Java的一个保留字，但并未在语言中得到正式使用；Java没有goto。然而，在break和continue这两个关键字身上，我们仍然能看出一些goto的影子，带标签的break和continue。</li><li>“标签”是指后面跟一个冒号的标识符，例如：<code>label:</code></li><li>对Java来说唯一用到标签的地方是在循环语句之前，而在循环之前设置标签的唯一理由是：我们希望在其中嵌套另一个循环，由于break和continue关键字通常只中断当前循环，若将它们同标签使用，它们就会中断到存在标签的地方。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 20:03</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//break</span></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//跳出循环，程序未终止</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//continue</span></span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//跳到循环开始</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印101~150之间的所有 质数(大于1的自然数中，除了1和它本身外不在有其他因素的自然数)</span></span><br><span class="line">        <span class="comment">// 标签写法</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        outer:<span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">101</span>; i1 &lt; <span class="number">150</span>; i1++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i2 = <span class="number">2</span>; i2 &lt; i1/<span class="number">2</span>; i2++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i1 % i2 ==<span class="number">0</span>)&#123;</span><br><span class="line">                   <span class="keyword">continue</span> outer;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(i1+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="打印三角形及Debug"><a href="#打印三角形及Debug" class="headerlink" title="打印三角形及Debug"></a>打印三角形及Debug</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/11 - 20:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo13</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//打印三角形  5行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">5</span>; j &gt;= i; j--) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印三角形 5行  第二种方法</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=<span class="number">5</span>-i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;=<span class="number">2</span>*i-<span class="number">1</span>; k++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java基础</title>
      <link href="/2021/08/10/javaSE1_2/"/>
      <url>/2021/08/10/javaSE1_2/</url>
      
        <content type="html"><![CDATA[<h2 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h2><blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=21">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>Java中的注释有三种</p><ul><li><p>单行注释 </p></li><li><p>多行注释</p></li><li><p>文档注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//单行注释</span></span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">    多行注释</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    文档注释</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *               ii.                                         ;9ABH,          </span></span><br><span class="line"><span class="comment"> *              SA391,                                    .r9GG35&amp;G          </span></span><br><span class="line"><span class="comment"> *              &amp;#ii13Gh;                               i3X31i;:,rB1         </span></span><br><span class="line"><span class="comment"> *              iMs,:,i5895,                         .5G91:,:;:s1:8A         </span></span><br><span class="line"><span class="comment"> *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        </span></span><br><span class="line"><span class="comment"> *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        </span></span><br><span class="line"><span class="comment"> *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        </span></span><br><span class="line"><span class="comment"> *               :SB9s:,............................,,,.,,,SASh53h,1G.       </span></span><br><span class="line"><span class="comment"> *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       </span></span><br><span class="line"><span class="comment"> *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       </span></span><br><span class="line"><span class="comment"> *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&amp;5.:X1       </span></span><br><span class="line"><span class="comment"> *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&amp;s       </span></span><br><span class="line"><span class="comment"> *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       </span></span><br><span class="line"><span class="comment"> *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&amp;BGi..,,,,,,,,,,,,.,83      </span></span><br><span class="line"><span class="comment"> *      G5.G8  9#@@@@<span class="doctag">@X</span>. .,,,,,,.....  iA9,.S&amp;B###@<span class="doctag">@Mr</span>...,,,,,,,,..,.;Xh     </span></span><br><span class="line"><span class="comment"> *      Gs.X8 S@@@@@@<span class="doctag">@B</span>:..,,,,,,,,,,. rA1 ,A@@@@@@@@<span class="doctag">@H</span>:........,,,,,,.iX:    </span></span><br><span class="line"><span class="comment"> *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@<span class="doctag">@M</span>;    ....,,,,,,,,S8    </span></span><br><span class="line"><span class="comment"> *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@<span class="doctag">@Hs</span>       ...,,,,,,,:Gs   </span></span><br><span class="line"><span class="comment"> *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  </span></span><br><span class="line"><span class="comment"> *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  </span></span><br><span class="line"><span class="comment"> *  .Si      ,:.i8HBMMMMMB&amp;5,....                    .            .,,,,,.sMr</span></span><br><span class="line"><span class="comment"> *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5</span></span><br><span class="line"><span class="comment"> *  91  .    ;:.,1&amp;@@@@@<span class="doctag">@MXs</span>.                            .          .,,:,:&amp;S</span></span><br><span class="line"><span class="comment"> *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99</span></span><br><span class="line"><span class="comment"> *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83</span></span><br><span class="line"><span class="comment"> *   s&amp;: ....  .sS553B@<span class="doctag">@HX</span>3s;,.    .,;13h.                            .:::&amp;1</span></span><br><span class="line"><span class="comment"> *    SXr  .  ...;s3G99XA&amp;X88Shss11155hi.                             ,;:h&amp;,</span></span><br><span class="line"><span class="comment"> *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  </span></span><br><span class="line"><span class="comment"> *      ,8X5;   .     .......                                       ,;iihS8Gi</span></span><br><span class="line"><span class="comment"> *         1831,                                                 .,;irrrrrs&amp;@</span></span><br><span class="line"><span class="comment"> *           ;5A8r.                                            .:;iiiiirrss1H</span></span><br><span class="line"><span class="comment"> *             :X@H3s.......                                .,:;iii;iiiiirsrh</span></span><br><span class="line"><span class="comment"> *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1</span></span><br><span class="line"><span class="comment"> *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h</span></span><br><span class="line"><span class="comment"> *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h</span></span><br><span class="line"><span class="comment"> *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111</span></span><br><span class="line"><span class="comment"> *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h3><p><strong>常见关键字：</strong></p><table><thead><tr><th align="center">abstract</th><th align="center">assert</th><th align="center">boolean</th><th align="center">break</th><th align="center">byte</th></tr></thead><tbody><tr><td align="center">case</td><td align="center">catch</td><td align="center">char</td><td align="center">class</td><td align="center">const</td></tr><tr><td align="center">continue</td><td align="center">default</td><td align="center">do</td><td align="center">double</td><td align="center">else</td></tr><tr><td align="center">enum</td><td align="center">extends</td><td align="center">final</td><td align="center">finally</td><td align="center">float</td></tr><tr><td align="center">for</td><td align="center">goto</td><td align="center">if</td><td align="center">implements</td><td align="center">import</td></tr><tr><td align="center">instanceof</td><td align="center">int</td><td align="center">interfact</td><td align="center">long</td><td align="center">native</td></tr><tr><td align="center">new</td><td align="center">package</td><td align="center">private</td><td align="center">protected</td><td align="center">public</td></tr><tr><td align="center">return</td><td align="center">strictfp</td><td align="center">short</td><td align="center">static</td><td align="center">super</td></tr><tr><td align="center">switch</td><td align="center">synchronized</td><td align="center">this</td><td align="center">throw</td><td align="center">throws</td></tr><tr><td align="center">transient</td><td align="center">try</td><td align="center">void</td><td align="center">volatile</td><td align="center">while</td></tr></tbody></table><p><strong>标识符注意点</strong></p><ul><li>所有标识服都应该是以字母，$，_ 开始。</li><li>首字母之后可以是字母，$，_，或数字的任何字符组合。</li><li><strong>不能使用关键字作为变量名和方法名。</strong></li><li><strong>严格区分大小写</strong>。</li></ul><h3 id="数据类型讲解"><a href="#数据类型讲解" class="headerlink" title="数据类型讲解"></a>数据类型讲解</h3><ul><li>强类型语言<ul><li>要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用。</li></ul></li><li>弱类型语言</li></ul><ul><li><p>Java的数据类型分为两大类</p><ul><li><p>基本类型(primitive type)</p><p><a href="https://imgtu.com/i/fYSCkt"><img src="https://z3.ax1x.com/2021/08/10/fYSCkt.png" alt="fYSCkt.png"></a></p></li><li><p>引用类型(reference type)：类，接口，数组</p></li></ul></li></ul><p><strong>什么是字节</strong></p><ul><li><p>位(bit)：是计算机内部数据储存的最小单位，11001100是一个八位二进制数。</p></li><li><p>字节(byte)：是计算机中数据处理的基本单位，习惯上用大写B来表示。</p></li><li><p>1B(byte,字节) = 8bit(位)。</p></li><li><p>字符：是指计算机中使用的字母、数字、字和符号。</p></li></ul><ul><li>1bit表示1位,</li><li>1Byte表示1字节1B=8b，</li><li>1024B=1KB</li><li>1024M=1G</li></ul><h3 id="数据类型扩展及面试题讲解"><a href="#数据类型扩展及面试题讲解" class="headerlink" title="数据类型扩展及面试题讲解"></a>数据类型扩展及面试题讲解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        <span class="comment">//整数拓展：    进制   二进制0b  十进制  八进制0  十六进制0x</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> i2 = <span class="number">010</span>; <span class="comment">//八进制0</span></span><br><span class="line">        <span class="keyword">int</span> i3 = <span class="number">0x10</span>; <span class="comment">//十六进制0x  0~9 A~F 16</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(i3);</span><br><span class="line">        System.out.println(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">        <span class="comment">//====================================</span></span><br><span class="line">        <span class="comment">//浮点数拓展？  银行业务怎么表示？$/￥</span></span><br><span class="line">        <span class="comment">// BigDecimal   数学工具类</span></span><br><span class="line">        <span class="comment">//====================================</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//float    有限   离散  舍入误差   大约  接近但不等于</span></span><br><span class="line">        <span class="comment">//double</span></span><br><span class="line">        <span class="comment">//最好完全用浮点数比较</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">0.1f</span>;  <span class="comment">//0.1</span></span><br><span class="line">        <span class="keyword">double</span> d = <span class="number">1.0</span>/<span class="number">10</span>;  <span class="comment">//0.1</span></span><br><span class="line">        System.out.println(f==d); <span class="comment">//false</span></span><br><span class="line">        System.out.println(f);</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">float</span> d1 = <span class="number">2321312312321f</span>;</span><br><span class="line">        <span class="keyword">float</span> d2 = d1+<span class="number">1</span>;</span><br><span class="line">        System.out.println(d1==d2); <span class="comment">//ture</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//====================================</span></span><br><span class="line">        <span class="comment">//字符拓展？</span></span><br><span class="line">        <span class="comment">//====================================</span></span><br><span class="line">        System.out.println(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span> c1 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">char</span> c2 = <span class="string">&#x27;人&#x27;</span>;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println((<span class="keyword">int</span>)c1); <span class="comment">//强制转换</span></span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println((<span class="keyword">int</span>)c2); <span class="comment">//强制转换</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">// 编码  Unicode 表：(97=a 65=A) 2字节   0 - 65536 Excel  2^16 = 65536</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// U0000 UFFFF</span></span><br><span class="line">        <span class="keyword">char</span> c3 = <span class="string">&#x27;\u0062&#x27;</span>;</span><br><span class="line">        System.out.println(c3); <span class="comment">//b</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//转义字符</span></span><br><span class="line">        <span class="comment">// \t  制表符</span></span><br><span class="line">        <span class="comment">// \n  换行</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello\nWorld&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">        String sa = <span class="keyword">new</span> String(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        String sb = <span class="keyword">new</span> String(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        System.out.println(sa==sb);</span><br><span class="line"></span><br><span class="line">        String sc = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        String sd = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        System.out.println(sc==sd);</span><br><span class="line">        <span class="comment">//对象 从内存分析</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//布尔值扩展</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="keyword">true</span>)&#123;&#125; <span class="comment">//新手</span></span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;&#125; <span class="comment">//老手</span></span><br><span class="line">        <span class="comment">//less is More  代码简介易读</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li>由于Java是强类型语言，所以要进行有些运算的时候，需要用到类型转换。</li></ul><p><code>低 ---------------------------------------------高</code></p><p><code>byte,short,char -&gt; int -&gt; long -&gt; float -&gt; double</code></p><ul><li>运算中，不同类型的数组先转换为同一类型，然后进行运算。</li><li>强制类型转换</li><li>自动类型转换</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">128</span>;</span><br><span class="line">        <span class="keyword">byte</span> b = (<span class="keyword">byte</span>)i; <span class="comment">//造成内存溢出</span></span><br><span class="line">        <span class="keyword">double</span> c = i;</span><br><span class="line">        <span class="comment">//强制转换 (类型)变量名  高-&gt;低</span></span><br><span class="line">        <span class="comment">//自动转换  低-&gt;高</span></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         注意点：</span></span><br><span class="line"><span class="comment">          1. 不能对布尔值进行转换</span></span><br><span class="line"><span class="comment">          2. 不能把对象类型转换为不相干的类型</span></span><br><span class="line"><span class="comment">          3. 再把高容量转换到低容量的时候，需要强制转换</span></span><br><span class="line"><span class="comment">          4. 转换的时候可能存在内存溢出或精度问题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">        System.out.println((<span class="keyword">int</span>)<span class="number">23.6</span>);</span><br><span class="line">        System.out.println((<span class="keyword">int</span>)-<span class="number">45.99f</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span> d = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">int</span> e =d+<span class="number">1</span>;</span><br><span class="line">        System.out.println(e);<span class="comment">//98</span></span><br><span class="line">        System.out.println((<span class="keyword">char</span>)e); <span class="comment">//b</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//操作比较大的数字，注意溢出问题</span></span><br><span class="line">        <span class="comment">//jdk7特性  数字之间可以用下划线分割</span></span><br><span class="line">        <span class="keyword">int</span> money = <span class="number">10_0000_0000</span>;</span><br><span class="line">       <span class="comment">// System.out.println(money);</span></span><br><span class="line">        <span class="keyword">int</span> years = <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> total = money*years; <span class="comment">//-1474836480 溢出</span></span><br><span class="line">        System.out.println(total);</span><br><span class="line">        <span class="keyword">long</span> total2 = money*years;<span class="comment">//默认是int 在转换前就已经溢出了</span></span><br><span class="line">        System.out.println(total2);</span><br><span class="line">        <span class="keyword">long</span> total3 = money*(<span class="keyword">long</span>)years;<span class="comment">//单独对可能溢出的内容进行转换</span></span><br><span class="line">        System.out.println(total3);</span><br><span class="line">       <span class="comment">// L多用大写 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量、常量、作用域"><a href="#变量、常量、作用域" class="headerlink" title="变量、常量、作用域"></a>变量、常量、作用域</h3><p><strong>变量：</strong></p><ul><li><p>变量是什么：就是可以变化的量。</p></li><li><p>Java是一种强类型语言，每个变量都必须声明其类型。</p></li><li><p>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和<strong>作用域</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type varName [=value] [&#123;,varName[=value]&#125;];</span><br><span class="line"><span class="comment">//数据类型  变量名 = 值; 可以使用逗号隔开来声明多个同类型变量</span></span><br></pre></td></tr></table></figure></li><li><p>注意事项</p><ul><li>每个变量都有类型，类型可以是基本类型，也可以是引用类型。</li><li>变量名必须是合法的标识符。</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.operator;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 16:53</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性：变量</span></span><br><span class="line">    <span class="comment">//实例变量：从属于对象 不初始化为默认值</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// int a b c</span></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>;<span class="comment">//不推荐这种写法</span></span><br><span class="line">        String name = <span class="string">&quot;game&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> x = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">        <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line">        <span class="comment">//局部变量 必须声明和初始胡</span></span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">10</span>;</span><br><span class="line">        System.out.println(i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//new 对象</span></span><br><span class="line">        Demo04 demo4 = <span class="keyword">new</span> Demo04();</span><br><span class="line">        System.out.println(demo4.age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>常量：</strong></p><ul><li><p>常量(Constant): 初始化(initialize)后不能再改变值！不会变动的值。</p></li><li><p>所谓常量可以理解成一种特殊的变量，他的值被设定后，再程序运行过程中不允许被改变。</p><p><code>final 常量名 = 值</code></p><p><code>final double PI=3.14;</code></p></li><li><p>常量名一般使用大写字符。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 17:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">    <span class="comment">//修饰符 不存在先后顺序</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>变量的命名规范</strong></p><ul><li>所有变量、方法、类名：<strong>见名知意</strong>。</li><li>类成员变量：首字母小写和驼峰原则：monthSalary</li><li>局部变量：首字母小写和驼峰原则。</li><li>常量：大写字母和下划线：MAX_VALUE</li><li>类名：首字母大写和驼峰原则：Man,GoodMan</li><li>方法名：首字母小写和驼峰原则：run(), runRun()</li></ul><h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><ul><li><p>Java<strong>语言支持如下运算符</strong></p><ul><li>算数运算符：<code>+,-,*,/,%,++,--</code></li><li>赋值运算符：<code>=</code></li><li>关系运算符：<code>&gt;,&lt;,&gt;=,&lt;=,==,!= instanceof</code></li><li>逻辑运算符：<code>&amp;&amp;,||,!</code></li><li>位运算符：<code>&amp;,|,^,~,&gt;&gt;,&lt;&lt;,&gt;&gt;</code>(仅了解)</li><li>条件运算符：<code>?,:</code></li><li>扩展赋值运算符：<code>+=,-=,*=,/=</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 20:07</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//二元运算符</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">        System.out.println(a + b);</span><br><span class="line">        System.out.println(a - b);</span><br><span class="line">        System.out.println(a * b);</span><br><span class="line">        System.out.println(a / (<span class="keyword">double</span>) b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//拓展</span></span><br><span class="line">        <span class="keyword">long</span> c = <span class="number">23123123213L</span>;</span><br><span class="line">        <span class="keyword">int</span> d = <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">short</span> e = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">byte</span> f = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(c + d + e + f);<span class="comment">//Long</span></span><br><span class="line">        System.out.println(d + e + f);<span class="comment">//int</span></span><br><span class="line">        System.out.println(e + f);<span class="comment">//int</span></span><br><span class="line">        <span class="comment">//============================</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关系运算符返回结果：正确，错误，布尔值</span></span><br><span class="line">        <span class="keyword">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b1 = <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> c1 = <span class="number">21</span>;</span><br><span class="line">        System.out.println(a1&gt;b1);</span><br><span class="line">        System.out.println(a1&lt;b1);</span><br><span class="line">        System.out.println(a1==b1);</span><br><span class="line">        System.out.println(a1!=b1);</span><br><span class="line">        System.out.println(c1%a1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="自增自减运算符、初始Math类"><a href="#自增自减运算符、初始Math类" class="headerlink" title="自增自减运算符、初始Math类"></a>自增自减运算符、初始Math类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 20:18</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ++ --  自增 自减 一元运算符</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> b = a++; <span class="comment">//执行完代码后，先赋值给b，再自增</span></span><br><span class="line">        <span class="keyword">int</span> c = ++a;<span class="comment">//执行完代码后，先自增，在赋值给c</span></span><br><span class="line"></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//拓展 幂运算 2^3  2*2*2=8 (基本数学运算，Java中用Math)</span></span><br><span class="line">        System.out.println(Math.pow(<span class="number">2</span>,<span class="number">3</span>));<span class="comment">//pow返回一个double类型</span></span><br><span class="line">        <span class="comment">//很多运算使用一些工具类来实现</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符、位运算符"><a href="#逻辑运算符、位运算符" class="headerlink" title="逻辑运算符、位运算符"></a>逻辑运算符、位运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 20:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//逻辑运算符</span></span><br><span class="line">        <span class="comment">//  与&amp;  或|  非!</span></span><br><span class="line">        <span class="keyword">boolean</span> a = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;a &amp;&amp; b:&quot;</span>+(a&amp;&amp;b));</span><br><span class="line">        System.out.println(<span class="string">&quot;a || b:&quot;</span>+(a||b));</span><br><span class="line">        System.out.println(<span class="string">&quot;!(a&amp;&amp;b):&quot;</span>+!(a&amp;&amp;b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//短路运算</span></span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">boolean</span> d = (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>);</span><br><span class="line">        System.out.println(d);</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//位运算符</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          A = 0011 1100;</span></span><br><span class="line"><span class="comment">          B = 0000 1101;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          A&amp;B = 0000 1100;</span></span><br><span class="line"><span class="comment">          A/B = 0011 1101;</span></span><br><span class="line"><span class="comment">          A^B = 0011 0001</span></span><br><span class="line"><span class="comment">          ~B  = 1111 0010</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          2*8 = 16   2*2*2*2</span></span><br><span class="line"><span class="comment">          &lt;&lt;左移  *2</span></span><br><span class="line"><span class="comment">          &gt;&gt;右移  /2</span></span><br><span class="line"><span class="comment">          0000 0000   0</span></span><br><span class="line"><span class="comment">          0000 0001   1</span></span><br><span class="line"><span class="comment">          0000 0010   2</span></span><br><span class="line"><span class="comment">          0000 0011   3</span></span><br><span class="line"><span class="comment">          0000 0100   4</span></span><br><span class="line"><span class="comment">          0000 1000   8</span></span><br><span class="line"><span class="comment">          0001 0000   16</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三元运算符及小结"><a href="#三元运算符及小结" class="headerlink" title="三元运算符及小结"></a>三元运算符及小结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 20:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        a+=b;  <span class="comment">//a=a+b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a-=b;  <span class="comment">//a=a-b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串连接符  +  ,  String</span></span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>+a+b);<span class="comment">//先拼接</span></span><br><span class="line">        System.out.println(a+b+<span class="string">&quot;&quot;</span>);<span class="comment">//先运算</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//三元运算符</span></span><br><span class="line">        <span class="comment">//  x ? y :z</span></span><br><span class="line">        <span class="comment">//如果x== true, 则结果为y,否则结果为z</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> score = <span class="number">80</span>;</span><br><span class="line">        String type = score&lt;<span class="number">60</span>?<span class="string">&quot;不及格&quot;</span>:<span class="string">&quot;及格&quot;</span>;</span><br><span class="line">        System.out.println(type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h3><ul><li><p>为了更好地组织类，Java提供了包机制，用于区别类名的命名空间。</p></li><li><p>包语法的语法格是为：</p><p><code>package pkg1[. pkg2[.pkg3...]]</code></p></li><li><p><strong>一般利用公司域名倒置作为包名</strong>。</p></li><li><p>为了能够使用某一个包的成员，我们需要再Java程序中明确导入该包。使用”import”来导入。</p><p><code>import package1[.package2...].(classname|*)</code></p></li></ul><h3 id="JavaDoc生成文档"><a href="#JavaDoc生成文档" class="headerlink" title="JavaDoc生成文档"></a>JavaDoc生成文档</h3><ul><li>JavaDoc命令使用来生成自己API文档的。</li></ul><ul><li><p>参数信息</p><ul><li>@author 作者名</li><li>@version 版本号</li><li>@since 指明需要最早使用的JDK版本</li><li>@param 参数名</li><li>@return 返回值情况</li><li>@throws 异常抛出情况</li></ul><p><strong>dos命令生成doc文档：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">javadoc</span> <span class="string">-encoding</span> <span class="string">UTF-8</span> <span class="string">-charset</span> <span class="string">UTF-8</span> <span class="string">类名.java</span></span><br></pre></td></tr></table></figure><p><strong>IDEA如何生成JavaDoc文档</strong></p><ul><li><p>准备需要生成JavaDoc文档的类</p></li><li><p>tools-&gt;GenerateJavaDoc，配置local为``zh_CN<code>，OCLA为：</code>-encoding UTF-8 -charset UTF-8`</p></li><li><p>点击OK便可以生成JavaDoc文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jokerdig.base;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Joker大雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/8/10 - 21:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.8</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Doc</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaSE】Java入门</title>
      <link href="/2021/08/09/javaSE1_1/"/>
      <url>/2021/08/09/javaSE1_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>推荐免费Java基础入门视频：<a href="https://www.bilibili.com/video/BV12J41137hu?p=13">【狂神说Java】Java零基础学习视频通俗易懂_哔哩哔哩_bilibili</a></p></blockquote><h3 id="Java帝国的诞生"><a href="#Java帝国的诞生" class="headerlink" title="Java帝国的诞生"></a>Java帝国的诞生</h3><blockquote><p>前言：</p><p>1972年C诞生</p><p>  贴近硬件，运行快，效率高</p><p>  操作系统，编译器，数据库，网络系统等</p><p>  指针和内存管理</p><p>1982年C++诞生</p><p>  面向对象，兼容C，主要用于图形和游戏领域</p></blockquote><p>基于Java开发的开源内容：</p><ul><li>构建工具：Ant,<strong>Maven</strong>,Jekis</li><li>应用服务器：<strong>Tomcat</strong>,Jetty,Jboss,Websphere,weblogic</li><li>Web开发：Struts,<strong>Spring</strong>,Hibernate,<strong>myBatis</strong></li><li>开发工具：Eclipse,Netbean,<strong>Intellij idea</strong>,Jbuilder</li><li>……</li><li>2006: Hadoop(大数据领域)</li><li>2008：Android(手机端)</li><li>一个伟大的帝国诞生了</li></ul><h3 id="Java的特性和优势"><a href="#Java的特性和优势" class="headerlink" title="Java的特性和优势"></a>Java的特性和优势</h3><ul><li>简单性</li><li>面向对象</li><li>可移植型</li><li>高性能</li><li>分布式</li><li>动态性</li><li>多线程</li><li>安全性</li><li>见状性</li></ul><h3 id="Java三大版本"><a href="#Java三大版本" class="headerlink" title="Java三大版本"></a>Java三大版本</h3><ul><li><p>Write Once、Run Anywhere</p></li><li><p>JavaSE：标准版（桌面程序，控制台开发…）</p></li><li><p><del>JavaME</del>：嵌入式开发（手机，小家电…）<em>基本用不到了</em></p></li><li><p>JavaEE：企业级开发（web段，服务器开发…）</p></li></ul><h3 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK JRE JVM"></a>JDK JRE JVM</h3><ul><li><p>JDK：Java Development Kit</p></li><li><p>JRE：Java Runtime Environment</p></li><li><p>JVM：Java Virtual Machine</p><p><a href="https://imgtu.com/i/fGEgu8"><img src="https://z3.ax1x.com/2021/08/09/fGEgu8.png" alt="fGEgu8.png"></a></p></li></ul><h3 id="Java安装开发环境"><a href="#Java安装开发环境" class="headerlink" title="Java安装开发环境"></a>Java安装开发环境</h3><ul><li><p>JDK下载与安装</p><blockquote><p>JDK8：<a href="https://www.oracle.com/cn/java/technologies/javase/javase-jdk8-downloads.html">下载地址</a><strong>（推荐）</strong></p><p>JDK11：<a href="https://www.oracle.com/cn/java/technologies/javase-jdk11-downloads.html">下载地址</a></p><p>JDK16：<a href="https://www.oracle.com/java/technologies/javase-jdk16-downloads.html">下载地址</a></p></blockquote></li><li><p>配置环境变量</p><ul><li>创建JAVA_HOME中为JDK安装路径</li><li>在path中添加<code>%JAVA_HOME%\bin;</code>和<code>%JAVA_HOME%\jre\bin;</code></li></ul></li><li><p>JDK目录介绍</p></li><li><p>HelloWorld 及 简单语法规则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Notepad++安装和使用</p><blockquote><p><a href="https://notepad.software/download/">下载 – Notepad++</a></p></blockquote></li></ul><h3 id="Hello-World详解"><a href="#Hello-World详解" class="headerlink" title="Hello World详解"></a>Hello World详解</h3><ul><li>javac 编译java文件</li><li>java 运行class文件</li></ul><h3 id="编译型和解释型"><a href="#编译型和解释型" class="headerlink" title="编译型和解释型"></a>编译型和解释型</h3><ul><li>编译型</li><li>解释型</li></ul><ul><li><p>程序运行机制</p><p><img src="https://z3.ax1x.com/2021/08/09/fG1Zmn.png" alt="运行机制"></p></li></ul><h3 id="使用IDEA开发"><a href="#使用IDEA开发" class="headerlink" title="使用IDEA开发"></a>使用IDEA开发</h3><p><a href="https://www.jetbrains.com/zh-cn/idea/">IntelliJ IDEA官网</a>（正版需付费购买）<strong>推荐</strong></p><p><a href="https://www.eclipse.org/downloads/packages/release/2021-06/r/eclipse-ide-enterprise-java-and-web-developers">Eclipse IDE </a>（免费开发工具）</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【表情包】第一款自制表情包</title>
      <link href="/2021/08/09/wechatgif1/"/>
      <url>/2021/08/09/wechatgif1/</url>
      
        <content type="html"><![CDATA[<p>微信：<a href="https://sticker.weixin.qq.com/cgi-bin/mmemoticon-bin/emoticonview?oper=single&t=shop/detail&productid=aL2PCfwK/89qO7sF6/+I+UDhfwEjhec2ZNvdnLLJRd/PJaOeyx9/XgIYWtFGqudPoKs80CBjLeEn0X3VkF4oZoTql1NlHztcT14P6yN2brYs=">【像素小方】微信表情 - 来自微信表情商店，扫二维码下载表情 (qq.com)</a></p><p>QQ：<a href="#">敬请期待</a></p><p>表情包部分截图：<a href="https://imgtu.com/i/f8OU0K"><img src="https://z3.ax1x.com/2021/08/09/f8OU0K.png" alt="f8OU0K.png"></a></p><p>感兴趣小伙伴欢迎下载使用哦( •̀ ω •́ )✧</p><p><em>像素风</em></p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信表情包 </tag>
            
            <tag> pixelart </tag>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Dos】Windows常见的dos命令</title>
      <link href="/2021/08/09/dos/"/>
      <url>/2021/08/09/dos/</url>
      
        <content type="html"><![CDATA[<p><strong>Dos：Disk Operating System 磁盘操作系统</strong></p><ol><li>切换盘符 <code>cd</code>（Tab键可以自动补全）</li><li>查看当前目录下的所有文件 <code>dir</code></li><li>清理屏幕 <code>cls</code></li><li>返回上一级目录 <code>cd ../</code> </li><li>查看电脑IP <code>ipconfig</code></li><li>诊断网络连接 <code>ping jokerdig.com</code></li><li>打开计算器 <code>calc</code></li><li>打开画板 <code>mspaint</code></li><li>打开记事本 <code>notepad</code></li><li>新建目录 <code>md +目录名</code></li><li>新建文件 <code>cd &gt; 文件名</code> </li><li>删除文件 <code>del + 文件名</code> </li><li>移除目录 <code>rd +目录名</code> </li><li>查看本机系统信息 <code>systeminfo</code></li><li>设置定时关机 <code>shutdown -s -t +秒数</code></li><li>取消定时关机 <code>shutdown -a</code></li><li>查看当前系统进程及端口号 <code>netstat -ano</code></li><li>退出Dos窗口 <code>exit</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dos命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Mybatis】Mybatis逆向工程</title>
      <link href="/2021/06/25/mybatisReverse/"/>
      <url>/2021/06/25/mybatisReverse/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是逆向工程"><a href="#什么是逆向工程" class="headerlink" title="什么是逆向工程"></a>什么是逆向工程</h3><p>   逆向工程需要程序员自己编写sql语句，mybatis官方提供逆向工程，可以针对单表自动生成mybatis执行所需要的代码（mapper，xml，pojo等）</p><p>   企业实际开发中，常用的逆向工程方式：由数据库的表生成java代码。</p><blockquote><p>   配置文件下载：</p><p>   蓝奏云：<a href="https://wwa.lanzoui.com/ighM0qoeybe">下载地址</a> 密码:joker</p><p>   百度云：<a href="https://pan.baidu.com/s/1SAUPJAxOX6IzrMV7JqrFWQ">下载地址</a> 提取码：bf2f</p></blockquote><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>   a)    新建Java Project,导入包(在下方配置文件中)。</p><p>   b)    引入log4j.properties,逆向工程需要的配置文件及生成代码程序。(如下图)</p><p>​    <a href="https://imgtu.com/i/RlwvZt"><img src="https://z3.ax1x.com/2021/06/25/RlwvZt.png" alt="RlwvZt.png"></a></p><p>   c)    修改db.properties数据库用户名和密码</p><p><a href="https://imgtu.com/i/Rl0hlQ"><img src="https://z3.ax1x.com/2021/06/25/Rl0hlQ.md.png" alt="Rl0hlQ.md.png"></a></p><p>  d）   在src下创建lib文件夹，导入配置文件中给的所有包（记得将包导入开发工具）。</p><p><a href="https://imgtu.com/i/RlrALd"><img src="https://z3.ax1x.com/2021/06/25/RlrALd.md.png" alt="RlrALd.md.png"></a></p><h3 id="生成代码配置文件"><a href="#生成代码配置文件" class="headerlink" title="生成代码配置文件"></a>生成代码配置文件</h3><p>创建<strong>generatorConfig.xml</strong>：拷贝该文件到<strong>src</strong>目录下（配置如下）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;testTables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/数据库名&quot;</span> <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--高版本MySQL--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--  &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span></span><br><span class="line"><span class="comment">connectionURL=&quot;jdbc:mysql://localhost:3306/数据库名?characterEncoding=utf8&quot;                       userId=&quot;root&quot; password=&quot;密码&quot;&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ORACLE--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;jdbcConnection driverClass=&quot;oracle.jdbc.OracleDriver&quot;</span></span><br><span class="line"><span class="comment">connectionURL=&quot;jdbc:oracle:thin:@127.0.0.1:1521:orcl&quot; </span></span><br><span class="line"><span class="comment">userId=&quot;scott&quot;</span></span><br><span class="line"><span class="comment">password=&quot;tiger&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/jdbcConnection&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 </span></span><br><span class="line"><span class="comment">NUMERIC 类型解析为java.math.BigDecimal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- targetProject:生成PO类的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.hp.pojo&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetProject</span>=<span class="string">&quot;.\src&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.hp.mapper&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">targetProject</span>=<span class="string">&quot;.\src&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetPackage</span>=<span class="string">&quot;com.hp.mapper&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">targetProject</span>=<span class="string">&quot;.\src&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定要生成数据库中的表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;table&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;table2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;table3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意将xml配置文件改为自己的。</p><p><a href="https://imgtu.com/i/Rls04P"><img src="https://z3.ax1x.com/2021/06/25/Rls04P.md.png" alt="Rls04P.md.png"></a><br><a href="https://imgtu.com/i/RlsD9f"><img src="https://z3.ax1x.com/2021/06/25/RlsD9f.md.png" alt="RlsD9f.md.png"></a></p><h3 id="创建生成程序"><a href="#创建生成程序" class="headerlink" title="创建生成程序"></a>创建生成程序</h3><p>在<strong>src</strong>目录下创建<strong>GeneratorSqlmap.java</strong>，并执行。（代码如下）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneratorSqlmap</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generator</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"><span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line"><span class="comment">//指定 逆向工程配置文件</span></span><br><span class="line">File configFile = <span class="keyword">new</span> File(<span class="string">&quot;src/generatorConfig.xml&quot;</span>); </span><br><span class="line">ConfigurationParser cp = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(config,</span><br><span class="line">callback, warnings);</span><br><span class="line">myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">GeneratorSqlmap generatorSqlmap = <span class="keyword">new</span> GeneratorSqlmap();</span><br><span class="line">generatorSqlmap.generator();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生成后的目录结构"><a href="#生成后的目录结构" class="headerlink" title="生成后的目录结构"></a>生成后的目录结构</h3><p>如下图所示，为逆向生成的实体类和mapper配置文件。</p><p><a href="https://imgtu.com/i/Rl30fI"><img src="https://z3.ax1x.com/2021/06/25/Rl30fI.png" alt="Rl30fI.png"></a></p><h3 id="报错及总结"><a href="#报错及总结" class="headerlink" title="报错及总结"></a>报错及总结</h3><p>注意:MySQL高版本的URL地址为：jdbc:mysql://localhost:3306/youyougou?characterEncoding=utf8</p><p>结束。( •̀ ω •́ )✧（有什么问题你请在下方评论区友好交流）</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> 逆向工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SSM】jdbcType关系映射对应表</title>
      <link href="/2021/06/21/jdbcType/"/>
      <url>/2021/06/21/jdbcType/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center"></th><th align="center"><strong>JdbcType</strong></th><th align="center"><strong>Oracle</strong></th><th align="center"><strong>MySql</strong></th></tr></thead><tbody><tr><td align="center">JdbcType</td><td align="center">ARRAY</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">BIGINT</td><td align="center"></td><td align="center">BIGINT</td></tr><tr><td align="center">JdbcType</td><td align="center">BINARY</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">BIT</td><td align="center"></td><td align="center">BIT</td></tr><tr><td align="center">JdbcType</td><td align="center">BLOB</td><td align="center">BLOB</td><td align="center">BLOB</td></tr><tr><td align="center">JdbcType</td><td align="center">BOOLEAN</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">CHAR</td><td align="center">CHAR</td><td align="center">CHAR</td></tr><tr><td align="center">JdbcType</td><td align="center">CLOB</td><td align="center">CLOB</td><td align="center">修改为TEXT</td></tr><tr><td align="center">JdbcType</td><td align="center">CURSOR</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">DATE</td><td align="center">DATE</td><td align="center">DATE</td></tr><tr><td align="center">JdbcType</td><td align="center">DECIMAL</td><td align="center">DECIMAL</td><td align="center">DECIMAL</td></tr><tr><td align="center">JdbcType</td><td align="center">DOUBLE</td><td align="center">NUMBER</td><td align="center">DOUBLE</td></tr><tr><td align="center">JdbcType</td><td align="center">FLOAT</td><td align="center">FLOAT</td><td align="center">FLOAT</td></tr><tr><td align="center">JdbcType</td><td align="center">INTEGER</td><td align="center">INTEGER</td><td align="center">INTEGER</td></tr><tr><td align="center">JdbcType</td><td align="center">LONGVARBINARY</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">LONGVARCHAR</td><td align="center">LONG VARCHAR</td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">NCHAR</td><td align="center">NCHAR</td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">NCLOB</td><td align="center">NCLOB</td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">NULL</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">NUMERIC</td><td align="center">NUMERIC/NUMBER</td><td align="center">NUMERIC</td></tr><tr><td align="center">JdbcType</td><td align="center">NVARCHAR</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">OTHER</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">REAL</td><td align="center">REAL</td><td align="center">REAL</td></tr><tr><td align="center">JdbcType</td><td align="center">SMALLINT</td><td align="center">SMALLINT</td><td align="center">SMALLINT</td></tr><tr><td align="center">JdbcType</td><td align="center">STRUCT</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">TIME</td><td align="center"></td><td align="center">TIME</td></tr><tr><td align="center">JdbcType</td><td align="center">TIMESTAMP</td><td align="center">TIMESTAMP</td><td align="center">TIMESTAMP/DATETIME</td></tr><tr><td align="center">JdbcType</td><td align="center">TINYINT</td><td align="center"></td><td align="center">TINYINT</td></tr><tr><td align="center">JdbcType</td><td align="center">UNDEFINED</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">VARBINARY</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">JdbcType</td><td align="center">VARCHAR</td><td align="center">VARCHAR</td><td align="center">VARCHAR</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdbcType </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【日常】一段有趣的话(一)</title>
      <link href="/2021/06/12/life1/"/>
      <url>/2021/06/12/life1/</url>
      
        <content type="html"><![CDATA[<p>我们总是容易用一种自虐的方式制造出一种痴情的假象来使得自己站在感情的道德制高点上，获得一种畸形的满足感和安全感。其实无论是雪夜去对方家楼下站会儿或者是冒着大雨给她送一杯奶茶什么的，自己回想起来往往觉得如乔峰大战聚贤庄、关羽千里走单骑一样壮怀激烈，而对于对方来说，一杯奶茶就是一杯奶茶，无法承载起你想要在上面寄托的山崩地裂的情怀。</p><p>少年的时候，总是迫不及待地将自己的满腔爱意表达出来，而结果往往是陷入表演之中而不自知。所以两个人的记忆才会出现偏差，那些你觉得刻骨铭心的过去，对方往往没有同样的感觉，甚至茫然不知。</p><p>成长的标志就是懂得克制自己。</p><p>克制自己的情绪，克制自己的表演欲，甚至克制自己的喜欢。少年时候，喜欢一个人恨不能把她变成自己身体的一部分，她刚说冷，我这边心里已经结冰了，她说难过，我立马如丧考妣，比她还难过，唯恐无法将自己的爱意表达出来。</p><p>而事实上，谁也无法承担起另一个人的价值寄托，只有做一个独立、有价值的人，才能真正学会去爱另一个人。也千万不要尝试改变另一个人，这注定是徒劳的。做自己就好，爱情的真谛在于相互的吸引、志趣相投的同行，而不是追逐和依附以及自我感动。</p><blockquote><p>内容转载于小黑盒评论区，如果你是内容原创请在评论区留言或致电首页邮箱。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Oracle】Oracle删除</title>
      <link href="/2021/06/07/oracleDelete/"/>
      <url>/2021/06/07/oracleDelete/</url>
      
        <content type="html"><![CDATA[<h3 id="1-关闭oracle"><a href="#1-关闭oracle" class="headerlink" title="1. 关闭oracle"></a>1. 关闭oracle</h3><p>   ​    先关掉oralce，<em>net stop OracleServiceORCL</em>(ORCL是我的实例名字，换成你的)，或者去我的电脑服务中关闭。</p><h3 id="2-卸载oracle"><a href="#2-卸载oracle" class="headerlink" title="2. 卸载oracle"></a>2. 卸载oracle</h3><p>   ​    开始－＞程序－＞Oracle - oracle的版本号，我的是10ghome－＞Oracle Installation Products－＞ Universal Installer 卸载oracle。</p><h3 id="3-删除注册表"><a href="#3-删除注册表" class="headerlink" title="3. 删除注册表"></a>3. 删除注册表</h3><p>   ​    进注册表，win+R -&gt; regedit，删除选择HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE下所有的key。</p><p>   <strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services、HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application</strong></p><p>   这个里面所有oracle字眼的内容进行删除。</p><h3 id="4-删除C盘下oracle文件"><a href="#4-删除C盘下oracle文件" class="headerlink" title="4. 删除C盘下oracle文件"></a>4. 删除C盘下oracle文件</h3><p>   ​    删除c盘\Program Files\Oracle目录的东西以及oracle安装目录下所有的文件以及文件夹。</p><h3 id="5-删除环境变量"><a href="#5-删除环境变量" class="headerlink" title="5. 删除环境变量"></a>5. 删除环境变量</h3><p>   ​    环境变量中删除有关oracle的classpath和path。</p><p>   到这里就大功告成了，完毕( •̀ ω •́ )✧</p>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【派大星】一个关于正常人的故事</title>
      <link href="/2021/04/27/video1/"/>
      <url>/2021/04/27/video1/</url>
      
        <content type="html"><![CDATA[<p>  推荐刷过的一个视频，假装更新，使用b站的分享，所有播放量都归视频原作者，博主仅转载。</p><div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=60731116&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 派大星 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文档</title>
      <link href="/2021/02/21/test/"/>
      <url>/2021/02/21/test/</url>
      
        <content type="html"><![CDATA[<h3 id="这是一个测试文档"><a href="#这是一个测试文档" class="headerlink" title="这是一个测试文档"></a>这是一个测试文档</h3><ul><li><input checked="" disabled="" type="checkbox"> 测试</li><li><input checked="" disabled="" type="checkbox"> 睡觉</li><li><input checked="" disabled="" type="checkbox"> 背单词</li><li><input checked="" disabled="" type="checkbox"> 写代码</li></ul><p>测试图片</p><p><a href="https://jokerdig.com/" title="一个神奇的网站">Hey,Joker</a></p><p><img src="https://gitee.com/jokerdig/jokerdig-db/raw/master/images/202109221521315.jpg"></p><blockquote><p>作者：JokerDaxiong</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【博客搭建】hexo+Github搭建静态个人博客</title>
      <link href="/2021/02/12/hexo/"/>
      <url>/2021/02/12/hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="静态博客搭建步骤"><a href="#静态博客搭建步骤" class="headerlink" title="静态博客搭建步骤"></a>静态博客搭建步骤</h3><ol><li><p>下载nodeJS：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p></li><li><p>安装 一键式</p></li><li><p> cmd &gt;查询node和npm的版本，确认安装成功</p></li></ol>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">node</span> <span class="string">-v</span>  <span class="comment">#查询node版本</span></span><br><span class="line"><span class="string">npm</span> <span class="string">-v</span>  <span class="comment">#查询npm版本</span></span><br></pre></td></tr></table></figure><ol start="4"><li>使用npm安装cnpm（国内使用淘宝镜像加速下载）</li></ol>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">cnpm</span> <span class="string">--registry=https://registry.npm.taobao.org</span></span><br><span class="line"><span class="string">cnpm</span> <span class="string">-v</span>    <span class="comment">#确认版本号（安装结束后）</span></span><br></pre></td></tr></table></figure><ol start="5"><li>全局安装hexo（Git或cmd）</li></ol>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cnpm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span>  <span class="comment">#全局安装hexo</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">-v</span> <span class="comment">#确认hexo版本号（安装结束后）</span></span><br></pre></td></tr></table></figure><ol start="6"><li><p>在c或d 盘建立一个空文件夹（下方以d:/blog为例）</p></li><li><p>cmd进入该文件夹后，用hexo生成博客</p></li></ol>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span>  <span class="comment">#初始化hexo  （此建议处用git窗口）</span></span><br></pre></td></tr></table></figure><ol start="8"><li>本地预览生成的默认博客</li></ol>   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">s</span> <span class="comment">#本地预览</span></span><br><span class="line"><span class="string">localhost:4000</span> <span class="comment">#本地地址复制到浏览器即可 （ctrl+c关闭）</span></span><br></pre></td></tr></table></figure><ol start="9"><li><p>发布到github</p></li><li><p>创建github账号</p></li><li><p>并创建一个仓库，命名为：<strong>你的github昵称.github.io</strong></p></li><li><p>在本地blog文件安装一个git部署插件</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-deployer-git</span> <span class="string">--save</span>  <span class="comment">#在git或cmd到blog目录下输入</span></span><br></pre></td></tr></table></figure><ol start="11"><li>设置blog目录下_config.yml文件_最后的deploy如下</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你新建的仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>  <span class="comment">#注意，main是现在github的默认分支，每个冒号后有一个空格 </span></span><br></pre></td></tr></table></figure><p>​    </p><ol start="12"><li>将博客部署到GitHub仓库</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">在blog下打开cmd或git</span> <span class="string">输入：</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">clean</span> <span class="comment">#清除</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">g</span> <span class="comment">#生成</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">d</span> <span class="comment">#部署</span></span><br></pre></td></tr></table></figure><p>最后，输入你的仓库名称到浏览器即可访问<br>​    </p><p>  这只是搭建完成，还可以更改主题，美化博客！</p><p>  网上有相当多美化博客教程可以参考</p><p>  暂时挖个坑，有时间在填 。<del>绝对不是因为我懒</del></p><hr><blockquote><p>作者：JokerDaxiong </p><p>博客：<a href="%22Hey,Joker%22">Jokerdig.com</a></p><p>时间：2021-2-18</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
